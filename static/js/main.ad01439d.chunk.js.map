{"version":3,"sources":["test-data/3_lip_2020_19_43_42_1593804563614.gpx","test-data/WOJTEK.kml","components/TrackDrawer/TrackDrawer.tsx","components/leafletElementStyles.ts","state/routes/routesReducer.ts","utils/getPolylineLayer.ts","utils/analyseRoutes.ts","state/routes/routesActions.ts","state/track/trackReducer.ts","state/store.ts","components/GpxLoader.tsx","components/RouteAnalyser/RouteAnalyser.tsx","components/RouteAnalyser/AnalysisDrawer.tsx","state/track/trackActions.ts","components/KmlLoader.tsx","components/LeafletMap.tsx","styles/theme.ts","components/Uploader/Uploader.tsx","components/Button.tsx","components/RouteStep/RouteRecord.tsx","components/RouteStep/RouteStep.tsx","components/Table.tsx","utils/gatherAnalysisData.ts","components/SummaryStep/RouteSummary.tsx","components/SummaryStep/SummaryStep.tsx","utils/exportData.ts","components/Sidebar/Sidebar.tsx","components/Alert.tsx","components/FragmentEditor/FragmentEditor.tsx","components/RouteLayersContextProvider.tsx","App.tsx","index.tsx"],"names":["module","exports","drawControl","ROUTE_LINE_STYLE_BASE","weight","color","lineCap","ROUTE_LINE_STYLE_ONTRACK","ROUTE_LINE_STYLE_OFFTRACK","ROUTE_LINE_STYLE_UNKNOWN","dashArray","ROUTE_LINE_HOVER","createRoute","name","content","id","uuidv4","initialState","entries","analysis","selected","getRoutes","state","routes","getRoutesAnalysis","getSelectedPolyline","findSelectedPolyline","createSelector","analyses","Object","values","selectedPolyline","find","polyline","getPolylineLayer","route","layers","getLayers","layer","L","Polyline","analysePoint","routePoint","track","polygon","i","length","inTrack","FeatureGroup","Path","pointFeature","point","lng","lat","geoJsonPolygon","Circle","circle","toGeoJSON","geometry","coordinates","getRadius","steps","units","Polygon","getLatLngs","booleanPointInPolygon","performRouteAnalysis","routePolyline","routeLatLngs","fragments","currentPoint","nextPoint","timeDelta","meta","time","valueOf","pointOnTrack","lastFragment","type","latLngs","push","fragment","filter","e","addRoute","payload","analyseRoutes","trackLayer","dispatch","getState","console","log","routeLayers","gpx","polylineLayer","Error","routeAnalysis","runRouteAnalysis","routesAnalysed","overrideAnalysis","analysisId","getTrack","rootReducer","combineReducers","action","analysis_id","map","RouteLayersContext","React","createContext","setGpx","options","require","gpx_options","joinTrackSegments","marker_options","startIconUrl","pinIconStart","endIconUrl","pinIconEnd","shadowUrl","pinShadow","polyline_options","GpxLoader","useLeaflet","useSelector","useContext","useDispatch","useEffect","process","forEach","GPX","addTo","remove","bounds","reduce","carry","extend","getBounds","composeBounds","fitBounds","TrackDrawer","drawingMode","position","draw","marker","circlemarker","edit","featureGroup","Control","Draw","addLayer","addControl","removeControl","on","Event","CREATED","RouteAnalyser","runAnalysis","useCallback","callback","eventHandler","EDITED","DELETED","off","registerLeafletEventListeners","drawFragments","selectPolyline","offtrackMarkersLayer","clearLayers","offtrackFragmentsLayer","ontrackMarkersLayer","ontrackFragmentsLayer","style","getRouteLineStyle","setStyle","AnalysisDrawer","trackEmpty","keys","selectPolylineFn","selectPolylineAction","key","removeLayer","hasLayer","loadTrack","KmlLoader","kmlContent","DOMParser","parseFromString","KML","fireEvent","LeafletMap","useState","zoom","className","Map","center","zoomControl","preferCanvas","LayersControl","BaseLayer","checked","TileLayer","attribution","url","ZoomControl","ScaleControl","imperial","palette","fontSize","body","12","14","16","18","20","24","30","36","48","space","4","8","32","64","96","128","preset","colors","text","textLight","background","primary","secondary","muted","gray","highlight","header","fonts","heading","monospace","fontSizes","fontWeights","bold","lineHeights","radii","default","shadows","card","input","marginRight","padding","border","boxShadow","fontFamily","lineHeight","fontWeight","letterSpacing","h1","marginBottom","h2","h3","h4","display","caps","textTransform","iconButtonText","marginLeft","routeName","whiteSpace","overflow","textOverflow","editable","instruction","variants","backgroundColor","justifyContent","alignItems","sidebar","borderRadius","popup","variant","marginTop","px","py","overflowX","container","label","description","alert","iconContainer","width","height","icon","link","nav","routeSummary","pb","table","textAlign","borderSpacing","th","td","borderBottom","borderColor","highlightedRow","buttons","cursor","bg","outline","primaryOutline","secondaryOutline","greenOutline","destructive","destructiveOutline","grayOutline","github","chevron","theme","uppy","Uppy","autoProceed","restrictions","allowedFileTypes","readFile","file","Promise","resolve","reject","fileReader","FileReader","onload","result","onerror","readAsText","Uploader","a","info","data","extension","removeFile","locale","strings","dropHereOr","browse","Button","children","restProps","LinkButton","props","as","Link","ExternalLinkButton","href","RebassLink","RouteNameInput","defaultValue","onAccept","ref","useRef","current","focus","onBlur","value","RouteName","onChange","isEditing","setIsEditing","sx","onClick","RouteRecord","mb","minHeight","changeRouteName","flexWrap","flexShrink","RouteStep","amountOfRoutes","Table","forwardRef","TableHead","TableBody","TableRow","TableHeadCell","TableDataCell","getFormattedDurationLength","start","end","diff","moment","utc","format","gatherAnalysisData","distance","get_distance","get_start_time","toString","get_end_time","get_moving_speed","get_total_speed","get_elevation_min","get_elevation_max","routeLength","offtrackIntervals","intervals","calculateOfftrackIntervals","offtrackIntervalsSum","secondsSum","sumOfftrackIntervals","startTime","endTime","toFixed","movingSpeed","totalSpeed","elevationMin","elevationMax","index","duration","RouteSummary","RouteData","AnalysisRow","interval","isSelected","scrollIntoView","behavior","block","undefined","RouteAnalysisTable","colSpan","SummaryStep","exportData","workbook","ExcelJS","Workbook","sheet","addWorksheet","nameRow","getRow","firstColumn","getCell","intervalIndex","xlsx","writeBuffer","buffer","download","byte","blob","Blob","document","createElement","window","URL","createObjectURL","click","SidebarContainer","sidebarCollapsed","zIndex","cx","collapsed","flexDirection","SidebarContent","setSidebarCollapsed","path","to","CollapsedSidebarContent","Sidebar","Alert","flex","FragmentEditor","selectedPolylineData","showOverrideOfftrackButton","showOverrideOntrackButton","showOverrideUnknownButton","maxWidth","left","top","transition","emptyTrackLayer","RouteLayersContextProvider","setContext","newLayers","shouldUpdate","markers","LayerGroup","createLayers","Provider","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","marker2x","iconUrl","markerShadow","store","middlewares","thunk","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureStore","App","ReactDOM","render","getElementById"],"mappings":"uIAAAA,EAAOC,QAAU,IAA0B,+D,oBCA3CD,EAAOC,QAAU,IAA0B,oC,kECwBvCC,E,4NCtBSC,EAAqC,CAChDC,OAAQ,EACRC,MAAO,UACPC,QAAS,QAGEC,EAAwC,CACnDF,MAAO,WAGIG,EAAyC,CACpDH,MAAO,WAGII,EAAwC,CACnDJ,MAAO,UACPK,UAAW,QAGAC,EAAgC,CAC3CP,OAAQ,I,sDCAJQ,EAAc,SAACC,EAAcC,GACjC,MAAO,CACLC,GAAIC,cACJH,OACAC,YAcEG,EAA4B,CAChCC,QAAS,GACTC,SAAU,GACVC,SAAU,MAgICC,EAAY,SAACC,GAAD,OAA6BA,EAAMC,OAAOL,SACtDM,EAAoB,SAACF,GAAD,OAC/BA,EAAMC,OAAOJ,UACFM,EAAsB,SAACH,GAAD,OACjCA,EAAMC,OAAOH,UACFM,EAAuBC,YAClCH,GACA,SAACF,GAAD,OAAWA,EAAMC,OAAOH,YACxB,SAACQ,EAAUR,GACT,GAAKA,EAML,IAFA,IAEA,MAFeS,OAAOC,OAAOF,GAE7B,eAA+B,CAA1B,IAAMT,EAAQ,KACjB,GAAKA,EAAL,CAIA,IAAMY,EAAmBZ,EAASa,MAChC,SAACC,GAAD,OAAcA,EAASlB,KAAOK,EAASL,MAGzC,GAAIgB,EACF,OAAOA,O,0CClMFG,EAAmB,SAACC,GAE/B,IAAMC,EAAUD,EAAME,YAAY,GAAsBA,YAFS,uBAIjE,YAAkBD,EAAlB,+CAA0B,CAAC,IAAlBE,EAAiB,QACxB,GAAMA,aAAiBC,IAAEC,SAIzB,OAAOF,GATwD,kFAYjE,OAAO,MCmBHG,EAAe,SAAfA,EACJC,EACAC,GAIA,IAFA,IArBwBC,EAqBlBR,EAASO,EAAMN,YAEZQ,EAAI,EAAGA,EAAIT,EAAOU,OAAQD,IAAK,CACtC,IAAMP,EAAQF,EAAOS,GAEjBE,GAAU,EAOd,GALIT,aAAiBC,IAAES,eAErBD,EAAUN,EAAaC,EAAYJ,IAGjCA,aAAiBC,IAAEU,KAAM,CAC3B,IAAMC,EAAeC,gBAAM,CAACT,EAAWU,IAAKV,EAAWW,MACjDC,GAnCcV,EAmCoBN,aAlCrBC,IAAEgB,OAChBC,IACLZ,EAAQa,YAAYC,SAASC,YAC7Bf,EAAQgB,YACR,CAAEC,MAAO,GAAIC,MAAO,WAEblB,aAAmBL,IAAEwB,QACvBnB,EAAQa,YACNb,aAAmBL,IAAEC,SACL,IAAID,IAAEwB,QAAQnB,EAAQoB,cACvBP,YAGnB,KAuBH,GAAuB,OAAnBH,EACF,SAGFP,EAAUkB,IAAsBf,EAAcI,GAGhD,GAAKP,EAIL,OAAOA,EAGT,OAAO,GAGHmB,EAAuB,SAC3BC,EACAxB,GAKA,IAHA,IAAMyB,EAAeD,EAAcH,aAC7BK,EAA4B,GAEzBxB,EAAI,EAAGA,EAAIuB,EAAatB,OAAQD,IAAK,CAC5C,IAAMyB,EAAeF,EAAavB,GAC5B0B,EAAYH,EAAavB,EAAI,GAC7B2B,EAAYD,GACL,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWE,KAAKC,KAAKC,WAAYL,EAAaG,KAAKC,KAAKC,UACxD,EAEEC,EAAenC,EAAa6B,EAAc3B,GAE5CkC,EAAeR,EAAUA,EAAUvB,OAAS,GAYhD,GAVK+B,IACHA,EAAe,CACb9D,GAAIC,cACJ8D,KAAMF,EAAe,UAAY,WACjCG,QAAS,IAGXV,EAAUW,KAAKH,IAGbL,EAAY,IAAO,CACrBK,EAAaE,QAAQC,KAAKV,GAC1B,IAAMW,EAA0B,CAC9BlE,GAAIC,cACJ8D,KAAM,UACNC,QAAS,IAEXV,EAAUW,KAAKC,GAEfA,EAASF,QAAQC,KAAKV,QACjB,GAAIM,EAAc,CACvB,IAAIK,EAAWJ,EAEW,aAAtBA,EAAaC,MAA6C,YAAtBD,EAAaC,OACnDD,EAAaE,QAAQC,KAAKV,GAC1BW,EAAW,CACTlE,GAAIC,cACJ8D,KAAM,UACNC,QAAS,IAEXV,EAAUW,KAAKC,IAGjBA,EAASF,QAAQC,KAAKV,OACjB,CACL,IAAIW,EAAWJ,EAEW,YAAtBA,EAAaC,MAA4C,YAAtBD,EAAaC,OAClDD,EAAaE,QAAQC,KAAKV,GAC1BW,EAAW,CACTlE,GAAIC,cACJ8D,KAAM,WACNC,QAAS,IAEXV,EAAUW,KAAKC,IAGjBA,EAASF,QAAQC,KAAKV,IAI1B,OAAOD,EAAUa,QAAO,SAACC,GAAD,OAAOA,EAAEJ,QAAQjC,OAAS,MCrEvCsC,EAAW,SAACvE,EAAcC,GAAf,MAAoD,CAC1EgE,KAAM,YACNO,QAAS,CAAExE,OAAMC,aAaNwE,EACX,SACElD,EACAmD,GAFF,OAIA,SAACC,EAAUC,GACT,IAAMnE,EAAQmE,IAGR7D,EDgDmB,SAC3BV,EACAkB,EACAO,GAEA+C,QAAQC,IAAI,uBAEZ,IACI/D,EAAW,GAEf,GAHgD,IAA7Be,EAAMN,YAAYS,OAInC,OAAOlB,EAIT,cAAsBC,OAAOX,QAAQA,GAArC,eAA+C,CAAC,IAApCiB,EAAmC,uBACvCyD,EAAcxD,EAAOD,EAAMpB,IAEjC,GAAI,OAAC6E,QAAD,IAACA,OAAD,EAACA,EAAaC,IAAlB,CAIA,IAAMC,EAAgB5D,EAAiB0D,EAAYC,KAEnD,IAAKC,EACH,MAAM,IAAIC,MAAM,sCAGlB,IAAMC,EAAgB9B,EAAqB4B,EAAenD,GAE1Df,EAAQ,eACHA,EADG,eAELO,EAAMpB,GAAKiF,KAIhB,OAAOpE,ECpFYqE,CAFF5E,EAAUC,GAEiBc,EAAQmD,GAClDC,EAASU,EAAetE,MAWfsE,EAAiB,SAC5BtE,GAD4B,MAEF,CAC1BkD,KAAM,kBACNO,QAAS,CAAEzD,cAwBAuE,GAAmB,SAC9BpF,EACAqF,EACAtB,GAH8B,MAI1B,CACJA,KAAM,oBACNO,QAAS,CAAEtE,KAAIqF,aAAYtB,U,2BCrIvB7D,GAA2B,CAC/BH,QAAS,IAoBEuF,GAAW,SAAC/E,GAAD,OAA6BA,EAAMqB,OCJrD2D,GAAcC,2BAAkC,CACpDhF,OL2B2B,WAGV,IAAD,EAFhBD,EAEgB,uDAFRL,EACRuF,EACgB,uCAChB,OAAQA,EAAO1B,MACb,IAAK,YAEH,IAAM3C,EAAQvB,EAAY4F,EAAOnB,QAAQxE,KAAM2F,EAAOnB,QAAQvE,SAE9D,OAAO,eACFQ,EADL,CAEEJ,QAAQ,eACHI,EAAMJ,QADJ,eAEJiB,EAAMpB,GAAKoB,MAGlB,IAAK,eAAL,MAEsDb,EAAMJ,QAF5D,EAEWsF,EAAOnB,QAAQtE,GAAgBG,GAF1C,oCAGuDI,EAAMH,SAH7D,EAGWqF,EAAOnB,QAAQtE,GAAgBI,GAH1C,kCAKE,OAAO,eACFG,EADL,CAEEJ,UACAC,aAEJ,IAAK,eACH,OAAO,eACFG,EADL,CAEEJ,QAAQ,eACHI,EAAMJ,QADJ,eAEJsF,EAAOnB,QAAQtE,GAFX,eAGAO,EAAMJ,QAAQsF,EAAOnB,QAAQtE,SAKxC,IAAK,iBAMH,OAAO,eACFO,EADL,CAEEH,SAAS,eACJG,EAAMH,SADH,eAELqF,EAAOnB,QAAQtE,GAAKyF,EAAOnB,QAAQlE,aAG1C,IAAK,kBAcH,OAAO,eACFG,EADL,CAEEH,SAAUqF,EAAOnB,QAAQzD,SACzBR,SAAU,OAEd,IAAK,oBACH,OAAO,eACFE,EADL,CAEEJ,QAAQ,eACHI,EAAMJ,QADJ,eAEJsF,EAAOnB,QAAQtE,GAFX,eAGAO,EAAMJ,QAAQsF,EAAOnB,QAAQtE,IAH7B,CAIHF,KAAM2F,EAAOnB,QAAQxE,WAI7B,IAAK,kBACH,OAAK2F,EAAOnB,QAAQtE,GAOb,eACFO,EADL,CAEEF,SAAU,CACRL,GAAIyF,EAAOnB,QAAQtE,GACnB0F,YAAaD,EAAOnB,QAAQe,cAVvB,eACF9E,EADL,CAEEF,SAAU,OAWhB,IAAK,oBACH,OAAO,eACFE,EADL,CAEEH,SAAS,eACJG,EAAMH,SADH,eAELqF,EAAOnB,QAAQe,WAFV,UAEuB9E,EAAMH,SACjCqF,EAAOnB,QAAQe,mBAHX,aAEuB,EAE1BM,KAAI,SAACzB,GACN,OAAIA,EAASlE,KAAOyF,EAAOnB,QAAQtE,GAC1B,eACFkE,EADL,CAEEH,KAAM0B,EAAOnB,QAAQP,OAIlBG,SAIf,QACE,OAAO3D,IK7IXqB,MDb0B,WAGV,IAFhBrB,EAEe,uDAFPL,GACRuF,EACe,uCACf,OAAQA,EAAO1B,MACb,IAAK,aACH,OAAO,eACFxD,EADL,CAEER,QAAS0F,EAAOnB,QAAQvE,UAE5B,QACE,OAAOQ,MCeAqF,GAAqBC,IAAMC,cAAsC,CAC5EzE,OAAQ,GACRmD,WAAY,IAAIhD,IAAES,aAClB8D,OAAQ,eCnBJC,IALgBC,EAAQ,KAKF,CAC1BC,YAAa,CAEXC,mBAAmB,GAErBC,eAAgB,CAEdC,aAAcC,IACdC,WAAYC,IACZC,UAAWC,KAEbC,iBAAkBvH,IAsBPwH,GAAsB,WAAO,IAChCjB,EAAQkB,cAARlB,IAEFnF,EAASsG,YAAYxG,GAHY,EAIZyG,qBAAWnB,IAA9BvE,EAJ+B,EAI/BA,OAAQ0E,EAJuB,EAIvBA,OACVtB,EAAWuC,cAmEjB,OAjEAC,qBAAU,WACJC,IAKH,CAACzC,IAEJwC,qBAAU,WACHtB,GAIAnF,IAILM,OAAOX,QAAQK,GAAQ2G,SAAQ,YAAoB,IAAD,mBAAX/F,GAAW,WAC1CyD,EAAcxD,EAAOD,EAAMpB,IAEjC,GAAK6E,IAAeA,EAAYC,IAAhC,CAIA,IAAMA,EAAM,IAAItD,IAAE4F,IAAIhG,EAAMrB,QAASiG,IACrCD,EAAO3E,EAAMpB,GAAI8E,GACjBL,EHTyD,CAC7DV,KAAM,eACNO,QAAS,CAAEtE,GGOcoB,EAAMpB,MAY3B8E,EAAIuC,MAAMxC,EAAYxD,QACtBwD,EAAYxD,OAAOgG,MAAM1B,OAG3B7E,OAAOX,QAAQkB,GAAQ8F,SAAQ,YAAkB,IAAD,mBAAfnH,EAAe,KAAXuB,EAAW,KAC1Cf,EAAOR,IAKXuB,EAAMF,OAAOiG,eAEd,CAAC3B,EAAKnF,EAAQa,EAAQ0E,EAAQtB,IAEjCwC,qBAAU,WACR,GAAKtB,EAAL,CAKA,IAAM4B,EAnFY,SAAC/G,EAAgBa,GAGrC,OAFoBP,OAAOC,OAAOP,GAEfgH,QAAO,SAACC,EAA8BrG,GACvD,IAAMyD,EAAcxD,EAAOD,EAAMpB,IAEjC,OAAK6E,GAAgBA,EAAYC,IAI7B2C,EACKA,EAAMC,OAAO7C,EAAYC,IAAI6C,aAG/B9C,EAAYC,IAAI6C,YAPdF,IAQR,MAoEcG,CAAcpH,EAAQa,GAEjCkG,GACF5B,EAAIkC,UAAUN,MAEf,CAAClG,EAAQsE,EAAKnF,IAEV,MRlGIsH,I,OAAc,SAAC,GAA+C,IAAD,IAA5CC,mBAA4C,SAChEpC,EAAQkB,cAARlB,IACAnB,EAAeuC,qBAAWnB,IAA1BpB,WA0DR,OAxDAyC,qBAAU,WACR,IAAMjB,EAA0C,CAC9CgC,SAAU,UACVC,KAAM,CACJ/G,UAAU,EACVgH,QAAQ,EACRC,cAAc,GAEhBC,KAAM,CACJA,MAAM,EACNC,aAAc7D,IAIlBrF,EAAc,IAAIqC,IAAE8G,QAAQC,KAAKvC,KAChC,CAACL,EAAKnB,IAETyC,qBAAU,WACHtB,GAILA,EAAI6C,SAAShE,KACZ,CAACmB,EAAKnB,IAETyC,qBAAU,WACHtB,GAIAxG,IAID4I,EACFpC,EAAI8C,WAAWtJ,GAEfwG,EAAI+C,cAAcvJ,MAEnB,CAACwG,EAAKoC,IAETd,qBAAU,WACHtB,GAILA,EAAIgD,GAAGnH,IAAE+G,KAAKK,MAAMC,SAAS,SAACzE,GAG5B,IACM7C,EAD4B6C,EACd7C,MAEpBiD,EAAWgE,SAASjH,QAErB,CAACoE,EAAKnB,IAEF,OSpDIsE,GAA0B,WACrC,IAAMrE,EAAWuC,cAETrB,EAAQkB,cAARlB,IAHmC,EAIZoB,qBAAWnB,IAAlCvE,EAJmC,EAInCA,OAAQmD,EAJ2B,EAI3BA,WAEVuE,EAAcC,uBAAY,WAC9BvE,EAASF,EAAclD,EAAQmD,MAC9B,CAACnD,EAAQmD,IAWZ,OATAyC,qBACE,kBAzCkC,SACpCtB,EACAsD,GAEA,GAAKtD,EAAL,CAIAhB,QAAQC,IAAI,0CAEZ,IAAMsE,EAAe,SAAC9E,GAAD,OAAmB6E,KAQxC,OALAtD,EAAIgD,GAAGnH,IAAE+G,KAAKK,MAAMC,QAASK,GAC7BvD,EAAIgD,GAAGnH,IAAE+G,KAAKK,MAAMO,OAAQD,GAC5BvD,EAAIgD,GAAGnH,IAAE+G,KAAKK,MAAMQ,QAASF,GAC7BvD,EAAIgD,GAAG,eAAgBO,GAEhB,WAELvD,EAAI0D,IAAI7H,IAAE+G,KAAKK,MAAMC,QAASK,GAC9BvD,EAAI0D,IAAI7H,IAAE+G,KAAKK,MAAMO,OAAQD,GAC7BvD,EAAI0D,IAAI7H,IAAE+G,KAAKK,MAAMQ,QAASF,GAC9BvD,EAAI0D,IAAI,eAAgBH,KAkBlBI,CAA8B3D,EAAKoD,KACzC,CAACA,IAGH9B,qBAAU,WACRxC,EAASF,EAAclD,EAAQmD,MAC9B,CAACuE,IAEG,MCnBHQ,GAAgB,SACpBlE,EACAR,EACAvB,EACAtC,EACAwI,GAEA3E,EAAY4E,qBAAqBC,cACjC7E,EAAY8E,uBAAuBD,cACnC7E,EAAY+E,oBAAoBF,cAChC7E,EAAYgF,sBAAsBH,cAElCpG,EAAU6D,SAAQ,SAACjD,GACjB,IAAM4F,EAAK,eACN1K,EADM,GAxBW,SAAC2E,GACzB,OAAQA,GACN,IAAK,UACH,OAAOvE,EACT,IAAK,WACH,OAAOC,EACT,QACE,OAAOC,GAmBJqK,CAAkB7F,EAASH,MAFrB,IAGW,OAAhB/C,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBhB,MAAOkE,EAASlE,GAAKJ,EAAmB,IAG1DsB,EAAWM,IAAEN,SAASgD,EAASF,QAAS8F,GAE9C5I,EACGyH,GAAG,SAAS,SAAUvE,GACrBoF,EAAetF,EAASlE,GAAIqF,MAa7BsD,GAAG,aAAa,SAAUvE,GACzBlD,EAAS8I,SAAT,eAAuBF,EAAvB,GAAiClK,OAElC+I,GAAG,YAAY,SAAUvE,GACxBlD,EAAS8I,SAASF,MAEnBzC,MAAMxC,EAAY8E,4BAIZM,GAAiB,WAAO,IAC3BtE,EAAQkB,cAARlB,IACF9E,EAAWiG,YAAYrG,GACrBY,EAAW0F,qBAAWnB,IAAtBvE,OACFb,EAASsG,YAAYxG,GACrB4J,GAAcpJ,OAAOqJ,KAAKtJ,GAAUkB,OAEpC0C,EAAWuC,cACXoD,EAAmBpB,uBACvB,SAAChJ,EAAIqF,GAAL,OAAoBZ,EL4BM,SAC5BzE,EACAqF,GAF4B,MAGF,CAC1BtB,KAAM,kBACNO,QAAS,CAAEtE,KAAIqF,eKjCgBgF,CAAqBrK,EAAIqF,MACtD,CAACZ,IAEGzD,EAAmB8F,YAAYpG,GAkDrC,OAhDAuG,qBAAU,WACR,GAAKtB,EAIL,cAAyB7E,OAAOX,QAAQK,GAAxC,eAAiD,CAAC,IAAD,sBAAvC8J,EAAuC,KAAlClJ,EAAkC,KACzCyD,EAAcxD,EAAOD,EAAMpB,IAEjC,GAAI,OAAC6E,QAAD,IAACA,OAAD,EAACA,EAAaC,IAAlB,CAIA,IAAMC,EAAgB5D,EAAiB0D,EAAYC,KAEnD,IAAKC,EACH,MAAM,IAAIC,MAAM,sCAGbkF,GAEHvE,EAAI4E,YAAYxF,GAGdmF,IAAevE,EAAI6E,SAASzF,IAC9BY,EAAI6C,SAASzD,GAGf,IAAM3E,EAAWS,EAASyJ,IAAQ,GAGlCf,GACEe,EACAzF,EACAzE,EACAY,EACAoJ,OAGH,CACDzE,EACA9E,EACAG,EACAR,EACAa,EACA6I,EACAE,IAGK,MC3IIK,I,OAAY,SAAC1K,GAAD,MAAuC,CAC9DgE,KAAM,aACNO,QAAS,CAAEvE,cCgBA2K,IAfGzE,EAAQ,KAeW,WAAO,IAChCN,EAAQkB,cAARlB,IACFlB,EAAWuC,cACTxC,EAAeuC,qBAAWnB,IAA1BpB,WAEF5C,EAAQkF,YAAYxB,IA8B1B,OA5BA2B,qBAAU,WACJC,IAGH,CAACzC,IAEJwC,qBAAU,WACR,GAAKtB,IAID,OAAC/D,QAAD,IAACA,OAAD,EAACA,EAAO7B,SAAZ,CAIA,IACM4K,GADS,IAAIC,WACOC,gBAAgBjJ,EAAM7B,QAAS,YAG7C,IAAIyB,IAAEsJ,IAAIH,GAEnBrJ,YAAY,GACZA,YACA6F,SAAQ,SAAC5F,GAAD,OAAgBiD,EAAWgE,SAASjH,MAE/CoE,EAAIoF,UAAU,mBACb,CAACpF,EAAK/D,EAAO4C,IAET,OCzCIwG,GAAuB,WAAO,IAAD,EACrBC,mBAA2B,CAC5C3I,IAAK,OACLD,KAAM,MAFD2F,EADiC,sBAMzBiD,mBAAiB,IAAzBC,EANiC,oBAmBxC,OACE,yBAAKC,UAAU,iBACb,kBAACC,EAAA,EAAD,CACEC,OAAQrD,EACRkD,KAAMA,EACNI,aAAa,EACbC,cA3Bc,GA6Bd,kBAACC,EAAA,EAAD,CAAexD,SAAS,YACtB,kBAACwD,EAAA,EAAcC,UAAf,CAAyBC,SAAO,EAAC5L,KAAK,QACpC,kBAAC6L,EAAA,EAAD,CACEC,YAAY,0EACZC,IAAI,wDAGR,kBAACL,EAAA,EAAcC,UAAf,CAAyB3L,KAAK,YAC5B,kBAAC6L,EAAA,EAAD,CACEC,YAAY,6IACZC,IAAI,mGAGR,kBAACL,EAAA,EAAcC,UAAf,CAAyB3L,KAAK,YAC5B,kBAAC6L,EAAA,EAAD,CAAWE,IAAI,OAGnB,kBAACC,EAAA,EAAD,CAAa9D,SAAS,YACtB,kBAAC+D,EAAA,EAAD,CAAc/D,SAAS,aAAagE,UAAU,IAC9C,kBAAC,GAAD,MAEA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAajE,aAAa,IAC1B,kBAAC,GAAD,S,qCCnEFkE,GAAU,CAEd,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAElB,YAAa,UACb,YAAa,UACb,YAAa,UACb,YAAa,UACb,YAAa,UACb,YAAa,UACb,YAAa,UACb,YAAa,UACb,YAAa,UACb,YAAa,UAGb,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UAGjB,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,UAEd,UAAW,UACX,UAAW,UACX,UAAW,UACX,UAAW,UACX,UAAW,UACX,UAAW,UACX,UAAW,UACX,UAAW,UACX,UAAW,UACX,UAAW,UAEX,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,UACd,aAAc,WAKHC,GAAW,CACtBC,KAAM,OACNC,GAAG,GAAH,OAAO,IAAP,OACAC,GAAG,GAAH,OAAO,KAAP,OACAC,GAAG,GAAH,OAAO,EAAP,OACAC,GAAG,GAAH,OAAO,MAAP,OACAC,GAAG,GAAH,OAAO,KAAP,OACAC,GAAG,GAAH,OAAO,IAAP,OACAC,GAAG,GAAH,OAAO,MAAP,OACAC,GAAG,GAAH,OAAO,KAAP,OACAC,GAAG,GAAH,OAAO,EAAP,QAGWC,GAAQ,CACnBC,EAAE,GAAF,OAAM,IAAN,OACAC,EAAE,GAAF,OAAM,GAAN,OACAX,GAAG,GAAH,OAAO,IAAP,OACAE,GAAG,GAAH,OAAO,EAAP,OACAG,GAAG,GAAH,OAAO,IAAP,OACAO,GAAG,GAAH,OAAO,EAAP,OACAJ,GAAG,GAAH,OAAO,EAAP,OACAK,GAAG,GAAH,OAAO,EAAP,OACAC,GAAG,GAAH,OAAO,EAAP,OACAC,IAAI,GAAJ,OAAQ,EAAR,QAGIC,GAAS,CACbC,OAAQ,CACNC,KAAMrB,GAAQ,iBACdsB,UAAWtB,GAAQ,iBACnBuB,WAAY,OACZC,QAASxB,GAAQ,cACjByB,UAAWzB,GAAQ,iBACnB0B,MAAO1B,GAAQ,iBACf2B,KAAM3B,GAAQ,iBACd4B,UAAW,8BAEXC,OAAQ7B,GAAQ,kBAElB8B,MAAO,CACL5B,KAAM,8BACN6B,QAAS,UACTC,UAAW,oBAEbC,UAAWhC,GACXiC,YAAa,CACXhC,KAAM,IACN6B,QAAS,IACTI,KAAM,KAERC,YAAa,CACXlC,KAAM,IACN6B,QAAS,MAEXnB,SACAyB,MAAO,CACLC,QAAS,WAEXC,QAAS,CACPC,KAAM,+BAERC,MAAO,CACLC,YAAa9B,GAAM,GACnB+B,QAAS/B,GAAM,GACfgC,OAAQ,IACRC,UAAW,iBAGbxB,KAAM,CACJU,QAAS,CACPe,WAAY,UACZC,WAAY,UACZC,WAAY,UACZC,cAAe,OACfhD,SAAUA,GAAS,IAEnBiD,GAAI,CACFD,cAAe,OACfE,aAAcvC,GAAM,IACpBX,SAAUA,GAAS,KAErBmD,GAAI,CACFH,cAAe,OACfE,aAAcvC,GAAM,IACpBX,SAAUA,GAAS,KAErBoD,GAAI,CACFJ,cAAe,OACfE,aAAcvC,GAAM,IACpBX,SAAUA,GAAS,KAErBqD,GAAI,CACFL,cAAe,OACfE,aAAcvC,GAAM,IACpBX,SAAUA,GAAS,MAGvBsD,QAAS,CACPT,WAAY,UACZE,WAAY,UACZD,WAAY,UACZ9C,SAAU,CAACA,GAAS,IAAOA,GAAS,IAAOA,GAAS,MAEtDuD,KAAM,CACJC,cAAe,YACfR,cAAe,SAEjBS,eAAgB,CACdC,WAAY/C,GAAM,IAEpBgD,UAAW,CACTlB,YAAa9B,GAAM,GACnBiD,WAAY,SACZC,SAAU,SACVC,aAAc,WACdZ,aAAc,EACdlD,SAAUA,GAAS,IAEnB+D,SAAU,CACRtB,YAAa9B,GAAM,GACnBiD,WAAY,SACZC,SAAU,SACVC,aAAc,WACdZ,aAAc,EACdlD,SAAUA,GAAS,MAGvBgE,YAAa,CACXhE,SAAUA,GAAS,IACnB5M,MAAO,UAGX6Q,SAAU,CACRrC,OAAQ,CACNsC,gBAAiB,SACjBlB,cAAe,OACfN,QAAS/B,GAAM,IACfwD,eAAgB,gBAChBC,WAAY,UAEdC,QAAS,CAEPzB,UAAW,6BACX0B,aAAc,UACdT,SAAU,UAEZU,MAAO,CACLC,QAAS,mBACTC,UAAW9D,GAAM,IACjBuD,gBAAiB,0BAEnBrQ,QAAS,CACP6Q,GAAI/D,GAAM,IACVgE,GAAIhE,GAAM,IACVkD,SAAU,OACVe,UAAW,UAEbC,UAAW,CACT3B,aAAcvC,GAAM,KAEtBmE,MAAO,CACL5B,aAAcvC,GAAM,IAEtBoE,YAAa,CACX7B,aAAcvC,GAAM,KAEtBqE,MAAO,CACL9B,aAAcvC,GAAM,IACpBsE,cAAe,CACbX,aAAc,MACdJ,gBAAiBnE,GAAQ,cACzBmF,MAAOlF,GAAS,IAChBmF,OAAQnF,GAAS,IACjBoE,WAAY,SACZD,eAAgB,SAChB1B,YAAa9B,GAAM,IAErByE,KAAM,CACJhS,MAAO2M,GAAQ,cACf6C,UAAW,EACXF,QAAS,IAGb2C,KAAM,CACJjS,MAAO,WAETkS,IAAK,CACHZ,GAAI/D,GAAM,IACVgE,GAAIhE,GAAM,IACVwD,eAAgB,SAChBM,UAAW,OAEX,yCAA0C,CACxCf,WAAY/C,GAAM,KAGtB4E,aAAc,CACZC,GAAI7E,GAAM,KAGZ8E,MAAO,CACLP,MAAO,OACPQ,UAAW,SACXC,cAAe,GAEjBC,GAAI,CACFlB,GAAI/D,GAAM,GACVgE,GAAIhE,GAAM,IAEZkF,GAAI,CACFnB,GAAI/D,GAAM,GACVgE,GAAIhE,GAAM,GACVmF,aAAc,YACdC,YAAahG,GAAQ,kBAEvBiG,eAAgB,CACdjD,WAAY,OACZmB,gBAAiBnE,GAAQ,mBAG7BkG,QAAS,CACP1E,QAAS,CACP2E,OAAQ,UACRlG,SAAUA,GAAS,IACnB5M,MAAO,aACP+S,GAAI,UACJ7B,aAAc,UACdI,GAAI/D,GAAM,IACVgE,GAAIhE,GAAM,IAEZyF,QAAS,CACP5B,QAAS,kBACTpR,MAAO,UACP+S,GAAI,cACJvD,UAAW,iBAEbyD,eAAgB,CACd7B,QAAS,mBAEXhD,UAAW,CACTgD,QAAS,kBACTpR,MAAO,aACP+S,GAAI,aAENG,iBAAkB,CAChB9B,QAAS,kBACTpR,MAAO,aAETmT,aAAc,CACZ/B,QAAS,kBACTpR,MAAO2M,GAAQ,aACf,2CAA4C,CAC1C3M,MAAO,aACP+S,GAAIpG,GAAQ,eAGhByG,YAAa,CACXhC,QAAS,kBACT2B,GAAIpG,GAAQ,WACZ3M,MAAO,cAETqT,mBAAoB,CAClBjC,QAAS,kBACTpR,MAAO2M,GAAQ,WACf,2CAA4C,CAC1C3M,MAAO,aACP+S,GAAIpG,GAAQ,aAGhB2G,YAAa,CACXlC,QAAS,kBACTpR,MAAO2M,GAAQ,iBACf,2CAA4C,CAC1C3M,MAAO2M,GAAQ,iBACfoG,GAAIpG,GAAQ,mBAGhBqF,KAAM,CACJZ,QAAS,kBACTpR,MAAO,QACPwP,UAAW,EACXF,QAAS,GAGXiE,OAAQ,CACNnC,QAAS,kBACT5B,UAAW,EACX5C,SAAUA,GAAS,IACnB5M,MAAO,QACP,2CAA4C,CAC1CA,MAAO,YAGXwT,QAAS,CACPpC,QAAS,kBACT9B,QAAS,EACTE,UAAW,EACX5C,SAAUA,GAAS,IACnB5M,MAAO,QACP,2CAA4C,CAC1CA,MAAO,cAMFyT,GAAU,eAClB3F,GADkB,CAErBnB,a,0DCtXI+G,I,cAAOC,KAAK,CAChBC,aAAa,EACbC,aAAc,CACZC,iBAAkB,CAAC,OAAQ,YAIzBC,GAAW,SAACC,GAChB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAa,IAAIC,WAEvBD,EAAWE,OAAS,kBAAMJ,EAAQE,EAAWG,SAC7CH,EAAWI,QAAUL,EAErBC,EAAWK,WAAWT,OAIbU,GAAW,WACtB,IAAMvP,EAAWuC,cAkBjB,OAhBAC,qBAAU,WACR+L,GAAKrK,GAAG,aAAR,yCAAsB,WAAO2K,GAAP,gBAAAW,EAAA,6DACpBtP,QAAQuP,KAAKZ,GADO,SAGED,GAASC,EAAKa,MAHhB,OAGdpU,EAHc,OAKG,QAAnBuT,EAAKc,WACP3P,EAASJ,EAASiP,EAAKxT,KAAMC,IAE7BiT,GAAKqB,WAAWf,EAAKtT,KACO,QAAnBsT,EAAKc,WACd3P,EAASgG,GAAU1K,IAVD,2CAAtB,yDAaC,IAGD,kBAAC,KAAD,CACEiT,KAAMA,GACNsB,OAAQ,CACNC,QAAS,CACPC,WACE,yFACFC,OAAQ,uBCvCLC,GAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUrD,EAAb,EAAaA,KAASsD,EAAtB,0CACpB,kBAAC,KAAiBA,EACftD,GACC,uBACEnG,UAAS,UAAKmG,GACdxH,MAAO,CAAE6E,YAAagG,EAAW9H,GAAM,GAAO,KAGjD8H,IAIQE,GAAa,SAACC,GAAD,OACxB,kBAAC,GAAD,eAAQC,GAAIC,KAAUF,KAGXG,GAAqB,SAAC,GAAD,IAChCC,EADgC,EAChCA,KACGJ,EAF6B,+BAIhC,kBAAC,GAAD,eAAQC,GAAII,KAAYD,KAAMA,GAAUJ,K,SCrBpCM,GAAiB,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,SAChCC,EAAMC,iBAAyB,MAUrC,OARAvO,qBAAU,WACR,IAAMyH,EAAQ6G,EAAIE,QAEd/G,GACFA,EAAMgH,UAEP,IAGD,kBAAC,KAAD,CACEH,IAAKA,EACLvV,GAAG,OACHF,KAAK,OACLiE,KAAK,OACLsR,aAAcA,EACdM,OAAQ,kBAAML,EAASC,EAAIE,SAAWF,EAAIE,QAAQG,WAKlDC,GAAY,SAAC,GAMZ,IALL/V,EAKI,EALJA,KACAgW,EAII,EAJJA,SAII,EAC8B7K,oBAAS,GADvC,mBACG8K,EADH,KACcC,EADd,KAGJ,OAAID,EAEA,kBAAC,GAAD,CACEV,aAAcvV,EACdwV,SAAU,SAACxV,GACTkW,GAAa,GACblW,GAAQgW,EAAShW,MAOvB,kBAAC,KAAD,CAAKmW,GAAI,CAAE7D,OAAQ,WAAa8D,QAAS,kBAAMF,GAAa,KAC1D,kBAAC,KAAD,CAAStF,QAAQ,sBAAsB5Q,GACvC,kBAAC,KAAD,CAAM4Q,QAAQ,eAAd,6CAKOyF,GAAc,SAAC,GAAiC,IAA/B/U,EAA8B,EAA9BA,MACtBqD,EAAWuC,cAEjB,OACE,kBAAC,KAAD,CAAK0J,QAAQ,aACX,kBAAC,KAAD,CACE0F,GAAIvJ,GAAM,IACVoJ,GAAI,CACF5F,eAAgB,gBAChBC,WAAY,SAEZ+F,UAAWxJ,GAAM,MAGnB,kBAAC,GAAD,CACE/M,KAAMsB,EAAMtB,KACZgW,SAAU,SAAChW,GAAD,OAAkB2E,EZ+BP,SAC7BzE,EACAF,GAF6B,MAGF,CAC3BiE,KAAM,oBACNO,QAAS,CAAEtE,KAAIF,SYpC8BwW,CAAgBlV,EAAMpB,GAAIF,OAGjE,kBAAC,KAAD,CAAMmW,GAAI,CAAEM,SAAU,SAAUC,WAAY,IAO1C,kBAAC,GAAD,CACE9F,QAAQ,qBACRY,KAAK,qBACL2E,GAAI,CAAE5E,OAAQ,QACd6E,QAAS,kBAAMzR,EZrBoC,CAC7DV,KAAM,eACNO,QAAS,CAAEtE,GYmBmCoB,EAAMpB,aCvFzCyW,GAAsB,WACjC,IAAMjW,EAASsG,YAAYxG,GACrBoW,EAAiB5V,OAAOqJ,KAAK3J,GAAQuB,OAE3C,OACE,oCACE,kBAAC,KAAD,CACEmK,SAAUA,GAAS,IAEnB5M,MAAM,OACN2W,GAAI,CACFrE,UAAW,UACX9B,WAAY,WACZV,aAAcvC,GAAM,MAGtB,8EACkD,sCADlD,mLAOA,oKAMF,kBAAC,KAAD,CAAK6D,QAAQ,aACX,kBAAC,GAAD,OAGDgG,EAAiB,GAChB,kBAAC,KAAD,CAAKhG,QAAQ,aACX,kBAAC,KAAD,CAASA,QAAQ,cAAjB,8BAIgB,IAAnBgG,GACC,kBAAC,KAAD,sEACiD,sCADjD,qEAMD5V,OAAOX,QAAQK,GAAQmF,KAAI,mCAAQvE,GAAR,kBAC1B,kBAAC,GAAD,CAAakJ,IAAG,gBAAWlJ,EAAMpB,IAAMoB,MAAOA,SC3CzCuV,I,OAAyC9Q,IAAM+Q,YAC1D,SAAC9B,EAAOS,GAAR,OAAgB,kBAAC,KAAD,eAAKA,IAAKA,EAAKR,GAAG,QAAQrE,QAAQ,SAAYoE,QAOnD+B,GAAiDhR,IAAM+Q,YAClE,SAAC9B,EAAOS,GAAR,OAAgB,kBAAC,KAAD,eAAKA,IAAKA,EAAKR,GAAG,QAAQrE,QAAQ,SAAYoE,OAOnDgC,GAAiDjR,IAAM+Q,YAClE,SAAC9B,EAAOS,GAAR,OAAgB,kBAAC,KAAD,eAAKA,IAAKA,EAAKR,GAAG,QAAQrE,QAAQ,SAAYoE,OAOnDiC,GAA+ClR,IAAM+Q,YAChE,SAAC9B,EAAOS,GAAR,OAAgB,kBAAC,KAAD,eAAKA,IAAKA,EAAKR,GAAG,KAAKrE,QAAQ,MAASoE,OAO7CkC,GACXnR,IAAM+Q,YAAW,SAAC9B,EAAOS,GAAR,OACf,kBAAC,KAAD,eAAKA,IAAKA,EAAKR,GAAG,KAAKrE,QAAQ,MAASoE,OAO/BmC,GACXpR,IAAM+Q,YAAW,SAAC9B,EAAOS,GAAR,OACf,kBAAC,KAAD,eAAKA,IAAKA,EAAKR,GAAG,KAAKrE,QAAQ,MAASoE,O,oBCrBtCoC,GAA6B,SACjCC,EACAC,GAEA,IAAMC,EAAOD,EAAIC,KAAKF,GACtB,OAAOG,KAAOC,IAAIF,GAAMG,OAAO,aAuCpBC,GAAqB,SAChC3S,EACA1E,GAGA,IAAMsX,EAAW5S,EAAI6S,eACfC,EAAiB9S,EAAI8S,iBAAiBC,WACtCC,EAAehT,EAAIgT,eAAeD,WAIlCE,EAAmBjT,EAAIiT,mBACvBC,EAAkBlT,EAAIkT,kBACtBC,EAAoBnT,EAAImT,oBACxBC,EAAoBpT,EAAIoT,oBAOxBC,EAAcjB,GAClBI,KAAOM,GACPN,KAAOQ,IAGHM,EA9D2B,SAAChY,GAClC,OAAOA,EACJuF,KAAI,SAACiQ,GACJ,GAAmB,YAAfA,EAAM7R,MAAqC,YAAf6R,EAAM7R,KACpC,OAAO,KAGT,IAAMsU,EAAoC,CACxCzC,EAAM5R,QAAQ,GACd4R,EAAM5R,QAAQ4R,EAAM5R,QAAQjC,OAAS,IAGvC,MAAO,CACL/B,GAAI4V,EAAM5V,GACVqY,gBAGHlU,QAAO,SAACyR,GAAD,OAAqB,OAAVA,KA6CK0C,CAA2BlY,GAAY,IAC3DmY,EA3CqB,SAACH,GAC5B,IAAMI,EAAaJ,EAAkB5Q,QACnC,SAACC,EAAD,GAAqD,IAAnC4Q,EAAkC,EAAlCA,UACVlB,EAAQG,KAAOe,EAAU,GAAG3U,KAAKC,MAKvC,OADA8D,GAHY6P,KAAOe,EAAU,GAAG3U,KAAKC,MACpB0T,KAAKF,KAKxB,GAGF,OAAOG,KAAOC,IAAIiB,GAAYhB,OAAO,YA8BRiB,CAAqBL,GAElD,MAAO,CACLM,UAAWpB,KAAOM,GAAgBJ,SAClCmB,QAASrB,KAAOQ,GAAcN,SAC9BW,cACAT,SAAS,GAAD,OAAKA,EAASkB,QAAQ,GAAtB,MACRC,YAAY,GAAD,OAAKd,EAAiBa,QAAQ,GAA9B,SACXE,WAAW,GAAD,OAAKd,EAAgBY,QAAQ,GAA7B,SACVG,aAAa,GAAD,OAAKd,EAAL,MACZe,aAAa,GAAD,OAAKd,EAAL,MACZE,kBAAmBA,EAAkBzS,KAAI,WAAoBsT,GAAW,IAA5BjZ,EAA2B,EAA3BA,GAAIqY,EAAuB,EAAvBA,UACxClB,EAAQG,KAAOe,EAAU,GAAG3U,KAAKC,MACjCyT,EAAME,KAAOe,EAAU,GAAG3U,KAAKC,MAErC,MAAO,CACLsV,MAAOA,EAAQ,EACfjZ,KACAmX,MAAOA,EAAMK,OAAO,YACpBJ,IAAKA,EAAII,OAAO,YAChB0B,SAAUhC,GAA2BC,EAAOC,OAGhDmB,yBC3GE1C,GAAY,SAAC,GAAgC,IAA9B/V,EAA6B,EAA7BA,KACnB,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAS4Q,QAAQ,aAAa5Q,KAKvBqZ,GAAe,SAAC,GAQtB,IAPL/X,EAOI,EAPJA,MACAhB,EAMI,EANJA,SACA0E,EAKI,EALJA,IAMA,IAAK1E,EACH,OAAO,KAGT,IAAM+T,EAAOsD,GAAmB3S,EAAK1E,GAErC,OACE,kBAAC,KAAD,CAAKsQ,QAAQ,aACX,kBAAC,KAAD,CACE0F,GAAIvJ,GAAM,IACVoJ,GAAI,CACF5F,eAAgB,gBAChBC,WAAY,WAGd,kBAAC,GAAD,CAAWxQ,KAAMsB,EAAMtB,QAYxBgF,GAAO,kBAAC,GAAD,CAAWqP,KAAMA,IAExB/T,GACC,oCACE,kBAAC,KAAD,CAASsQ,QAAQ,cAAjB,iBACA,kBAAC,GAAD,CAAoByD,KAAMA,OAO9BiF,GAAY,SAAC,GAAsC,IAApCjF,EAAmC,EAAnCA,KACnB,OACE,oCAKE,kBAAC,KAAD,CAAKzD,QAAQ,gBACX,+CACA,kBAAC,KAAD,CAAMzB,WAAW,QAAQkF,EAAKuE,YAEhC,kBAAC,KAAD,CAAKhI,QAAQ,gBACX,wCACA,kBAAC,KAAD,CAAMzB,WAAW,QAAQkF,EAAKwE,UAOhC,kBAAC,KAAD,CAAKjI,QAAQ,gBACX,wDACA,kBAAC,KAAD,CAAMzB,WAAW,QAAQkF,EAAKgE,cAEhC,kBAAC,KAAD,CAAKzH,QAAQ,gBACX,kDACA,kBAAC,KAAD,CAAMzB,WAAW,QAAQkF,EAAKuD,WAOhC,kBAAC,KAAD,CAAKhH,QAAQ,gBACX,8EACA,kBAAC,KAAD,CAAMzB,WAAW,QAAQkF,EAAK0E,cAEhC,kBAAC,KAAD,CAAKnI,QAAQ,gBACX,gGACA,kBAAC,KAAD,CAAMzB,WAAW,QAAQkF,EAAK2E,aAEhC,kBAAC,KAAD,CAAKpI,QAAQ,gBACX,iFACA,kBAAC,KAAD,CAAMzB,WAAW,QAAQkF,EAAK4E,eAEhC,kBAAC,KAAD,CAAKrI,QAAQ,gBACX,kFACA,kBAAC,KAAD,CAAMzB,WAAW,QAAQkF,EAAK6E,iBA4BhCK,GAAc,SAAC,GAMd,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,WAKMhE,EAAMC,iBAA4B,MAQxC,OANAvO,qBAAU,WACJsS,GAAchE,EAAIE,SACpBF,EAAIE,QAAQ+D,eAAe,CAAEC,SAAU,SAAUC,MAAO,aAEzD,CAACH,IAGF,kBAACxC,GAAD,CACExB,IAAKA,EACLjL,IAAG,4BAAuBgP,EAAStZ,IACnC0Q,QAAS6I,EAAa,sBAAmBI,GAEzC,kBAAC1C,GAAD,KAAgBqC,EAASL,OACzB,kBAAChC,GAAD,KAAgBqC,EAASnC,OACzB,kBAACF,GAAD,KAAgBqC,EAASlC,KACzB,kBAACH,GAAD,KAAgBqC,EAASJ,YAKzBU,GAAqB,SAAC,GAAsC,IAApCzF,EAAmC,EAAnCA,KACtBnT,EAAmB8F,YAAYpG,GAErC,OACE,kBAACiW,GAAD,KACE,kBAACE,GAAD,KACE,kBAACE,GAAD,KACE,kBAACC,GAAD,YACA,kBAACA,GAAD,0BACA,kBAACA,GAAD,gCACA,kBAACA,GAAD,+BAGJ,kBAACF,GAAD,KACG3C,EAAKiE,kBAAkBzS,KAAI,SAAC2T,GAC3B,OACE,kBAAC,GAAD,CACEA,SAAUA,EACVC,YAA4B,OAAhBvY,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBhB,MAAOsZ,EAAStZ,SAKlDmU,EAAKiE,kBAAkBrW,QACvB,kBAACgV,GAAD,KACE,kBAACE,GAAD,UACA,kBAACA,GAAD,UACA,kBAACA,GAAD,UACA,kBAACA,GAAD,WAIJ,kBAACF,GAAD,CAAUd,GAAI,CAAEhH,WAAY,SAC1B,kBAACgI,GAAD,CAAe4C,QAAS,EAAG5D,GAAI,CAAErE,UAAW,SAA5C,qBAGA,kBAACqF,GAAD,KAAgB9C,EAAKoE,0BCnNlBuB,GAAwB,WACnC,IAAMtZ,EAASsG,YAAYxG,GACrBF,EAAW0G,YAAYrG,GACrBY,EAAW0F,qBAAWnB,IAAtBvE,OACFqV,EAAiB5V,OAAOqJ,KAAK3J,GAAQuB,OAE3C,OACE,oCACsB,IAAnB2U,GAAwB,kBAAC,KAAD,+CAExB5V,OAAOX,QAAQK,GAAQmF,KAAI,qCAAQvE,GAAR,kBAC1B,kBAAC,GAAD,CACEkJ,IAAG,gBAAWlJ,EAAMpB,IACpBoB,MAAOA,EACPhB,SAAUA,EAASgB,EAAMpB,IACzB8E,IAAG,UAAEzD,EAAOD,EAAMpB,WAAf,aAAE,EAAkB8E,W,oBClBpBiV,GAAU,yCAAG,WACxBvZ,EACAa,EACAR,GAHwB,sBAAAoT,EAAA,yDAKxBtP,QAAQuP,KAAKrT,GAERL,GAAWK,EAPQ,wDAWlBmZ,EAAW,IAAIC,KAAQC,SACvBC,EAAQH,EAASI,aAAa,YAE9BC,EAAUF,EAAMG,OAAO,GAE7BxZ,OAAOC,OAAOP,GAAQ2G,SAAQ,SAAC/F,EAAO6X,GACpC,IAAM7Y,EAAWS,EAASO,EAAMpB,IAC1B8E,EAAMzD,EAAOD,EAAMpB,IAAI8E,IAEvBqP,EAAOsD,GAAmB3S,EAAK1E,GAC/Bma,EAAc,EAAItB,EAAQ,EAEhCoB,EAAQG,QAAQD,GAAa3E,MAAQxU,EAAMtB,KAE3Cqa,EAAMG,OAAO,GAAGE,QAAQD,GAAa3E,MAAQ,gBAC7CuE,EAAMG,OAAO,GAAGE,QAAQD,GAAa3E,MAAQzB,EAAKuE,UAClDyB,EAAMG,OAAO,GAAGE,QAAQD,GAAa3E,MAAQ,SAC7CuE,EAAMG,OAAO,GAAGE,QAAQD,GAAa3E,MAAQzB,EAAKwE,QAClDwB,EAAMG,OAAO,GAAGE,QAAQD,GAAa3E,MAAQ,yBAC7CuE,EAAMG,OAAO,GAAGE,QAAQD,GAAa3E,MAAQzB,EAAKgE,YAClDgC,EAAMG,OAAO,GAAGE,QAAQD,GAAa3E,MAAQ,mBAC7CuE,EAAMG,OAAO,GAAGE,QAAQD,GAAa3E,MAAQzB,EAAKuD,SAClDyC,EAAMG,OAAO,IAAIE,QAAQD,GAAa3E,MAAQ,+CAC9CuE,EAAMG,OAAO,IAAIE,QAAQD,GAAa3E,MAAQzB,EAAK0E,YACnDsB,EAAMG,OAAO,IAAIE,QAAQD,GAAa3E,MACpC,iEACFuE,EAAMG,OAAO,IAAIE,QAAQD,GAAa3E,MAAQzB,EAAK2E,WACnDqB,EAAMG,OAAO,IAAIE,QAAQD,GAAa3E,MACpC,kDACFuE,EAAMG,OAAO,IAAIE,QAAQD,GAAa3E,MAAQzB,EAAK4E,aACnDoB,EAAMG,OAAO,IAAIE,QAAQD,GAAa3E,MACpC,mDACFuE,EAAMG,OAAO,IAAIE,QAAQD,GAAa3E,MAAQzB,EAAK6E,aAEnDmB,EAAMG,OAAO,IAAIE,QAAQD,GAAa3E,MAAQ,gBAC9CuE,EAAMG,OAAO,IAAIE,QAAQD,GAAa3E,MAAQ,MAC9CuE,EAAMG,OAAO,IAAIE,QAAQD,EAAc,GAAG3E,MAAQ,oBAClDuE,EAAMG,OAAO,IAAIE,QAAQD,EAAc,GAAG3E,MAAQ,0BAClDuE,EAAMG,OAAO,IAAIE,QAAQD,EAAc,GAAG3E,MAAQ,uBAE9CzB,EAAKiE,kBAAkBrW,SACzBoS,EAAKiE,kBAAkBjR,SAAQ,SAACmS,EAAUmB,GACxCN,EAAMG,OAAO,GAAKG,GAAeD,QAAQD,GAAa3E,MACpD0D,EAASL,MACXkB,EAAMG,OAAO,GAAKG,GAAeD,QAAQD,EAAc,GAAG3E,MACxD0D,EAASnC,MACXgD,EAAMG,OAAO,GAAKG,GAAeD,QAAQD,EAAc,GAAG3E,MACxD0D,EAASlC,IACX+C,EAAMG,OAAO,GAAKG,GAAeD,QAAQD,EAAc,GAAG3E,MACxD0D,EAASJ,YAGbiB,EACGG,OAAO,GAAKnG,EAAKiE,kBAAkBrW,QACnCyY,QAAQD,GAAa3E,MAAQ,oBAChCuE,EACGG,OAAO,GAAKnG,EAAKiE,kBAAkBrW,QACnCyY,QAAQD,EAAc,GAAG3E,MAAQzB,EAAKoE,yBApErB,SAwEHyB,EAASU,KAAKC,cAxEX,OAwElBC,EAxEkB,OAyExBC,GAASD,GAzEe,4CAAH,0DA4EjBC,GAAW,SAACC,GAChB,IAAIC,EAAO,IAAIC,KAAK,CAACF,GAAO,CAAE/W,KAAM,qBAChCwN,EAAO0J,SAASC,cAAc,KAClC3J,EAAK2D,KAAOiG,OAAOC,IAAIC,gBAAgBN,GAEvCxJ,EAAKsJ,SADU,eAEftJ,EAAK+J,SC/DMC,GAAmB,SAAC,GAM1B,IALL5G,EAKI,EALJA,SACA6G,EAII,EAJJA,iBAKA,OACE,kBAAC,KAAD,CACEvF,GAAI,CACFjO,SAAU,WACVyT,OAAQ,IACRpK,OAAQ,QAEVlG,UAAWuQ,KAAG,UAAW,CAAEC,UAAWH,KAEtC,kBAAC,KAAD,CACE9K,QAAQ,UACRkL,cAAc,SACdvJ,GAAG,aACH4D,GAAI,CACF5E,OAAQ,SAGTsD,KAMIkH,GAAiB,SAAC,GAIxB,IAHLC,EAGI,EAHJA,oBAIM1b,EAAW0G,YAAYrG,GACvBD,EAASsG,YAAYxG,GACnBe,EAAW0F,qBAAWnB,IAAtBvE,OAER,OACE,oCACE,kBAAC,KAAD,CAAMqP,QAAQ,UACZ,kBAAC,KAAD,CAAMuF,GAAI,CAAE3F,WAAY,WACtB,kBAAC,KAAD,CAASI,QAAQ,aAAa0F,GAAG,KAC/B,kBAAC,KAAD,CAAMrB,GAAG,OAAOzV,MAAM,WAAtB,QAGA,kBAAC,KAAD,CAAMyV,GAAG,OAAOzV,MAAM,QAAQ2P,WAAW,UAAzC,YAKF,kBAAC,GAAD,CACEiG,KAAK,sCACLxE,QAAQ,SACRY,KAAK,mBAIT,kBAAC,GAAD,CACEZ,QAAQ,UACRY,KAAK,sBACL4E,QAAS,kBAAM4F,GAAoB,OAIvC,kBAAC,KAAD,CAAKpL,QAAQ,WACX,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOqL,KAAK,aACV,kBAAC,GAAD,OAGF,kBAAC,KAAD,CAAOA,KAAK,YACV,kBAAC,GAAD,SAKN,kBAAC,KAAD,CAAMhH,GAAG,MAAMrE,QAAQ,OACrB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOqL,KAAK,aACV,kBAAC,GAAD,CAAYC,GAAG,WAAWtL,QAAQ,WAAlC,iBAKF,kBAAC,KAAD,CAAOqL,KAAK,YACV,kBAAC,GAAD,CAAYC,GAAG,SAAStL,QAAQ,oBAAhC,gBAIA,kBAAC,GAAD,CACEwF,QAAS,kBAAM6D,GAAWvZ,EAAQa,EAAQjB,IAC1C6V,GAAI,CACFrG,WAAY/C,GAAM,IAEpB6D,QAAQ,kBALV,uBAgBCuL,GAA0B,SAAC,GAIjC,IAHLH,EAGI,EAHJA,oBAIA,OACE,kBAAC,KAAD,CAAMpL,QAAQ,SAASuF,GAAI,CAAE5E,OAAQ,OAAQhB,eAAgB,WAC3D,kBAAC,GAAD,CACEK,QAAQ,UACRY,KAAK,uBACL4E,QAAS,kBAAM4F,GAAoB,QAM9BI,GAAU,SAAC,GAAsD,IAApDV,EAAmD,EAAnDA,iBAAkBM,EAAiC,EAAjCA,oBAC1C,OACE,kBAAC,GAAD,CAAkBN,iBAAkBA,GACjCA,GACC,kBAAC,GAAD,CAAyBM,oBAAqBA,KAE9CN,GACA,kBAAC,GAAD,CAAgBM,oBAAqBA,MCtJhCK,GAAQ,SAAC,GAMf,IALL7K,EAKI,EALJA,KACAqD,EAII,EAJJA,SAKA,OACE,kBAAC,KAAD,CAAMjE,QAAQ,SACZ,kBAAC,KAAD,CAAMA,QAAQ,uBACZ,kBAAC,KAAD,CAAKA,QAAQ,aAAaqE,GAAG,IAAI5J,UAAWmG,KAE9C,kBAAC,KAAD,CAAM2E,GAAI,CAAEmG,KAAM,IAChB,kBAAC,KAAD,CAAKrH,GAAG,QAAQJ,MCMX0H,GAAiB,SAAC,GAIxB,IAHLb,EAGI,EAHJA,iBAIM/W,EAAWuC,cACXhG,EAAmB8F,YAAYpG,GAC/B4b,EAAuBxV,YAAYnG,GAEzC,IAAKK,IAAqBsb,EACxB,OAAO,KAGT,IAjBwCpY,EAiBlCoV,EAhBC,EADiCpV,EAiBGoY,GAhB1BtY,QAAQ,GAAIE,EAASF,QAAQE,EAASF,QAAQjC,OAAS,IAiBlEoV,EAAQG,KAAOgC,EAAS,GAAG5V,KAAKC,MAChCyT,EAAME,KAAOgC,EAAS,GAAG5V,KAAKC,MAE9B4Y,EAC0B,YAA9BD,EAAqBvY,MACS,YAA9BuY,EAAqBvY,KACjByY,EAC0B,aAA9BF,EAAqBvY,MACS,YAA9BuY,EAAqBvY,KACjB0Y,EAC0B,aAA9BH,EAAqBvY,MACS,YAA9BuY,EAAqBvY,KAEvB,OACE,kBAAC,KAAD,CACE2M,QAAQ,QACRvF,UAAU,iBACV8K,GAAI,CACFjO,SAAU,WACVyT,OAAQ,IACRrK,MAAO,OACPsL,SAAU,QACVC,KAAMnB,EAAmB,QAAU,QACnCoB,IAAK,IACLC,WAAY,2BAGd,kBAAC,KAAD,CAAKnM,QAAQ,WACX,kBAAC,KAAD,CACEuF,GAAI,CACF5F,eAAgB,gBAChBuL,cAAe,WAGjB,kBAAC,KAAD,CACE3F,GAAI,CACF5F,eAAgB,gBAChBC,WAAY,WAGd,kBAAC,KAAD,CAASI,QAAQ,cAAjB,oBACA,kBAAC,GAAD,CACEwF,QAAS,kBAAMzR,ErBmDU,CACrCV,KAAM,kBACNO,QAAS,CAAEtE,QAAI2Z,EAAWpE,SAAKoE,MqBpDnBjJ,QAAQ,OACRY,KAAK,qBACL2E,GAAI,CACF7G,aAAcvC,GAAM,QAI1B,kBAAC,KAAD,CAAK6D,QAAQ,aACVyG,EAAMK,OAAO,YADhB,MACgCJ,EAAII,OAAO,aAEZ,YAA9B8E,EAAqBvY,MACpB,kBAAC,GAAD,CAAOuN,KAAK,4BAAZ,kJAEwD,IACtD,uCAHF,KAMF,kBAAC,KAAD,CAAKZ,QAAQ,SAAb,gBACA,kBAAC,KAAD,KACG8L,GACC,kBAAC,GAAD,CACE9L,QAAQ,eACRwF,QAAS,kBACPzR,EACEW,GACEpE,EAAiBhB,GACjBgB,EAAiB0E,YACjB,aAINuQ,GAAI,CACF7E,MAAO,OACPzC,YAAa9B,GAAM,KAbvB,YAmBD0P,GACC,kBAAC,GAAD,CACE7L,QAAQ,qBACRwF,QAAS,kBACPzR,EACEW,GACEpE,EAAiBhB,GACjBgB,EAAiB0E,YACjB,cAINuQ,GAAI,CACF7E,MAAO,OACPzC,YAAa9B,GAAM,KAbvB,mBAmBD4P,GACC,kBAAC,GAAD,CACE/L,QAAQ,cACRwF,QAAS,kBACPzR,EACEW,GACEpE,EAAiBhB,GACjBgB,EAAiB0E,YACjB,aAINuQ,GAAI,CACF7E,MAAO,SAZX,iBC1GR0L,GAAkB,IAAItb,IAAES,aAEjB8a,GAA6B,SAAC,GAIpC,IAHLpI,EAGI,EAHJA,SAGI,EACyC1J,mBAC3C,CACE5J,OAAQ,GACRmD,WAAYsY,GACZ/W,OAAQ,eALR,0BACK1E,EADL,EACKA,OAAQmD,EADb,EACaA,WAAcwY,EAD3B,KASEjX,EAASiD,uBACb,SAAChJ,EAAI8E,GACH,IAAMmY,EAAS,eACV5b,GAGAA,EAAOrB,KAIZid,EAAUjd,GAAI8E,IAAMA,EAEpBkY,EAAW,CAAE3b,OAAQ4b,EAAWzY,aAAYuB,cAE9C,CAAC1E,EAAQmD,IAGLhE,EAASsG,YAAYxG,GAwB3B,OAtBA2G,qBAAU,WACR,IAAIiW,GAAe,EACbD,EAAS,eACV5b,GAGLP,OAAOX,QAAQK,GAAQ2G,SAAQ,YAAoB,IAAD,mBAAX/F,GAAW,WAC5CC,EAAOD,EAAMpB,MAIjBkd,GAAe,EACfD,EAAU7b,EAAMpB,IAvED,WACnB,IAAMqB,EAAS,IAAIG,IAAES,aACfkb,EAAU,IAAI3b,IAAE4b,WAChBzT,EAAyB,IAAInI,IAAE4b,WAC/B3T,EAAuB,IAAIjI,IAAES,aAC7B4H,EAAwB,IAAIrI,IAAE4b,WAC9BxT,EAAsB,IAAIpI,IAAES,aAQlC,OANAkb,EAAQ9V,MAAMhG,GACdsI,EAAuBtC,MAAMhG,GAC7BoI,EAAqBpC,MAAMhG,GAC3BwI,EAAsBxC,MAAMhG,GAC5BuI,EAAoBvC,MAAMhG,GAEnB,CACL8b,UACA9b,SACAsI,yBACAF,uBACAI,wBACAD,sBACA9E,IAAK,MAkDmBuY,OAGnBH,GAILF,EAAW,CAAE3b,OAAQ4b,EAAWzY,aAAYuB,aAC3C,CAAC1E,EAAQb,EAAQuF,EAAQvB,IAG1B,kBAACoB,GAAmB0X,SAApB,CAA6B1H,MAAO,CAAEvU,SAAQmD,aAAYuB,WACvD4O,I,0EC3DAnT,IAAE+b,KAAKC,QAAQC,UAAUC,YAEhClc,IAAE+b,KAAKC,QAAQG,aAAa,CAC1BC,cAAeC,KACfC,QAAS5V,KACTzB,UAAWsX,OAGb,IAAMC,GrBXwB,WAC5B,IAAMC,EAAc,CAACC,MAGfC,EAAY,CAFSC,mBAAe,WAAf,EAAmBH,IAGxCI,EAAoBC,uBAAmB,WAAnB,EAAuBH,GAEjD,OAAOI,uBAAYhZ,GAAa,GAAI8Y,GqBIxBG,GAiCCC,GA/BO,WAAO,IAAD,EACsBxT,oBAAS,GAD/B,mBACnBuQ,EADmB,KACDM,EADC,KAG1B,OACE,kBAAC,IAAD,CAAUkC,MAAOA,IACf,kBAAC,IAAD,CAAejL,MAAOA,IACpB,kBAAC,KAAD,CACE5H,UAAU,MACV8K,GAAI,CACFlH,WAAY,OACZ7C,SAAU,OACV5M,MAAO,SAIT,kBAAC,IAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEkc,iBAAkBA,EAClBM,oBAAqBA,IAEvB,kBAAC,GAAD,CAAgBN,iBAAkBA,IAClC,kBAAC,GAAD,YC1DdkD,IAASC,OAAO,kBAAC,GAAD,MAAS1D,SAAS2D,eAAe,U","file":"static/js/main.ad01439d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/3_lip_2020_19_43_42_1593804563614.5af8c9e5.gpx\";","module.exports = __webpack_public_path__ + \"static/media/WOJTEK.04601a8c.kml\";","import { useEffect, useContext } from \"react\";\r\nimport { useLeaflet } from \"react-leaflet\";\r\n\r\nimport L, { Control, DrawEvents } from \"leaflet\";\r\n\r\nimport \"leaflet-draw\";\r\nimport { RouteLayersContext } from \"../../state/store\";\r\n\r\n// const track = new L.FeatureGroup();\r\n//\r\n// const options: Control.DrawConstructorOptions = {\r\n//     position: 'topleft',\r\n//     draw: {\r\n//         polyline: false,\r\n//         marker: false,\r\n//         circlemarker: false,\r\n//     },\r\n//     edit: {\r\n//         featureGroup: track,\r\n//     }\r\n// };\r\n//\r\n// const drawControl = new L.Control.Draw(options);\r\n\r\nlet drawControl: L.Control.Draw | null;\r\n\r\ntype TrackDrawerProps = {\r\n  drawingMode?: boolean;\r\n};\r\n\r\nexport const TrackDrawer = ({ drawingMode = false }: TrackDrawerProps) => {\r\n  const { map } = useLeaflet();\r\n  const { trackLayer } = useContext(RouteLayersContext);\r\n\r\n  useEffect(() => {\r\n    const options: Control.DrawConstructorOptions = {\r\n      position: \"topleft\",\r\n      draw: {\r\n        polyline: false,\r\n        marker: false,\r\n        circlemarker: false,\r\n      },\r\n      edit: {\r\n        edit: false,\r\n        featureGroup: trackLayer,\r\n      },\r\n    };\r\n\r\n    drawControl = new L.Control.Draw(options);\r\n  }, [map, trackLayer]);\r\n\r\n  useEffect(() => {\r\n    if (!map) {\r\n      return;\r\n    }\r\n\r\n    map.addLayer(trackLayer);\r\n  }, [map, trackLayer]);\r\n\r\n  useEffect(() => {\r\n    if (!map) {\r\n      return;\r\n    }\r\n\r\n    if (!drawControl) {\r\n      return;\r\n    }\r\n\r\n    if (drawingMode) {\r\n      map.addControl(drawControl);\r\n    } else {\r\n      map.removeControl(drawControl);\r\n    }\r\n  }, [map, drawingMode]);\r\n\r\n  useEffect(() => {\r\n    if (!map) {\r\n      return;\r\n    }\r\n\r\n    map.on(L.Draw.Event.CREATED, (e: any) => {\r\n      // The event is actually DrawEvents.Created, but there is no matching definition for the `on` method,\r\n      // which makes typescript complain about no matching overload. TODO I guess?\r\n      const event: DrawEvents.Created = e;\r\n      const layer = event.layer;\r\n\r\n      trackLayer.addLayer(layer);\r\n    });\r\n  }, [map, trackLayer]);\r\n\r\n  return null;\r\n};\r\n","import { PathOptions } from \"leaflet\";\r\n\r\nexport const ROUTE_LINE_STYLE_BASE: PathOptions = {\r\n  weight: 3,\r\n  color: \"#2c83cb\",\r\n  lineCap: \"butt\",\r\n};\r\n\r\nexport const ROUTE_LINE_STYLE_ONTRACK: PathOptions = {\r\n  color: \"#06CB13\",\r\n};\r\n\r\nexport const ROUTE_LINE_STYLE_OFFTRACK: PathOptions = {\r\n  color: \"#cb123d\",\r\n};\r\n\r\nexport const ROUTE_LINE_STYLE_UNKNOWN: PathOptions = {\r\n  color: \"#999999\",\r\n  dashArray: \"3, 3\",\r\n};\r\n\r\nexport const ROUTE_LINE_HOVER: PathOptions = {\r\n  weight: 10,\r\n};\r\n\r\nexport const OFFTRACK_POINT_TOOLTIP_OPTIONS: L.TooltipOptions = {\r\n  permanent: true,\r\n  direction: \"auto\",\r\n};\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nimport {\r\n  AddRouteAction,\r\n  ChangeRouteNameAction,\r\n  OverrideAnalysis,\r\n  RemoveRouteAction,\r\n  RouteAnalysedAction,\r\n  RouteParsedAction,\r\n  RoutesAnalysedAction,\r\n  SelectPolylineAction,\r\n} from \"./routesActions\";\r\nimport {\r\n  Route,\r\n  RouteFragments,\r\n  Routes,\r\n  RoutesAnalysis,\r\n  Selected,\r\n} from \"../../types/routes\";\r\nimport { ApplicationState } from \"../store\";\r\n\r\nconst createRoute = (name: string, content: string): Route => {\r\n  return {\r\n    id: uuidv4(),\r\n    name,\r\n    content,\r\n  };\r\n};\r\n\r\nexport type RoutesReducerActions =\r\n  | AddRouteAction\r\n  | RemoveRouteAction\r\n  | RouteParsedAction\r\n  | RouteAnalysedAction\r\n  | RoutesAnalysedAction\r\n  | ChangeRouteNameAction\r\n  | SelectPolylineAction\r\n  | OverrideAnalysis;\r\n\r\nconst initialState: RoutesState = {\r\n  entries: {},\r\n  analysis: {},\r\n  selected: null,\r\n};\r\n\r\nexport interface RoutesState {\r\n  entries: Routes;\r\n  analysis: RoutesAnalysis;\r\n  selected: null | Selected;\r\n}\r\n\r\nexport const routesReducer = (\r\n  state = initialState,\r\n  action: RoutesReducerActions\r\n): RoutesState => {\r\n  switch (action.type) {\r\n    case \"ADD_ROUTE\":\r\n      // TODO: handle duplicates?\r\n      const route = createRoute(action.payload.name, action.payload.content);\r\n\r\n      return {\r\n        ...state,\r\n        entries: {\r\n          ...state.entries,\r\n          [route.id]: route,\r\n        },\r\n      };\r\n    case \"REMOVE_ROUTE\":\r\n      // Drop key from entries and analysis\r\n      const { [action.payload.id]: _drop1, ...entries } = state.entries;\r\n      const { [action.payload.id]: _drop2, ...analysis } = state.analysis;\r\n\r\n      return {\r\n        ...state,\r\n        entries,\r\n        analysis,\r\n      };\r\n    case \"ROUTE_PARSED\":\r\n      return {\r\n        ...state,\r\n        entries: {\r\n          ...state.entries,\r\n          [action.payload.id]: {\r\n            ...state.entries[action.payload.id],\r\n          },\r\n        },\r\n      };\r\n    // TODO: this is unused apparently\r\n    case \"ROUTE_ANALYSED\":\r\n      // @ts-ignore\r\n      // this is a workaround for redux-dev-tools crashing because of the size of this payload.\r\n      // TODO: figure out a better way or at least implement a debug flag\r\n      // action.payload.analysis.toJSON = () => ({ hidden: 'to help redux devtools :)' });\r\n\r\n      return {\r\n        ...state,\r\n        analysis: {\r\n          ...state.analysis,\r\n          [action.payload.id]: action.payload.analysis,\r\n        },\r\n      };\r\n    case \"ROUTES_ANALYSED\":\r\n      // this is a workaround for redux-dev-tools crashing because of the size of this payload.\r\n      // TODO: figure out a better way or at least implement a debug flag\r\n      // Object.entries(action.payload.analyses).forEach(([_, analysis]) => {\r\n      //     if (!analysis) {\r\n      //         return;\r\n      //     }\r\n\r\n      //     Object.entries(analysis).forEach(([_, fragment]) => {\r\n      //         // @ts-ignore\r\n      //         fragment.latLngs.toJSON = () => ({ hidden: 'to help redux devtools :)' });\r\n      //     });\r\n      // });\r\n\r\n      return {\r\n        ...state,\r\n        analysis: action.payload.analyses,\r\n        selected: null,\r\n      };\r\n    case \"CHANGE_ROUTE_NAME\":\r\n      return {\r\n        ...state,\r\n        entries: {\r\n          ...state.entries,\r\n          [action.payload.id]: {\r\n            ...state.entries[action.payload.id],\r\n            name: action.payload.name,\r\n          },\r\n        },\r\n      };\r\n    case \"SELECT_POLYLINE\":\r\n      if (!action.payload.id) {\r\n        return {\r\n          ...state,\r\n          selected: null,\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        selected: {\r\n          id: action.payload.id,\r\n          analysis_id: action.payload.analysisId,\r\n        },\r\n      };\r\n    case \"OVERRIDE_ANALYSIS\":\r\n      return {\r\n        ...state,\r\n        analysis: {\r\n          ...state.analysis,\r\n          [action.payload.analysisId]: state.analysis[\r\n            action.payload.analysisId\r\n          ]?.map((fragment) => {\r\n            if (fragment.id === action.payload.id) {\r\n              return {\r\n                ...fragment,\r\n                type: action.payload.type,\r\n              };\r\n            }\r\n\r\n            return fragment;\r\n          }) as RouteFragments,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getRoutes = (state: ApplicationState) => state.routes.entries;\r\nexport const getRoutesAnalysis = (state: ApplicationState) =>\r\n  state.routes.analysis;\r\nexport const getSelectedPolyline = (state: ApplicationState) =>\r\n  state.routes.selected;\r\nexport const findSelectedPolyline = createSelector(\r\n  getRoutesAnalysis,\r\n  (state) => state.routes.selected,\r\n  (analyses, selected) => {\r\n    if (!selected) {\r\n      return undefined;\r\n    }\r\n\r\n    const values = Object.values(analyses);\r\n\r\n    for (const analysis of values) {\r\n      if (!analysis) {\r\n        continue;\r\n      }\r\n\r\n      const selectedPolyline = analysis.find(\r\n        (polyline) => polyline.id === selected.id\r\n      );\r\n\r\n      if (selectedPolyline) {\r\n        return selectedPolyline;\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n);\r\n","import L, { GPX } from \"leaflet\";\r\n\r\nexport const getPolylineLayer = (route: GPX): L.Polyline | null => {\r\n  // Types seem to be incorrect, route.getLayers()[0] is instanceof L.FeatureGroup\r\n  const layers = (route.getLayers()[0] as L.FeatureGroup).getLayers();\r\n\r\n  for (let layer of layers) {\r\n    if (!(layer instanceof L.Polyline)) {\r\n      continue;\r\n    }\r\n\r\n    return layer;\r\n  }\r\n\r\n  return null;\r\n};\r\n","import L from \"leaflet\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\r\nimport circle from \"@turf/circle\";\r\nimport { point } from \"@turf/helpers\";\r\nimport { getPolylineLayer } from \"./getPolylineLayer\";\r\nimport {\r\n  RoutesAnalysis,\r\n  RoutesLayers,\r\n  GPXLatLng,\r\n  RouteFragments,\r\n  Routes,\r\n  RouteFragment,\r\n} from \"../types/routes\";\r\n\r\nconst polygonToGeoJSON = (polygon: L.Layer) => {\r\n  if (polygon instanceof L.Circle) {\r\n    return circle(\r\n      polygon.toGeoJSON().geometry.coordinates,\r\n      polygon.getRadius(),\r\n      { steps: 10, units: \"meters\" }\r\n    );\r\n  } else if (polygon instanceof L.Polygon) {\r\n    return polygon.toGeoJSON();\r\n  } else if (polygon instanceof L.Polyline) {\r\n    const convertedPolygon = new L.Polygon(polygon.getLatLngs());\r\n    return convertedPolygon.toGeoJSON();\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst analysePoint = (\r\n  routePoint: GPXLatLng,\r\n  track: L.FeatureGroup\r\n): boolean => {\r\n  const layers = track.getLayers();\r\n\r\n  for (let i = 0; i < layers.length; i++) {\r\n    const layer = layers[i];\r\n\r\n    let inTrack = false;\r\n\r\n    if (layer instanceof L.FeatureGroup) {\r\n      // recurse for FeatureGroups\r\n      inTrack = analysePoint(routePoint, layer);\r\n    }\r\n\r\n    if (layer instanceof L.Path) {\r\n      const pointFeature = point([routePoint.lng, routePoint.lat]);\r\n      const geoJsonPolygon = polygonToGeoJSON(layer);\r\n\r\n      if (geoJsonPolygon === null) {\r\n        continue;\r\n      }\r\n\r\n      inTrack = booleanPointInPolygon(pointFeature, geoJsonPolygon as any);\r\n    }\r\n\r\n    if (!inTrack) {\r\n      continue;\r\n    }\r\n\r\n    return inTrack;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst performRouteAnalysis = (\r\n  routePolyline: L.Polyline,\r\n  track: L.FeatureGroup\r\n): RouteFragments => {\r\n  const routeLatLngs = routePolyline.getLatLngs();\r\n  const fragments: RouteFragments = [];\r\n\r\n  for (let i = 0; i < routeLatLngs.length; i++) {\r\n    const currentPoint = routeLatLngs[i] as GPXLatLng;\r\n    const nextPoint = routeLatLngs[i + 1] as GPXLatLng;\r\n    const timeDelta = nextPoint\r\n      ? nextPoint?.meta.time.valueOf() - currentPoint.meta.time.valueOf()\r\n      : 0;\r\n\r\n    const pointOnTrack = analysePoint(currentPoint, track);\r\n\r\n    let lastFragment = fragments[fragments.length - 1];\r\n\r\n    if (!lastFragment) {\r\n      lastFragment = {\r\n        id: uuidv4(),\r\n        type: pointOnTrack ? \"ontrack\" : \"offtrack\",\r\n        latLngs: [],\r\n      };\r\n\r\n      fragments.push(lastFragment);\r\n    }\r\n\r\n    if (timeDelta > 10000) {\r\n      lastFragment.latLngs.push(currentPoint);\r\n      const fragment: RouteFragment = {\r\n        id: uuidv4(),\r\n        type: \"unknown\",\r\n        latLngs: [],\r\n      };\r\n      fragments.push(fragment);\r\n\r\n      fragment.latLngs.push(currentPoint);\r\n    } else if (pointOnTrack) {\r\n      let fragment = lastFragment;\r\n\r\n      if (lastFragment.type === \"offtrack\" || lastFragment.type === \"unknown\") {\r\n        lastFragment.latLngs.push(currentPoint);\r\n        fragment = {\r\n          id: uuidv4(),\r\n          type: \"ontrack\",\r\n          latLngs: [],\r\n        };\r\n        fragments.push(fragment);\r\n      }\r\n\r\n      fragment.latLngs.push(currentPoint);\r\n    } else {\r\n      let fragment = lastFragment;\r\n\r\n      if (lastFragment.type === \"ontrack\" || lastFragment.type === \"unknown\") {\r\n        lastFragment.latLngs.push(currentPoint);\r\n        fragment = {\r\n          id: uuidv4(),\r\n          type: \"offtrack\",\r\n          latLngs: [],\r\n        };\r\n        fragments.push(fragment);\r\n      }\r\n\r\n      fragment.latLngs.push(currentPoint);\r\n    }\r\n  }\r\n\r\n  return fragments.filter((e) => e.latLngs.length > 0);\r\n};\r\n\r\nexport const analyseRoutes = (\r\n  entries: Routes,\r\n  layers: RoutesLayers,\r\n  track: L.FeatureGroup\r\n): RoutesAnalysis => {\r\n  console.log(\"Running analysis...\");\r\n\r\n  const trackEmpty = track.getLayers().length === 0;\r\n  let analyses = {};\r\n\r\n  if (trackEmpty) {\r\n    return analyses;\r\n  }\r\n\r\n  // TODO: switch to entries and drop layers argument\r\n  for (let [, route] of Object.entries(entries)) {\r\n    const routeLayers = layers[route.id];\r\n\r\n    if (!routeLayers?.gpx) {\r\n      continue;\r\n    }\r\n\r\n    const polylineLayer = getPolylineLayer(routeLayers.gpx);\r\n\r\n    if (!polylineLayer) {\r\n      throw new Error(\"Polyline layer not found in route.\");\r\n    }\r\n\r\n    const routeAnalysis = performRouteAnalysis(polylineLayer, track);\r\n\r\n    analyses = {\r\n      ...analyses,\r\n      [route.id]: routeAnalysis,\r\n    };\r\n  }\r\n\r\n  return analyses;\r\n};\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport {\r\n  RoutesAnalysis,\r\n  RouteFragments,\r\n  RoutesLayers,\r\n} from \"../../types/routes\";\r\nimport { Actions, ApplicationState } from \"../store\";\r\nimport { getRoutes } from \"./routesReducer\";\r\nimport { analyseRoutes as runRouteAnalysis } from \"../../utils/analyseRoutes\";\r\n\r\nexport interface AddRouteAction {\r\n  type: \"ADD_ROUTE\";\r\n  payload: {\r\n    name: string;\r\n    content: string;\r\n  };\r\n}\r\n\r\nexport interface RemoveRouteAction {\r\n  type: \"REMOVE_ROUTE\";\r\n  payload: { id: string };\r\n}\r\n\r\nexport interface RouteParsedAction {\r\n  type: \"ROUTE_PARSED\";\r\n  payload: {\r\n    id: string;\r\n  };\r\n}\r\n\r\nexport interface RouteAnalysedAction {\r\n  type: \"ROUTE_ANALYSED\";\r\n  payload: {\r\n    id: string;\r\n    analysis: RouteFragments;\r\n  };\r\n}\r\n\r\nexport interface RoutesAnalysedAction {\r\n  type: \"ROUTES_ANALYSED\";\r\n  payload: {\r\n    analyses: RoutesAnalysis;\r\n  };\r\n}\r\n\r\nexport interface ChangeRouteNameAction {\r\n  type: \"CHANGE_ROUTE_NAME\";\r\n  payload: {\r\n    id: string;\r\n    name: string;\r\n  };\r\n}\r\n\r\nexport interface SelectPolylineAction {\r\n  type: \"SELECT_POLYLINE\";\r\n  payload: {\r\n    id: string;\r\n    analysisId: string;\r\n  };\r\n}\r\n\r\nexport interface OverrideAnalysis {\r\n  type: \"OVERRIDE_ANALYSIS\";\r\n  payload: {\r\n    id: string;\r\n    analysisId: string;\r\n    type: \"ontrack\" | \"offtrack\";\r\n  };\r\n}\r\n\r\nexport const addRoute = (name: string, content: string): AddRouteAction => ({\r\n  type: \"ADD_ROUTE\",\r\n  payload: { name, content },\r\n});\r\n\r\nexport const removeRoute = (id: string): RemoveRouteAction => ({\r\n  type: \"REMOVE_ROUTE\",\r\n  payload: { id },\r\n});\r\n\r\nexport const routeParsed = (id: string): RouteParsedAction => ({\r\n  type: \"ROUTE_PARSED\",\r\n  payload: { id },\r\n});\r\n\r\nexport const analyseRoutes =\r\n  (\r\n    layers: RoutesLayers,\r\n    trackLayer: L.FeatureGroup\r\n  ): ThunkAction<void, ApplicationState, undefined, Actions> =>\r\n  (dispatch, getState) => {\r\n    const state = getState();\r\n    const routes = getRoutes(state);\r\n\r\n    const analyses = runRouteAnalysis(routes, layers, trackLayer);\r\n    dispatch(routesAnalysed(analyses));\r\n  };\r\n\r\nexport const routeAnalysed = (\r\n  id: string,\r\n  analysis: RouteFragments\r\n): RouteAnalysedAction => ({\r\n  type: \"ROUTE_ANALYSED\",\r\n  payload: { id, analysis },\r\n});\r\n\r\nexport const routesAnalysed = (\r\n  analyses: RoutesAnalysis\r\n): RoutesAnalysedAction => ({\r\n  type: \"ROUTES_ANALYSED\",\r\n  payload: { analyses },\r\n});\r\n\r\nexport const changeRouteName = (\r\n  id: string,\r\n  name: string\r\n): ChangeRouteNameAction => ({\r\n  type: \"CHANGE_ROUTE_NAME\",\r\n  payload: { id, name },\r\n});\r\n\r\nexport const selectPolyline = (\r\n  id: string,\r\n  analysisId: string\r\n): SelectPolylineAction => ({\r\n  type: \"SELECT_POLYLINE\",\r\n  payload: { id, analysisId },\r\n});\r\n\r\nexport const deselectPolyline = () => ({\r\n  type: \"SELECT_POLYLINE\",\r\n  payload: { id: undefined, ref: undefined },\r\n});\r\n\r\nexport const overrideAnalysis = (\r\n  id: string,\r\n  analysisId: string,\r\n  type: \"ontrack\" | \"offtrack\" | \"unknown\"\r\n) => ({\r\n  type: \"OVERRIDE_ANALYSIS\",\r\n  payload: { id, analysisId, type },\r\n});\r\n","import { LoadTrackAction } from \"./trackActions\";\r\nimport { ApplicationState } from \"../store\";\r\n\r\nexport interface TrackState {\r\n  content: string;\r\n}\r\n\r\nconst initialState: TrackState = {\r\n  content: \"\",\r\n};\r\n\r\nexport type TrackReducerActions = LoadTrackAction;\r\n\r\nexport const trackReducer = (\r\n  state = initialState,\r\n  action: TrackReducerActions\r\n): TrackState => {\r\n  switch (action.type) {\r\n    case \"LOAD_TRACK\":\r\n      return {\r\n        ...state,\r\n        content: action.payload.content,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getTrack = (state: ApplicationState) => state.track;\r\n","import React from \"react\";\r\nimport L from \"leaflet\";\r\nimport { applyMiddleware, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  routesReducer,\r\n  RoutesReducerActions,\r\n  RoutesState,\r\n} from \"./routes/routesReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  trackReducer,\r\n  TrackReducerActions,\r\n  TrackState,\r\n} from \"./track/trackReducer\";\r\nimport { RouteLayersContextType } from \"../types/context\";\r\n\r\nexport interface ApplicationState {\r\n  routes: RoutesState;\r\n  track: TrackState;\r\n}\r\n\r\nexport type Actions = TrackReducerActions | RoutesReducerActions;\r\n\r\nconst rootReducer = combineReducers<ApplicationState>({\r\n  routes: routesReducer,\r\n  track: trackReducer,\r\n});\r\n\r\nexport const configureStore = () => {\r\n  const middlewares = [thunk];\r\n  const middlewareEnhancer = applyMiddleware(...middlewares);\r\n\r\n  const enhancers = [middlewareEnhancer];\r\n  const composedEnhancers = composeWithDevTools(...enhancers);\r\n\r\n  return createStore(rootReducer, {}, composedEnhancers);\r\n};\r\n\r\nexport const RouteLayersContext = React.createContext<RouteLayersContextType>({\r\n  layers: {},\r\n  trackLayer: new L.FeatureGroup(),\r\n  setGpx: () => {},\r\n});\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { useLeaflet } from \"react-leaflet\";\r\n\r\nimport L, { GPXOptions } from \"leaflet\";\r\nimport \"leaflet-gpx\";\r\n\r\nimport pinIconStart from \"leaflet-gpx/pin-icon-start.png\";\r\nimport pinIconEnd from \"leaflet-gpx/pin-icon-end.png\";\r\nimport pinShadow from \"leaflet-gpx/pin-shadow.png\";\r\nimport { ROUTE_LINE_STYLE_BASE } from \"./leafletElementStyles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addRoute, routeParsed } from \"../state/routes/routesActions\";\r\nimport { Route, Routes, RoutesLayers } from \"../types/routes\";\r\nimport { getRoutes } from \"../state/routes/routesReducer\";\r\nimport { RouteLayersContext } from \"../state/store\";\r\n\r\n// const route1content = require('../test-data/9_maj_2020_19_06_55_1589052909021.gpx');\r\n// const route2content = require('../test-data/21_maj_2020_18_51_11.gpx');\r\nconst route3content = require('../test-data/3_lip_2020_19_43_42_1593804563614.gpx');\r\n\r\n/**\r\n * ts-ignore's because the modules released on npm are outdated\r\n */\r\nconst options: GPXOptions = {\r\n  gpx_options: {\r\n    // @ts-ignore\r\n    joinTrackSegments: true,\r\n  },\r\n  marker_options: {\r\n    // @ts-ignore\r\n    startIconUrl: pinIconStart,\r\n    endIconUrl: pinIconEnd,\r\n    shadowUrl: pinShadow,\r\n  },\r\n  polyline_options: ROUTE_LINE_STYLE_BASE,\r\n};\r\n\r\n// TODO: consider moving to utils if needed elsewhere\r\nconst composeBounds = (routes: Routes, layers: RoutesLayers) => {\r\n  const routesArray = Object.values(routes);\r\n\r\n  return routesArray.reduce((carry: L.LatLngBounds | null, route: Route) => {\r\n    const routeLayers = layers[route.id];\r\n\r\n    if (!routeLayers || !routeLayers.gpx) {\r\n      return carry;\r\n    }\r\n\r\n    if (carry) {\r\n      return carry.extend(routeLayers.gpx.getBounds());\r\n    }\r\n\r\n    return routeLayers.gpx.getBounds();\r\n  }, null);\r\n};\r\n\r\nexport const GpxLoader: React.FC = () => {\r\n  const { map } = useLeaflet();\r\n\r\n  const routes = useSelector(getRoutes);\r\n  const { layers, setGpx } = useContext(RouteLayersContext);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (process.env.REACT_APP_EXAMPLE_DATA === \"true\") {\r\n      dispatch(\r\n        addRoute(\"3_lip_2020_19_43_42_1593804563614.gpx\", route3content)\r\n      );\r\n    }\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!map) {\r\n      return;\r\n    }\r\n\r\n    if (!routes) {\r\n      return;\r\n    }\r\n\r\n    Object.entries(routes).forEach(([_key, route]) => {\r\n      const routeLayers = layers[route.id];\r\n\r\n      if (!routeLayers || routeLayers.gpx) {\r\n        return;\r\n      }\r\n\r\n      const gpx = new L.GPX(route.content, options);\r\n      setGpx(route.id, gpx);\r\n      dispatch(routeParsed(route.id));\r\n\r\n      // TODO: only temporarily, move this out of here\r\n      // const polylineLayer = getPolylineLayer(gpx);\r\n\r\n      // if (polylineLayer) {\r\n      //     polylineLayer.getLatLngs().forEach((latLng: LatLng | LatLng[] | LatLng[][]) => {\r\n      //         // @ts-ignore\r\n      //         L.circleMarker(latLng, { weight: 1, renderer: markerCanvasRenderer }).addTo(map);\r\n      //     });\r\n      // }\r\n\r\n      gpx.addTo(routeLayers.layers);\r\n      routeLayers.layers.addTo(map);\r\n    });\r\n\r\n    Object.entries(layers).forEach(([id, layer]) => {\r\n      if (routes[id]) {\r\n        return;\r\n      }\r\n\r\n      // Remove routes no longer present in state from the map\r\n      layer.layers.remove();\r\n    });\r\n  }, [map, routes, layers, setGpx, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!map) {\r\n      return;\r\n    }\r\n\r\n    // This is probably only temporary so I don't have to pan the map on each refresh\r\n    const bounds = composeBounds(routes, layers);\r\n\r\n    if (bounds) {\r\n      map.fitBounds(bounds);\r\n    }\r\n  }, [layers, map, routes]);\r\n\r\n  return null;\r\n};\r\n","import React, { useCallback, useContext, useEffect } from \"react\";\r\nimport { useLeaflet } from \"react-leaflet\";\r\nimport L, { LayerEvent } from \"leaflet\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { analyseRoutes } from \"../../state/routes/routesActions\";\r\nimport { RouteLayersContext } from \"../../state/store\";\r\n\r\nconst registerLeafletEventListeners = (\r\n  map: L.Map | undefined,\r\n  callback: () => void\r\n) => {\r\n  if (!map) {\r\n    return;\r\n  }\r\n\r\n  console.log(\"Registering leaflet event listeners...\");\r\n\r\n  const eventHandler = (e: LayerEvent) => callback();\r\n\r\n  // track.on('layeradd layerremove', (e: LayerEvent) => callback());\r\n  map.on(L.Draw.Event.CREATED, eventHandler);\r\n  map.on(L.Draw.Event.EDITED, eventHandler);\r\n  map.on(L.Draw.Event.DELETED, eventHandler);\r\n  map.on(\"TRACK_LOADED\", eventHandler);\r\n\r\n  return () => {\r\n    // track.off('layeradd layerremove', eventHandler);\r\n    map.off(L.Draw.Event.CREATED, eventHandler);\r\n    map.off(L.Draw.Event.EDITED, eventHandler);\r\n    map.off(L.Draw.Event.DELETED, eventHandler);\r\n    map.off(\"TRACK_LOADED\", eventHandler);\r\n  };\r\n};\r\n\r\n// TODO: would it make sense if this worked on a single route passed via a prop?\r\n// Upsides: nicer code, probably easier to manage\r\n// Downsides: more event listeners\r\nexport const RouteAnalyser: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { map } = useLeaflet();\r\n  const { layers, trackLayer } = useContext(RouteLayersContext);\r\n\r\n  const runAnalysis = useCallback(() => {\r\n    dispatch(analyseRoutes(layers, trackLayer));\r\n  }, [layers, trackLayer]);\r\n\r\n  useEffect(\r\n    () => registerLeafletEventListeners(map, runAnalysis),\r\n    [runAnalysis]\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(analyseRoutes(layers, trackLayer));\r\n  }, [runAnalysis]);\r\n\r\n  return null;\r\n};\r\n","import { useCallback, useContext, useEffect } from \"react\";\r\nimport L from \"leaflet\";\r\n\r\nimport { useLeaflet } from \"react-leaflet\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getRoutes,\r\n  getRoutesAnalysis,\r\n  getSelectedPolyline,\r\n} from \"../../state/routes/routesReducer\";\r\nimport {\r\n  RouteLayers,\r\n  RouteFragments,\r\n  Selected,\r\n  RouteFragment,\r\n} from \"../../types/routes\";\r\nimport { getPolylineLayer } from \"../../utils/getPolylineLayer\";\r\nimport {\r\n  ROUTE_LINE_HOVER,\r\n  ROUTE_LINE_STYLE_BASE,\r\n  ROUTE_LINE_STYLE_OFFTRACK,\r\n  ROUTE_LINE_STYLE_ONTRACK,\r\n  ROUTE_LINE_STYLE_UNKNOWN,\r\n} from \"../leafletElementStyles\";\r\nimport { selectPolyline as selectPolylineAction } from \"../../state/routes/routesActions\";\r\nimport { RouteLayersContext } from \"../../state/store\";\r\n\r\nconst getRouteLineStyle = (type: RouteFragment[\"type\"]) => {\r\n  switch (type) {\r\n    case \"ontrack\":\r\n      return ROUTE_LINE_STYLE_ONTRACK;\r\n    case \"offtrack\":\r\n      return ROUTE_LINE_STYLE_OFFTRACK;\r\n    default:\r\n      return ROUTE_LINE_STYLE_UNKNOWN;\r\n  }\r\n};\r\n\r\nconst drawFragments = (\r\n  analysisId: string,\r\n  routeLayers: RouteLayers,\r\n  fragments: RouteFragments,\r\n  selectedPolyline: Selected | null,\r\n  selectPolyline: (id: string, analysisId: string) => void\r\n) => {\r\n  routeLayers.offtrackMarkersLayer.clearLayers();\r\n  routeLayers.offtrackFragmentsLayer.clearLayers();\r\n  routeLayers.ontrackMarkersLayer.clearLayers();\r\n  routeLayers.ontrackFragmentsLayer.clearLayers();\r\n\r\n  fragments.forEach((fragment) => {\r\n    const style = {\r\n      ...ROUTE_LINE_STYLE_BASE,\r\n      ...getRouteLineStyle(fragment.type),\r\n      ...(selectedPolyline?.id === fragment.id ? ROUTE_LINE_HOVER : {}),\r\n    };\r\n\r\n    const polyline = L.polyline(fragment.latLngs, style);\r\n\r\n    polyline\r\n      .on(\"click\", function (e) {\r\n        selectPolyline(fragment.id, analysisId);\r\n\r\n        // const exitPoint = fragment[0];\r\n        // const entryPoint = fragment[fragment.length - 1];\r\n\r\n        // L.marker([exitPoint.lat, exitPoint.lng])\r\n        //     .addTo(routeLayers.offtrackMarkersLayer)\r\n        //     .bindTooltip(exitPoint.meta.time.toString(), OFFTRACK_POINT_TOOLTIP_OPTIONS);\r\n\r\n        // L.marker([entryPoint.lat, entryPoint.lng])\r\n        //     .addTo(routeLayers.offtrackMarkersLayer)\r\n        //     .bindTooltip(entryPoint.meta.time.toString(), OFFTRACK_POINT_TOOLTIP_OPTIONS);\r\n      })\r\n      .on(\"mouseover\", function (e) {\r\n        polyline.setStyle({ ...style, ...ROUTE_LINE_HOVER });\r\n      })\r\n      .on(\"mouseout\", function (e) {\r\n        polyline.setStyle(style);\r\n      })\r\n      .addTo(routeLayers.offtrackFragmentsLayer);\r\n  });\r\n};\r\n\r\nexport const AnalysisDrawer = () => {\r\n  const { map } = useLeaflet();\r\n  const analyses = useSelector(getRoutesAnalysis);\r\n  const { layers } = useContext(RouteLayersContext);\r\n  const routes = useSelector(getRoutes);\r\n  const trackEmpty = !Object.keys(analyses).length;\r\n\r\n  const dispatch = useDispatch();\r\n  const selectPolylineFn = useCallback(\r\n    (id, analysisId) => dispatch(selectPolylineAction(id, analysisId)),\r\n    [dispatch]\r\n  );\r\n  const selectedPolyline = useSelector(getSelectedPolyline);\r\n\r\n  useEffect(() => {\r\n    if (!map) {\r\n      return;\r\n    }\r\n\r\n    for (let [key, route] of Object.entries(routes)) {\r\n      const routeLayers = layers[route.id];\r\n\r\n      if (!routeLayers?.gpx) {\r\n        continue;\r\n      }\r\n\r\n      const polylineLayer = getPolylineLayer(routeLayers.gpx);\r\n\r\n      if (!polylineLayer) {\r\n        throw new Error(\"Polyline layer not found in route.\");\r\n      }\r\n\r\n      if (!trackEmpty) {\r\n        // Tracks replace the original polyline\r\n        map.removeLayer(polylineLayer);\r\n      }\r\n\r\n      if (trackEmpty && !map.hasLayer(polylineLayer)) {\r\n        map.addLayer(polylineLayer);\r\n      }\r\n\r\n      const analysis = analyses[key] || [];\r\n\r\n      // Do not draw offtrack fragments if the track is empty, this is purely visual\r\n      drawFragments(\r\n        key,\r\n        routeLayers,\r\n        analysis,\r\n        selectedPolyline,\r\n        selectPolylineFn\r\n      );\r\n    }\r\n  }, [\r\n    map,\r\n    analyses,\r\n    selectedPolyline,\r\n    routes,\r\n    layers,\r\n    trackEmpty,\r\n    selectPolylineFn,\r\n  ]);\r\n\r\n  return null;\r\n};\r\n","export interface LoadTrackAction {\r\n  type: \"LOAD_TRACK\";\r\n  payload: {\r\n    content: string;\r\n  };\r\n}\r\n\r\nexport const loadTrack = (content: string): LoadTrackAction => ({\r\n  type: \"LOAD_TRACK\",\r\n  payload: { content },\r\n});\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { useLeaflet } from \"react-leaflet\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTrack } from \"../state/track/trackReducer\";\r\n\r\nimport L from \"leaflet\";\r\nimport \"leaflet-kml\";\r\nimport { loadTrack } from \"../state/track/trackActions\";\r\nimport { RouteLayersContext } from \"../state/store\";\r\n\r\nconst kmlFile = require('../test-data/WOJTEK.kml');\r\n\r\nconst loadKmlFile = (url: string, cb: Function) => {\r\n  var req = new window.XMLHttpRequest();\r\n  req.open(\"GET\", url);\r\n  try {\r\n    req.overrideMimeType(\"text/xml\");\r\n  } catch (e) {}\r\n  req.onreadystatechange = function () {\r\n    if (req.readyState !== 4) return;\r\n    if (req.status === 200) cb(req.responseText);\r\n  };\r\n  req.send(null);\r\n};\r\n\r\nexport const KmlLoader: React.FC = () => {\r\n  const { map } = useLeaflet();\r\n  const dispatch = useDispatch();\r\n  const { trackLayer } = useContext(RouteLayersContext);\r\n\r\n  const track = useSelector(getTrack);\r\n\r\n  useEffect(() => {\r\n    if (process.env.REACT_APP_EXAMPLE_DATA === \"true\") {\r\n      loadKmlFile(kmlFile, (content: string) => dispatch(loadTrack(content)));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!map) {\r\n      return;\r\n    }\r\n\r\n    if (!track?.content) {\r\n      return;\r\n    }\r\n\r\n    const parser = new DOMParser();\r\n    const kmlContent = parser.parseFromString(track.content, \"text/xml\");\r\n\r\n    // @ts-ignore\r\n    const kml = new L.KML(kmlContent);\r\n    kml\r\n      .getLayers()[0]\r\n      .getLayers()\r\n      .forEach((layer: any) => trackLayer.addLayer(layer));\r\n\r\n    map.fireEvent(\"TRACK_LOADED\");\r\n  }, [map, track, trackLayer]);\r\n\r\n  return null;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Map,\r\n  TileLayer,\r\n  ZoomControl,\r\n  ScaleControl,\r\n  LayersControl,\r\n} from \"react-leaflet\";\r\nimport { LatLngExpression } from \"leaflet\";\r\n\r\nimport \"./LeafletMap.scss\";\r\nimport { GpxLoader } from \"./GpxLoader\";\r\nimport { TrackDrawer } from \"./TrackDrawer/TrackDrawer\";\r\nimport { RouteAnalyser } from \"./RouteAnalyser/RouteAnalyser\";\r\nimport { AnalysisDrawer } from \"./RouteAnalyser/AnalysisDrawer\";\r\nimport { KmlLoader } from \"./KmlLoader\";\r\n\r\nconst PREFER_CANVAS = false;\r\n\r\nexport const LeafletMap: React.FC = () => {\r\n  const [position] = useState<LatLngExpression>({\r\n    lat: 51.505,\r\n    lng: -0.09,\r\n  });\r\n\r\n  const [zoom] = useState<number>(13);\r\n\r\n  // const context = useLeaflet();\r\n\r\n  // // Make leaflet acknowledge the container size, otherwise it wont render all tiles\r\n  // useLayoutEffect(() => {\r\n  //     if (!context.map) {\r\n  //         return;\r\n  //     }\r\n\r\n  //     context.map.invalidateSize();\r\n  // }, [context.map]);\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <Map\r\n        center={position}\r\n        zoom={zoom}\r\n        zoomControl={false}\r\n        preferCanvas={PREFER_CANVAS}\r\n      >\r\n        <LayersControl position=\"topright\">\r\n          <LayersControl.BaseLayer checked name=\"Mapa\">\r\n            <TileLayer\r\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n          </LayersControl.BaseLayer>\r\n          <LayersControl.BaseLayer name=\"Satelita\">\r\n            <TileLayer\r\n              attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\r\n              url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n            />\r\n          </LayersControl.BaseLayer>\r\n          <LayersControl.BaseLayer name=\"Bez mapy\">\r\n            <TileLayer url=\"\" />\r\n          </LayersControl.BaseLayer>\r\n        </LayersControl>\r\n        <ZoomControl position=\"topleft\" />\r\n        <ScaleControl position=\"bottomleft\" imperial={false} />\r\n        <RouteAnalyser />\r\n\r\n        <GpxLoader />\r\n        <KmlLoader />\r\n        <TrackDrawer drawingMode={true} />\r\n        <AnalysisDrawer />\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n","// import { DefaultTheme } from 'styled-components';\r\n\r\n// Palette 20\r\nconst palette = {\r\n  // Primary\r\n  \"light-blue-050\": \"#EBF8FF\",\r\n  \"light-blue-100\": \"#D1EEFC\",\r\n  \"light-blue-200\": \"#A7D8F0\",\r\n  \"light-blue-300\": \"#7CC1E4\",\r\n  \"light-blue-400\": \"#55AAD4\",\r\n  \"light-blue-500\": \"#3994C1\",\r\n  \"light-blue-600\": \"#2D83AE\",\r\n  \"light-blue-700\": \"#1D6F98\",\r\n  \"light-blue-800\": \"#166086\",\r\n  \"light-blue-900\": \"#0B4F71\",\r\n\r\n  \"green-050\": \"#E3F9E5\",\r\n  \"green-100\": \"#C1EAC5\",\r\n  \"green-200\": \"#A3D9A5\",\r\n  \"green-300\": \"#7BC47F\",\r\n  \"green-400\": \"#57AE5B\",\r\n  \"green-500\": \"#3F9142\",\r\n  \"green-600\": \"#2F8132\",\r\n  \"green-700\": \"#207227\",\r\n  \"green-800\": \"#0E5814\",\r\n  \"green-900\": \"#05400A\",\r\n\r\n  // Neutrals\r\n  \"cool-grey-050\": \"#F5F7FA\",\r\n  \"cool-grey-100\": \"#E4E7EB\",\r\n  \"cool-grey-200\": \"#CBD2D9\",\r\n  \"cool-grey-300\": \"#9AA5B1\",\r\n  \"cool-grey-400\": \"#7B8794\",\r\n  \"cool-grey-500\": \"#616E7C\",\r\n  \"cool-grey-600\": \"#52606D\",\r\n  \"cool-grey-700\": \"#3E4C59\",\r\n  \"cool-grey-800\": \"#323F4B\",\r\n  \"cool-grey-900\": \"#1F2933\",\r\n\r\n  // Supporting\r\n  \"purple-050\": \"#EAE2F8\",\r\n  \"purple-100\": \"#CFBCF2\",\r\n  \"purple-200\": \"#A081D9\",\r\n  \"purple-300\": \"#8662C7\",\r\n  \"purple-400\": \"#724BB7\",\r\n  \"purple-500\": \"#653CAD\",\r\n  \"purple-600\": \"#51279B\",\r\n  \"purple-700\": \"#421987\",\r\n  \"purple-800\": \"#34126F\",\r\n  \"purple-900\": \"#240754\",\r\n\r\n  \"red-050\": \"#FFEEEE\",\r\n  \"red-100\": \"#FACDCD\",\r\n  \"red-200\": \"#F29B9B\",\r\n  \"red-300\": \"#E66A6A\",\r\n  \"red-400\": \"#D64545\",\r\n  \"red-500\": \"#BA2525\",\r\n  \"red-600\": \"#A61B1B\",\r\n  \"red-700\": \"#911111\",\r\n  \"red-800\": \"#780A0A\",\r\n  \"red-900\": \"#610404\",\r\n\r\n  \"yellow-050\": \"#FFFAEB\",\r\n  \"yellow-100\": \"#FCEFC7\",\r\n  \"yellow-200\": \"#F8E3A3\",\r\n  \"yellow-300\": \"#F9DA8B\",\r\n  \"yellow-400\": \"#F7D070\",\r\n  \"yellow-500\": \"#E9B949\",\r\n  \"yellow-600\": \"#C99A2E\",\r\n  \"yellow-700\": \"#A27C1A\",\r\n  \"yellow-800\": \"#7C5E10\",\r\n  \"yellow-900\": \"#513C06\",\r\n};\r\n\r\n// Spacing and sizing system\r\n// Defined as constants to allow explicit references, instead of the ridiculous ambiguous default way\r\nexport const fontSize = {\r\n  body: \"14px\",\r\n  12: `${12 / 16}rem`,\r\n  14: `${14 / 16}rem`,\r\n  16: `${16 / 16}rem`,\r\n  18: `${18 / 16}rem`,\r\n  20: `${20 / 16}rem`,\r\n  24: `${24 / 16}rem`,\r\n  30: `${30 / 16}rem`,\r\n  36: `${36 / 16}rem`,\r\n  48: `${48 / 16}rem`,\r\n};\r\n\r\nexport const space = {\r\n  4: `${4 / 16}rem`,\r\n  8: `${8 / 16}rem`,\r\n  12: `${12 / 16}rem`,\r\n  16: `${16 / 16}rem`,\r\n  24: `${24 / 16}rem`,\r\n  32: `${32 / 16}rem`,\r\n  48: `${48 / 16}rem`,\r\n  64: `${64 / 16}rem`,\r\n  96: `${96 / 16}rem`,\r\n  128: `${128 / 16}rem`,\r\n};\r\n\r\nconst preset = {\r\n  colors: {\r\n    text: palette[\"cool-grey-800\"],\r\n    textLight: palette[\"cool-grey-050\"],\r\n    background: \"#fff\",\r\n    primary: palette[\"purple-500\"],\r\n    secondary: palette[\"cool-grey-400\"],\r\n    muted: palette[\"cool-grey-500\"],\r\n    gray: palette[\"cool-grey-300\"],\r\n    highlight: \"hsla(205, 100%, 40%, 0.125)\",\r\n\r\n    header: palette[\"cool-grey-200\"],\r\n  },\r\n  fonts: {\r\n    body: \"Lato, system-ui, sans-serif\",\r\n    heading: \"inherit\",\r\n    monospace: \"Menlo, monospace\",\r\n  },\r\n  fontSizes: fontSize,\r\n  fontWeights: {\r\n    body: 400,\r\n    heading: 700,\r\n    bold: 700,\r\n  },\r\n  lineHeights: {\r\n    body: 1.5,\r\n    heading: 1.25,\r\n  },\r\n  space,\r\n  radii: {\r\n    default: \".375rem\",\r\n  },\r\n  shadows: {\r\n    card: \"0 0 4px rgba(0, 0, 0, .125)\",\r\n  },\r\n  input: {\r\n    marginRight: space[\"8\"],\r\n    padding: space[\"8\"],\r\n    border: \"0\",\r\n    boxShadow: \"inset 0 0 2px\",\r\n  },\r\n  // rebass variants\r\n  text: {\r\n    heading: {\r\n      fontFamily: \"heading\",\r\n      lineHeight: \"heading\",\r\n      fontWeight: \"heading\",\r\n      letterSpacing: \"-1px\",\r\n      fontSize: fontSize[\"48\"],\r\n\r\n      h1: {\r\n        letterSpacing: \"-1px\", // nesting doesn't seem to inherit values... this is kinda dumb\r\n        marginBottom: space[\"12\"],\r\n        fontSize: fontSize[\"48\"],\r\n      },\r\n      h2: {\r\n        letterSpacing: \"-1px\",\r\n        marginBottom: space[\"12\"],\r\n        fontSize: fontSize[\"30\"],\r\n      },\r\n      h3: {\r\n        letterSpacing: \"-1px\",\r\n        marginBottom: space[\"12\"],\r\n        fontSize: fontSize[\"24\"],\r\n      },\r\n      h4: {\r\n        letterSpacing: \"-1px\",\r\n        marginBottom: space[\"12\"],\r\n        fontSize: fontSize[\"20\"],\r\n      },\r\n    },\r\n    display: {\r\n      fontFamily: \"heading\",\r\n      fontWeight: \"heading\",\r\n      lineHeight: \"heading\",\r\n      fontSize: [fontSize[\"24\"], fontSize[\"30\"], fontSize[\"36\"]],\r\n    },\r\n    caps: {\r\n      textTransform: \"uppercase\",\r\n      letterSpacing: \"0.1em\",\r\n    },\r\n    iconButtonText: {\r\n      marginLeft: space[\"8\"],\r\n    },\r\n    routeName: {\r\n      marginRight: space[\"8\"],\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      marginBottom: 0,\r\n      fontSize: fontSize[\"20\"],\r\n\r\n      editable: {\r\n        marginRight: space[\"8\"],\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        marginBottom: 0,\r\n        fontSize: fontSize[\"16\"],\r\n      },\r\n    },\r\n    instruction: {\r\n      fontSize: fontSize[\"12\"],\r\n      color: \"muted\",\r\n    },\r\n  },\r\n  variants: {\r\n    header: {\r\n      backgroundColor: \"header\",\r\n      letterSpacing: \"-2px\",\r\n      padding: space[\"16\"],\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    sidebar: {\r\n      // This is stolen from leaflet control css, but I don't like it, so TODO\r\n      boxShadow: \"0 1px 5px rgba(0,0,0,0.65)\",\r\n      borderRadius: \"default\",\r\n      overflow: \"hidden\",\r\n    },\r\n    popup: {\r\n      variant: \"variants.sidebar\",\r\n      marginTop: space[\"12\"],\r\n      backgroundColor: \"rgb(255 255 255 / 90%)\",\r\n    },\r\n    content: {\r\n      px: space[\"24\"],\r\n      py: space[\"16\"],\r\n      overflow: \"auto\",\r\n      overflowX: \"hidden\",\r\n    },\r\n    container: {\r\n      marginBottom: space[\"16\"],\r\n    },\r\n    label: {\r\n      marginBottom: space[\"4\"],\r\n    },\r\n    description: {\r\n      marginBottom: space[\"16\"],\r\n    },\r\n    alert: {\r\n      marginBottom: space[\"16\"],\r\n      iconContainer: {\r\n        borderRadius: \"50%\",\r\n        backgroundColor: palette[\"yellow-300\"],\r\n        width: fontSize[\"24\"],\r\n        height: fontSize[\"24\"],\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginRight: space[\"8\"],\r\n      },\r\n      icon: {\r\n        color: palette[\"yellow-800\"],\r\n        boxShadow: 0,\r\n        padding: 0,\r\n      },\r\n    },\r\n    link: {\r\n      color: \"primary\",\r\n    },\r\n    nav: {\r\n      px: space[\"24\"],\r\n      py: space[\"16\"],\r\n      justifyContent: \"center\",\r\n      marginTop: \"auto\",\r\n\r\n      \"*:not(:only-child):not(:first-of-type)\": {\r\n        marginLeft: space[\"8\"],\r\n      },\r\n    },\r\n    routeSummary: {\r\n      pb: space[\"16\"],\r\n    },\r\n\r\n    table: {\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n      borderSpacing: 0,\r\n    },\r\n    th: {\r\n      px: space[\"4\"],\r\n      py: space[\"8\"],\r\n    },\r\n    td: {\r\n      px: space[\"4\"],\r\n      py: space[\"8\"],\r\n      borderBottom: \"solid 1px\",\r\n      borderColor: palette[\"cool-grey-100\"],\r\n    },\r\n    highlightedRow: {\r\n      fontWeight: \"bold\",\r\n      backgroundColor: palette[\"cool-grey-100\"],\r\n    },\r\n  },\r\n  buttons: {\r\n    primary: {\r\n      cursor: \"pointer\",\r\n      fontSize: fontSize[\"16\"],\r\n      color: \"background\",\r\n      bg: \"primary\",\r\n      borderRadius: \"default\",\r\n      px: space[\"16\"],\r\n      py: space[\"8\"],\r\n    },\r\n    outline: {\r\n      variant: \"buttons.primary\",\r\n      color: \"primary\",\r\n      bg: \"transparent\",\r\n      boxShadow: \"inset 0 0 2px\",\r\n    },\r\n    primaryOutline: {\r\n      variant: \"buttons.outline\",\r\n    },\r\n    secondary: {\r\n      variant: \"buttons.primary\",\r\n      color: \"background\",\r\n      bg: \"secondary\",\r\n    },\r\n    secondaryOutline: {\r\n      variant: \"buttons.outline\",\r\n      color: \"secondary\",\r\n    },\r\n    greenOutline: {\r\n      variant: \"buttons.outline\",\r\n      color: palette[\"green-600\"],\r\n      \":hover:not(.active), :focus:not(.active)\": {\r\n        color: \"background\",\r\n        bg: palette[\"green-600\"],\r\n      },\r\n    },\r\n    destructive: {\r\n      variant: \"buttons.primary\",\r\n      bg: palette[\"red-600\"],\r\n      color: \"background\",\r\n    },\r\n    destructiveOutline: {\r\n      variant: \"buttons.outline\",\r\n      color: palette[\"red-500\"],\r\n      \":hover:not(.active), :focus:not(.active)\": {\r\n        color: \"background\",\r\n        bg: palette[\"red-600\"],\r\n      },\r\n    },\r\n    grayOutline: {\r\n      variant: \"buttons.outline\",\r\n      color: palette[\"cool-grey-500\"],\r\n      \":hover:not(.active), :focus:not(.active)\": {\r\n        color: palette[\"cool-grey-700\"],\r\n        bg: palette[\"cool-grey-100\"],\r\n      },\r\n    },\r\n    icon: {\r\n      variant: \"buttons.outline\",\r\n      color: \"muted\",\r\n      boxShadow: 0,\r\n      padding: 0,\r\n    },\r\n\r\n    github: {\r\n      variant: \"buttons.outline\",\r\n      boxShadow: 0,\r\n      fontSize: fontSize[\"24\"],\r\n      color: \"muted\",\r\n      \":hover:not(.active), :focus:not(.active)\": {\r\n        color: \"primary\",\r\n      },\r\n    },\r\n    chevron: {\r\n      variant: \"buttons.outline\",\r\n      padding: 0,\r\n      boxShadow: 0,\r\n      fontSize: fontSize[\"24\"],\r\n      color: \"muted\",\r\n      \":hover:not(.active), :focus:not(.active)\": {\r\n        color: \"primary\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const theme: any = {\r\n  ...preset,\r\n  palette,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport Uppy from \"@uppy/core\";\r\nimport { DragDrop } from \"@uppy/react\";\r\n\r\nimport \"@uppy/core/dist/style.css\";\r\nimport \"@uppy/drag-drop/dist/style.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addRoute } from \"../../state/routes/routesActions\";\r\nimport { loadTrack } from \"../../state/track/trackActions\";\r\n\r\nconst uppy = Uppy({\r\n  autoProceed: true,\r\n  restrictions: {\r\n    allowedFileTypes: [\".gpx\", \".kml\"],\r\n  },\r\n});\r\n\r\nconst readFile = (file: File): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n\r\n    fileReader.onload = () => resolve(fileReader.result as string);\r\n    fileReader.onerror = reject;\r\n\r\n    fileReader.readAsText(file);\r\n  });\r\n};\r\n\r\nexport const Uploader = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    uppy.on(\"file-added\", async (file) => {\r\n      console.info(file);\r\n      // TODO: handle error state\r\n      const content = await readFile(file.data);\r\n\r\n      if (file.extension === \"gpx\") {\r\n        dispatch(addRoute(file.name, content));\r\n        // This is kind of a hack to allow duplicates and handle the case when a route is removed\r\n        uppy.removeFile(file.id);\r\n      } else if (file.extension === \"kml\") {\r\n        dispatch(loadTrack(content));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <DragDrop\r\n      uppy={uppy}\r\n      locale={{\r\n        strings: {\r\n          dropHereOr:\r\n            \"Przeciągnij i upuść pliki lub %{browse} (dozwolone formaty: .gpx, .kml)\",\r\n          browse: \"przeglądaj\",\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React, { ReactNode } from \"react\";\r\nimport {\r\n  Button as RebassButton,\r\n  Link as RebassLink,\r\n  ButtonProps,\r\n  LinkProps as RebassLinkProps,\r\n} from \"rebass\";\r\nimport { space } from \"../styles/theme\";\r\nimport { Link, LinkProps } from \"react-router-dom\";\r\n\r\ninterface CustomButtonProps extends ButtonProps {\r\n  icon?: string;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport const Button = ({ children, icon, ...restProps }: CustomButtonProps) => (\r\n  <RebassButton {...restProps}>\r\n    {icon && (\r\n      <i\r\n        className={`${icon}`}\r\n        style={{ marginRight: children ? space[\"4\"] : 0 }}\r\n      />\r\n    )}\r\n    {children}\r\n  </RebassButton>\r\n);\r\n\r\nexport const LinkButton = (props: CustomButtonProps & LinkProps) => (\r\n  <Button as={Link} {...props} />\r\n);\r\n\r\nexport const ExternalLinkButton = ({\r\n  href,\r\n  ...props\r\n}: CustomButtonProps & RebassLinkProps) => (\r\n  <Button as={RebassLink} href={href} {...props} />\r\n);\r\n","import { Box, Flex, Heading, Text } from \"rebass\";\r\nimport { space } from \"../../styles/theme\";\r\nimport { Button } from \"../Button\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Input } from \"@rebass/forms\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeRouteName, removeRoute } from \"../../state/routes/routesActions\";\r\nimport { Route } from \"../../types/routes\";\r\n\r\ntype RouteNameInputProps = {\r\n  defaultValue: string;\r\n  onAccept: (name: string | null) => void;\r\n};\r\n\r\nconst RouteNameInput = ({ defaultValue, onAccept }: RouteNameInputProps) => {\r\n  const ref = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    const input = ref.current;\r\n\r\n    if (input) {\r\n      input.focus();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Input\r\n      ref={ref}\r\n      id=\"name\"\r\n      name=\"name\"\r\n      type=\"text\"\r\n      defaultValue={defaultValue}\r\n      onBlur={() => onAccept(ref.current && ref.current.value)}\r\n    />\r\n  );\r\n};\r\n\r\nconst RouteName = ({\r\n  name,\r\n  onChange,\r\n}: {\r\n  name: string;\r\n  onChange: (name: string) => void;\r\n}) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <RouteNameInput\r\n        defaultValue={name}\r\n        onAccept={(name) => {\r\n          setIsEditing(false);\r\n          name && onChange(name);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ cursor: \"pointer\" }} onClick={() => setIsEditing(true)}>\r\n      <Heading variant=\"routeName.editable\">{name}</Heading>\r\n      <Text variant=\"instruction\">Kliknij, aby zmienić nazwę...</Text>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const RouteRecord = ({ route }: { route: Route }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box variant=\"container\">\r\n      <Flex\r\n        mb={space[\"12\"]}\r\n        sx={{\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          // Setting min-height prevents the following rows from jumping 1 pixel up when the input is rendered\r\n          minHeight: space[\"48\"],\r\n        }}\r\n      >\r\n        <RouteName\r\n          name={route.name}\r\n          onChange={(name: string) => dispatch(changeRouteName(route.id, name))}\r\n        />\r\n\r\n        <Flex sx={{ flexWrap: \"nowrap\", flexShrink: 0 }}>\r\n          {/* <Button\r\n            variant=\"secondaryOutline\"\r\n            mr=\"4\"\r\n            icon=\"fa-fw fas fa-eye\"\r\n            sx={{ height: \"100%\" }}\r\n          /> */}\r\n          <Button\r\n            variant=\"destructiveOutline\"\r\n            icon=\"fa-fw fas fa-times\"\r\n            sx={{ height: \"100%\" }}\r\n            onClick={() => dispatch(removeRoute(route.id))}\r\n          />\r\n        </Flex>\r\n      </Flex>\r\n\r\n      {/*{route.gpx && (*/}\r\n      {/*    <RouteData route={route.gpx} />*/}\r\n      {/*)}*/}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// type RouteDataProps = {\r\n//     route: GPX,\r\n// };\r\n//\r\n// const RouteData: React.FC<RouteDataProps> = ({ route }) => {\r\n//     const get_name = route.get_name();\r\n//     const get_distance = route.get_distance();\r\n//     const get_start_time = route.get_start_time().toString();\r\n//     const get_end_time = route.get_end_time().toString();\r\n//     const get_moving_time = route.get_moving_time();\r\n//     const get_total_time = route.get_total_time();\r\n//     const get_moving_pace = route.get_moving_pace();\r\n//     const get_moving_speed = route.get_moving_speed();\r\n//     const get_total_speed = route.get_total_speed();\r\n//     const get_elevation_min = route.get_elevation_min();\r\n//     const get_elevation_max = route.get_elevation_max();\r\n//     const get_elevation_gain = route.get_elevation_gain();\r\n//     const get_elevation_loss = route.get_elevation_loss();\r\n//     const get_average_hr = route.get_average_hr();\r\n//     const get_average_cadence = route.get_average_cadence();\r\n//     const get_average_temp = route.get_average_temp();\r\n//\r\n//     return (\r\n//         <>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_name: <span className=\"font-bold\">{ get_name }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the name of the GPX track</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_distance: <span className=\"font-bold\">{ get_distance }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the total track distance, in meters</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_start_time: <span className=\"font-bold\">{ get_start_time }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns a Javascript Date object representing the starting time</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_end_time: <span className=\"font-bold\">{ get_end_time }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns a Javascript Date object representing when the last point was recorded</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_moving_time: <span className=\"font-bold\">{ get_moving_time }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the moving time, in milliseconds</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_total_time: <span className=\"font-bold\">{ get_total_time }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the total track time, in milliseconds</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_moving_pace: <span className=\"font-bold\">{ get_moving_pace }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the average moving pace in milliseconds per km</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_moving_speed: <span className=\"font-bold\">{ get_moving_speed }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the average moving speed in km per hour</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_total_speed: <span className=\"font-bold\">{ get_total_speed }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the average total speed in km per hour</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_elevation_min: <span className=\"font-bold\">{ get_elevation_min }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the lowest elevation, in meters</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_elevation_max: <span className=\"font-bold\">{ get_elevation_max }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the highest elevation, in meters</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_elevation_gain: <span className=\"font-bold\">{ get_elevation_gain }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the cumulative elevation gain, in meters</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_elevation_loss: <span className=\"font-bold\">{ get_elevation_loss }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the cumulative elevation loss, in meters</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_average_hr: <span className=\"font-bold\">{ get_average_hr }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the average heart rate (if available)</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_average_cadence: <span className=\"font-bold\">{ get_average_cadence }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the average cadence (if available)</div>\r\n//             </div>\r\n//             <div className=\"mb-2 text-sm text-gray-800\">\r\n//                 <span>get_average_temp: <span className=\"font-bold\">{ get_average_temp }</span></span>\r\n//                 <div className=\"text-gray-700 text-xs\">returns the average of the temperature (if available)</div>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// };\r\n","import React from \"react\";\r\nimport { Box, Heading, Text } from \"rebass\";\r\nimport { fontSize, space } from \"../../styles/theme\";\r\n\r\nimport { Uploader } from \"../Uploader/Uploader\";\r\nimport { RouteRecord } from \"./RouteRecord\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getRoutes } from \"../../state/routes/routesReducer\";\r\n\r\nexport const RouteStep: React.FC = () => {\r\n  const routes = useSelector(getRoutes);\r\n  const amountOfRoutes = Object.keys(routes).length;\r\n\r\n  return (\r\n    <>\r\n      <Text\r\n        fontSize={fontSize[\"16\"]}\r\n        // fontWeight='bold'\r\n        color=\"text\"\r\n        sx={{\r\n          textAlign: \"justify\",\r\n          whiteSpace: \"pre-line\",\r\n          marginBottom: space[\"32\"],\r\n        }}\r\n      >\r\n        <p>\r\n          Witaj w aplikacji przeznaczonej do analizy tras <code>.gpx</code>.\r\n          Dzięki interaktywnej mapie porównasz załadowane trasy z wyznaczonym\r\n          torem, otrzymując szczegółowe informacje i podsumowanie dla każdej z\r\n          nich.\r\n        </p>\r\n\r\n        <p>\r\n          Projekt powstał na potrzeby organizacji amatorskich zawodów lotniczych\r\n          przez członków Aeroklubu Szczecińskiego.\r\n        </p>\r\n      </Text>\r\n\r\n      <Box variant=\"container\">\r\n        <Uploader />\r\n      </Box>\r\n\r\n      {amountOfRoutes > 0 && (\r\n        <Box variant=\"container\">\r\n          <Heading variant=\"heading.h3\">Załadowane przebiegi</Heading>\r\n        </Box>\r\n      )}\r\n\r\n      {amountOfRoutes === 0 && (\r\n        <Text>\r\n          Nie załadowano żadnych tras, przeciągnij pliki <code>.gpx</code> do\r\n          okna powyżej, lub użyj przeglądarki plików.\r\n        </Text>\r\n      )}\r\n\r\n      {Object.entries(routes).map(([_key, route]) => (\r\n        <RouteRecord key={`route-${route.id}`} route={route} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Box, BoxProps } from \"rebass\";\r\n\r\n/*\r\n  Rebass doesn't support table elements yet.\r\n  It comes with some default styling, that can be overridden in the usual ways (variant, sx, ...)\r\n  source: https://github.com/rebassjs/rebass/issues/569#issuecomment-580388815\r\n*/\r\n\r\nexport interface TableProps\r\n  extends BoxProps,\r\n    Omit<React.TableHTMLAttributes<HTMLTableElement>, keyof BoxProps> {}\r\n\r\nexport const Table: React.ComponentType<TableProps> = React.forwardRef(\r\n  (props, ref) => <Box ref={ref} as=\"table\" variant=\"table\" {...props} />\r\n);\r\n\r\nexport interface TableHeadProps\r\n  extends BoxProps,\r\n    Omit<React.HTMLAttributes<HTMLTableSectionElement>, keyof BoxProps> {}\r\n\r\nexport const TableHead: React.ComponentType<TableHeadProps> = React.forwardRef(\r\n  (props, ref) => <Box ref={ref} as=\"thead\" variant=\"thead\" {...props} />\r\n);\r\n\r\nexport interface TableBodyProps\r\n  extends BoxProps,\r\n    Omit<React.HTMLAttributes<HTMLTableSectionElement>, keyof BoxProps> {}\r\n\r\nexport const TableBody: React.ComponentType<TableBodyProps> = React.forwardRef(\r\n  (props, ref) => <Box ref={ref} as=\"tbody\" variant=\"tbody\" {...props} />\r\n);\r\n\r\nexport interface TableRowProps\r\n  extends BoxProps,\r\n    Omit<React.HTMLAttributes<HTMLTableRowElement>, keyof BoxProps> {}\r\n\r\nexport const TableRow: React.ComponentType<TableRowProps> = React.forwardRef(\r\n  (props, ref) => <Box ref={ref} as=\"tr\" variant=\"tr\" {...props} />\r\n);\r\n\r\nexport interface TableHeadCellProps\r\n  extends BoxProps,\r\n    Omit<React.TdHTMLAttributes<HTMLTableDataCellElement>, keyof BoxProps> {}\r\n\r\nexport const TableHeadCell: React.ComponentType<TableHeadCellProps> =\r\n  React.forwardRef((props, ref) => (\r\n    <Box ref={ref} as=\"th\" variant=\"th\" {...props} />\r\n  ));\r\n\r\nexport interface TableDataCellProps\r\n  extends BoxProps,\r\n    Omit<React.TdHTMLAttributes<HTMLTableDataCellElement>, keyof BoxProps> {}\r\n\r\nexport const TableDataCell: React.ComponentType<TableDataCellProps> =\r\n  React.forwardRef((props, ref) => (\r\n    <Box ref={ref} as=\"td\" variant=\"td\" {...props} />\r\n  ));\r\n","import { GPX } from \"leaflet\";\r\nimport moment from \"moment\";\r\nimport { GPXLatLng, RouteFragments } from \"../types/routes\";\r\n\r\nexport type AnalysisDataOfftrackIntervals = {\r\n  id: string;\r\n  index: number;\r\n  start: string;\r\n  end: string;\r\n  duration: string;\r\n};\r\n\r\nexport type AnalysisData = {\r\n  startTime: string;\r\n  endTime: string;\r\n  routeLength: string;\r\n  distance: string;\r\n  movingSpeed: string;\r\n  totalSpeed: string;\r\n  elevationMin: string;\r\n  elevationMax: string;\r\n  offtrackIntervals: AnalysisDataOfftrackIntervals[];\r\n  offtrackIntervalsSum: string;\r\n};\r\n\r\ntype OfftrackInterval = {\r\n  id: string;\r\n  intervals: [GPXLatLng, GPXLatLng];\r\n};\r\n\r\ntype OfftrackIntervals = Array<OfftrackInterval>;\r\n\r\n// TODO: milliseconds should probably be rounded off, to avoid issues with comparison (30.000 - 20.999 = 21)\r\n// maybe not necessarily here though, maybe somewhere closer to route analysis?\r\n// TODO: does not handle diffs larger than 24 hours, figure out a better solution\r\nconst getFormattedDurationLength = (\r\n  start: moment.Moment,\r\n  end: moment.Moment\r\n) => {\r\n  const diff = end.diff(start);\r\n  return moment.utc(diff).format(\"HH:mm:ss\");\r\n};\r\n\r\nconst calculateOfftrackIntervals = (analysis: RouteFragments) => {\r\n  return analysis\r\n    .map((value) => {\r\n      if (value.type === \"ontrack\" || value.type === \"unknown\") {\r\n        return null;\r\n      }\r\n\r\n      const intervals: [GPXLatLng, GPXLatLng] = [\r\n        value.latLngs[0],\r\n        value.latLngs[value.latLngs.length - 1],\r\n      ];\r\n\r\n      return {\r\n        id: value.id,\r\n        intervals,\r\n      };\r\n    })\r\n    .filter((value) => value !== null) as OfftrackIntervals;\r\n};\r\n\r\nconst sumOfftrackIntervals = (offtrackIntervals: OfftrackIntervals) => {\r\n  const secondsSum = offtrackIntervals.reduce(\r\n    (carry: number, { intervals }: OfftrackInterval) => {\r\n      const start = moment(intervals[0].meta.time);\r\n      const end = moment(intervals[1].meta.time);\r\n      const diff = end.diff(start);\r\n\r\n      carry += diff;\r\n      return carry;\r\n    },\r\n    0\r\n  );\r\n\r\n  return moment.utc(secondsSum).format(\"HH:mm:ss\");\r\n};\r\n\r\nexport const gatherAnalysisData = (\r\n  gpx: GPX,\r\n  analysis: RouteFragments | null\r\n): AnalysisData => {\r\n  // const get_name = gpx.get_name();\r\n  const distance = gpx.get_distance();\r\n  const get_start_time = gpx.get_start_time().toString();\r\n  const get_end_time = gpx.get_end_time().toString();\r\n  // const get_moving_time = gpx.get_moving_time();\r\n  // const get_total_time = gpx.get_total_time();\r\n  // const get_moving_pace = gpx.get_moving_pace();\r\n  const get_moving_speed = gpx.get_moving_speed();\r\n  const get_total_speed = gpx.get_total_speed();\r\n  const get_elevation_min = gpx.get_elevation_min();\r\n  const get_elevation_max = gpx.get_elevation_max();\r\n  // const get_elevation_gain = gpx.get_elevation_gain();\r\n  // const get_elevation_loss = gpx.get_elevation_loss();\r\n  // const get_average_hr = gpx.get_average_hr();\r\n  // const get_average_cadence = gpx.get_average_cadence();\r\n  // const get_average_temp = gpx.get_average_temp();\r\n\r\n  const routeLength = getFormattedDurationLength(\r\n    moment(get_start_time),\r\n    moment(get_end_time)\r\n  );\r\n\r\n  const offtrackIntervals = calculateOfftrackIntervals(analysis || []);\r\n  const offtrackIntervalsSum = sumOfftrackIntervals(offtrackIntervals);\r\n\r\n  return {\r\n    startTime: moment(get_start_time).format(),\r\n    endTime: moment(get_end_time).format(),\r\n    routeLength,\r\n    distance: `${distance.toFixed(2)} m`,\r\n    movingSpeed: `${get_moving_speed.toFixed(2)} km/h`,\r\n    totalSpeed: `${get_total_speed.toFixed(2)} km/h`,\r\n    elevationMin: `${get_elevation_min} m`,\r\n    elevationMax: `${get_elevation_max} m`,\r\n    offtrackIntervals: offtrackIntervals.map(({ id, intervals }, index) => {\r\n      const start = moment(intervals[0].meta.time);\r\n      const end = moment(intervals[1].meta.time);\r\n\r\n      return {\r\n        index: index + 1,\r\n        id,\r\n        start: start.format(\"HH:mm:ss\"),\r\n        end: end.format(\"HH:mm:ss\"),\r\n        duration: getFormattedDurationLength(start, end),\r\n      };\r\n    }),\r\n    offtrackIntervalsSum,\r\n  };\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { GPX } from \"leaflet\";\r\nimport { Box, Flex, Heading, Text } from \"rebass\";\r\nimport { space } from \"../../styles/theme\";\r\nimport { Route, RouteFragments } from \"../../types/routes\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableDataCell,\r\n  TableHead,\r\n  TableHeadCell,\r\n  TableRow,\r\n} from \"../Table\";\r\nimport {\r\n  AnalysisData,\r\n  AnalysisDataOfftrackIntervals,\r\n  gatherAnalysisData,\r\n} from \"../../utils/gatherAnalysisData\";\r\nimport { getSelectedPolyline } from \"../../state/routes/routesReducer\";\r\n\r\nconst RouteName = ({ name }: { name: string }) => {\r\n  return (\r\n    <Box>\r\n      <Heading variant=\"routeName\">{name}</Heading>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const RouteSummary = ({\r\n  route,\r\n  analysis,\r\n  gpx,\r\n}: {\r\n  route: Route;\r\n  analysis: RouteFragments | null;\r\n  gpx: GPX;\r\n}) => {\r\n  if (!analysis) {\r\n    return null;\r\n  }\r\n\r\n  const data = gatherAnalysisData(gpx, analysis);\r\n\r\n  return (\r\n    <Box variant=\"container\">\r\n      <Flex\r\n        mb={space[\"12\"]}\r\n        sx={{\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <RouteName name={route.name} />\r\n\r\n        {/* <Box sx={{ whiteSpace: \"nowrap\", flexShrink: 0 }}>\r\n          <Button\r\n            variant=\"secondaryOutline\"\r\n            mr=\"4\"\r\n            icon=\"fa-fw fas fa-eye\"\r\n            sx={{ height: \"100%\" }}\r\n          />\r\n        </Box> */}\r\n      </Flex>\r\n\r\n      {gpx && <RouteData data={data} />}\r\n\r\n      {analysis && (\r\n        <>\r\n          <Heading variant=\"heading.h4\">Precyzja lotu</Heading>\r\n          <RouteAnalysisTable data={data} />\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst RouteData = ({ data }: { data: AnalysisData }) => {\r\n  return (\r\n    <>\r\n      {/*<div className=\"mb-2 text-sm text-gray-800\">*/}\r\n      {/*    <span>get_name: <span className=\"font-bold\">{ get_name }</span></span>*/}\r\n      {/*    <div className=\"text-gray-700 text-xs\">returns the name of the GPX track</div>*/}\r\n      {/*</div>*/}\r\n      <Box variant=\"routeSummary\">\r\n        <span>Początek</span>\r\n        <Text fontWeight=\"bold\">{data.startTime}</Text>\r\n      </Box>\r\n      <Box variant=\"routeSummary\">\r\n        <span>Koniec</span>\r\n        <Text fontWeight=\"bold\">{data.endTime}</Text>\r\n      </Box>\r\n      {/*<Box variant=\"routeSummary\">*/}\r\n      {/*    <span>Czas trasy w minutach</span>*/}\r\n      {/*    <Text fontWeight=\"bold\">{ get_moving_time / 1000 / 60 }</Text>*/}\r\n      {/*    <div className=\"text-gray-700 text-xs\">returns the moving time, in milliseconds</div>*/}\r\n      {/*</Box>*/}\r\n      <Box variant=\"routeSummary\">\r\n        <span>Długość</span>\r\n        <Text fontWeight=\"bold\">{data.routeLength}</Text>\r\n      </Box>\r\n      <Box variant=\"routeSummary\">\r\n        <span>Pokonany dystans</span>\r\n        <Text fontWeight=\"bold\">{data.distance}</Text>\r\n      </Box>\r\n      {/*<Box variant=\"routeSummary\">*/}\r\n      {/*    <span>get_moving_pace </span>*/}\r\n      {/*    <Text fontWeight=\"bold\">{ get_moving_pace }</Text>*/}\r\n      {/*    <div className=\"text-gray-700 text-xs\">returns the average moving pace in milliseconds per km</div>*/}\r\n      {/*</Box>*/}\r\n      <Box variant=\"routeSummary\">\r\n        <span>Średnia prędkość w ruchu</span>\r\n        <Text fontWeight=\"bold\">{data.movingSpeed}</Text>\r\n      </Box>\r\n      <Box variant=\"routeSummary\">\r\n        <span>Średnia prędkość dla całego przebiegu</span>\r\n        <Text fontWeight=\"bold\">{data.totalSpeed}</Text>\r\n      </Box>\r\n      <Box variant=\"routeSummary\">\r\n        <span>Minimalna wysokość nad poziomem morza</span>\r\n        <Text fontWeight=\"bold\">{data.elevationMin}</Text>\r\n      </Box>\r\n      <Box variant=\"routeSummary\">\r\n        <span>Maksymalna wysokość nad poziomem morza</span>\r\n        <Text fontWeight=\"bold\">{data.elevationMax}</Text>\r\n      </Box>\r\n      {/*<Box variant=\"routeSummary\">*/}\r\n      {/*    <span>get_elevation_gain: </span>*/}\r\n      {/*    <Text fontWeight=\"bold\">{ get_elevation_gain }</Text>*/}\r\n      {/*    <div className=\"text-gray-700 text-xs\">returns the cumulative elevation gain, in meters</div>*/}\r\n      {/*</Box>*/}\r\n      {/*<Box variant=\"routeSummary\">*/}\r\n      {/*    <span>get_elevation_loss: </span>*/}\r\n      {/*    <Text fontWeight=\"bold\">{ get_elevation_loss }</Text>*/}\r\n      {/*    <div className=\"text-gray-700 text-xs\">returns the cumulative elevation loss, in meters</div>*/}\r\n      {/*</Box>*/}\r\n      {/*<div className=\"mb-2 text-sm text-gray-800\">*/}\r\n      {/*    <span>get_average_hr: <span className=\"font-bold\">{ get_average_hr }</span></span>*/}\r\n      {/*    <div className=\"text-gray-700 text-xs\">returns the average heart rate (if available)</div>*/}\r\n      {/*</div>*/}\r\n      {/*<div className=\"mb-2 text-sm text-gray-800\">*/}\r\n      {/*    <span>get_average_cadence: <span className=\"font-bold\">{ get_average_cadence }</span></span>*/}\r\n      {/*    <div className=\"text-gray-700 text-xs\">returns the average cadence (if available)</div>*/}\r\n      {/*</div>*/}\r\n      {/*<div className=\"mb-2 text-sm text-gray-800\">*/}\r\n      {/*    <span>get_average_temp: <span className=\"font-bold\">{ get_average_temp }</span></span>*/}\r\n      {/*    <div className=\"text-gray-700 text-xs\">returns the average of the temperature (if available)</div>*/}\r\n      {/*</div>*/}\r\n    </>\r\n  );\r\n};\r\n\r\nconst AnalysisRow = ({\r\n  interval,\r\n  isSelected,\r\n}: {\r\n  interval: AnalysisDataOfftrackIntervals;\r\n  isSelected: boolean;\r\n}) => {\r\n  const ref = useRef<HTMLTableRowElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (isSelected && ref.current) {\r\n      ref.current.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n    }\r\n  }, [isSelected]);\r\n\r\n  return (\r\n    <TableRow\r\n      ref={ref}\r\n      key={`offtrack-interval-${interval.id}`}\r\n      variant={isSelected ? \"highlightedRow\" : undefined}\r\n    >\r\n      <TableDataCell>{interval.index}</TableDataCell>\r\n      <TableDataCell>{interval.start}</TableDataCell>\r\n      <TableDataCell>{interval.end}</TableDataCell>\r\n      <TableDataCell>{interval.duration}</TableDataCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nconst RouteAnalysisTable = ({ data }: { data: AnalysisData }) => {\r\n  const selectedPolyline = useSelector(getSelectedPolyline);\r\n\r\n  return (\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableHeadCell>LP.</TableHeadCell>\r\n          <TableHeadCell>Opuszczenie trasy</TableHeadCell>\r\n          <TableHeadCell>Powrót na trasę</TableHeadCell>\r\n          <TableHeadCell>Czas poza trasą</TableHeadCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {data.offtrackIntervals.map((interval) => {\r\n          return (\r\n            <AnalysisRow\r\n              interval={interval}\r\n              isSelected={selectedPolyline?.id === interval.id}\r\n            />\r\n          );\r\n        })}\r\n\r\n        {!data.offtrackIntervals.length && (\r\n          <TableRow>\r\n            <TableDataCell>-</TableDataCell>\r\n            <TableDataCell>-</TableDataCell>\r\n            <TableDataCell>-</TableDataCell>\r\n            <TableDataCell>-</TableDataCell>\r\n          </TableRow>\r\n        )}\r\n\r\n        <TableRow sx={{ fontWeight: \"bold\" }}>\r\n          <TableDataCell colSpan={3} sx={{ textAlign: \"left\" }}>\r\n            Łącznie\r\n          </TableDataCell>\r\n          <TableDataCell>{data.offtrackIntervalsSum}</TableDataCell>\r\n        </TableRow>\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getRoutesAnalysis, getRoutes } from \"../../state/routes/routesReducer\";\r\nimport { Text } from \"rebass\";\r\nimport { RouteSummary } from \"./RouteSummary\";\r\nimport { RouteLayersContext } from \"../../state/store\";\r\n\r\nexport const SummaryStep: React.FC = () => {\r\n  const routes = useSelector(getRoutes);\r\n  const analysis = useSelector(getRoutesAnalysis);\r\n  const { layers } = useContext(RouteLayersContext);\r\n  const amountOfRoutes = Object.keys(routes).length;\r\n\r\n  return (\r\n    <>\r\n      {amountOfRoutes === 0 && <Text>Nie załadowano żadnych tras.</Text>}\r\n\r\n      {Object.entries(routes).map(([_key, route]) => (\r\n        <RouteSummary\r\n          key={`route-${route.id}`}\r\n          route={route}\r\n          analysis={analysis[route.id]}\r\n          gpx={layers[route.id]?.gpx}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import ExcelJS from \"exceljs\";\r\nimport { Routes, RoutesAnalysis, RoutesLayers } from \"../types/routes\";\r\nimport { gatherAnalysisData } from \"./gatherAnalysisData\";\r\n\r\nexport const exportData = async (\r\n  routes: Routes,\r\n  layers: RoutesLayers,\r\n  analyses: RoutesAnalysis\r\n) => {\r\n  console.info(analyses);\r\n\r\n  if (!routes || !analyses) {\r\n    return;\r\n  }\r\n\r\n  const workbook = new ExcelJS.Workbook();\r\n  const sheet = workbook.addWorksheet(\"My Sheet\");\r\n\r\n  const nameRow = sheet.getRow(1);\r\n\r\n  Object.values(routes).forEach((route, index) => {\r\n    const analysis = analyses[route.id];\r\n    const gpx = layers[route.id].gpx;\r\n\r\n    const data = gatherAnalysisData(gpx, analysis);\r\n    const firstColumn = 5 * index + 1;\r\n\r\n    nameRow.getCell(firstColumn).value = route.name;\r\n\r\n    sheet.getRow(2).getCell(firstColumn).value = \"Początek\";\r\n    sheet.getRow(3).getCell(firstColumn).value = data.startTime;\r\n    sheet.getRow(4).getCell(firstColumn).value = \"Koniec\";\r\n    sheet.getRow(5).getCell(firstColumn).value = data.endTime;\r\n    sheet.getRow(6).getCell(firstColumn).value = \"Długość\";\r\n    sheet.getRow(7).getCell(firstColumn).value = data.routeLength;\r\n    sheet.getRow(8).getCell(firstColumn).value = \"Pokonany dystans\";\r\n    sheet.getRow(9).getCell(firstColumn).value = data.distance;\r\n    sheet.getRow(10).getCell(firstColumn).value = \"Średnia prędkość w ruchu\";\r\n    sheet.getRow(11).getCell(firstColumn).value = data.movingSpeed;\r\n    sheet.getRow(12).getCell(firstColumn).value =\r\n      \"Średnia prędkość dla całego przebiegu\";\r\n    sheet.getRow(13).getCell(firstColumn).value = data.totalSpeed;\r\n    sheet.getRow(14).getCell(firstColumn).value =\r\n      \"Minimalna wysokość nad poziomem morza\";\r\n    sheet.getRow(15).getCell(firstColumn).value = data.elevationMin;\r\n    sheet.getRow(16).getCell(firstColumn).value =\r\n      \"Maksymalna wysokość nad poziomem morza\";\r\n    sheet.getRow(17).getCell(firstColumn).value = data.elevationMax;\r\n\r\n    sheet.getRow(19).getCell(firstColumn).value = \"Precyzja lotu\";\r\n    sheet.getRow(20).getCell(firstColumn).value = \"LP.\";\r\n    sheet.getRow(20).getCell(firstColumn + 1).value = \"Opuszczenie trasy\";\r\n    sheet.getRow(20).getCell(firstColumn + 2).value = \"Powrót na trasę\";\r\n    sheet.getRow(20).getCell(firstColumn + 3).value = \"Czas poza trasą\";\r\n\r\n    if (data.offtrackIntervals.length) {\r\n      data.offtrackIntervals.forEach((interval, intervalIndex) => {\r\n        sheet.getRow(21 + intervalIndex).getCell(firstColumn).value =\r\n          interval.index;\r\n        sheet.getRow(21 + intervalIndex).getCell(firstColumn + 1).value =\r\n          interval.start;\r\n        sheet.getRow(21 + intervalIndex).getCell(firstColumn + 2).value =\r\n          interval.end;\r\n        sheet.getRow(21 + intervalIndex).getCell(firstColumn + 3).value =\r\n          interval.duration;\r\n      });\r\n\r\n      sheet\r\n        .getRow(21 + data.offtrackIntervals.length)\r\n        .getCell(firstColumn).value = \"Łącznie\";\r\n      sheet\r\n        .getRow(21 + data.offtrackIntervals.length)\r\n        .getCell(firstColumn + 3).value = data.offtrackIntervalsSum;\r\n    }\r\n  });\r\n\r\n  const buffer = await workbook.xlsx.writeBuffer();\r\n  download(buffer);\r\n};\r\n\r\nconst download = (byte: ExcelJS.Buffer) => {\r\n  var blob = new Blob([byte], { type: \"application/xlsx\" });\r\n  var link = document.createElement(\"a\");\r\n  link.href = window.URL.createObjectURL(blob);\r\n  var fileName = \"results.xlsx\";\r\n  link.download = fileName;\r\n  link.click();\r\n};\r\n","import React, { ReactNode, useContext } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport cx from \"classnames\";\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport { RouteStep } from \"../RouteStep/RouteStep\";\r\n\r\nimport \"./sidebar.css\";\r\nimport { Box, Flex, Heading, Text } from \"rebass\";\r\nimport { Button, ExternalLinkButton, LinkButton } from \"../Button\";\r\nimport { SummaryStep } from \"../SummaryStep/SummaryStep\";\r\n\r\nimport { getRoutes, getRoutesAnalysis } from \"../../state/routes/routesReducer\";\r\nimport { exportData } from \"../../utils/exportData\";\r\nimport { space } from \"../../styles/theme\";\r\nimport { RouteLayersContext } from \"../../state/store\";\r\n\r\ntype Props = {\r\n  sidebarCollapsed: boolean;\r\n  setSidebarCollapsed: (collapsed: boolean) => void;\r\n};\r\n\r\nexport const SidebarContainer = ({\r\n  children,\r\n  sidebarCollapsed,\r\n}: {\r\n  children: ReactNode;\r\n  sidebarCollapsed: boolean;\r\n}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: \"absolute\",\r\n        zIndex: 500,\r\n        height: \"100%\",\r\n      }}\r\n      className={cx(\"sidebar\", { collapsed: sidebarCollapsed })}\r\n    >\r\n      <Flex\r\n        variant=\"sidebar\"\r\n        flexDirection=\"column\"\r\n        bg=\"background\"\r\n        sx={{\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        {children}\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const SidebarContent = ({\r\n  setSidebarCollapsed,\r\n}: {\r\n  setSidebarCollapsed: (collapsed: boolean) => void;\r\n}) => {\r\n  const analysis = useSelector(getRoutesAnalysis);\r\n  const routes = useSelector(getRoutes);\r\n  const { layers } = useContext(RouteLayersContext);\r\n\r\n  return (\r\n    <>\r\n      <Flex variant=\"header\">\r\n        <Flex sx={{ alignItems: \"center\" }}>\r\n          <Heading variant=\"heading.h2\" mb=\"0\">\r\n            <Text as=\"span\" color=\"primary\">\r\n              AERO\r\n            </Text>\r\n            <Text as=\"span\" color=\"muted\" fontWeight=\"normal\">\r\n              CONTEST\r\n            </Text>\r\n          </Heading>\r\n\r\n          <ExternalLinkButton\r\n            href=\"https://github.com/zefj/aerocontest\"\r\n            variant=\"github\"\r\n            icon=\"fab fa-github\"\r\n          />\r\n        </Flex>\r\n\r\n        <Button\r\n          variant=\"chevron\"\r\n          icon=\"fas fa-chevron-left\"\r\n          onClick={() => setSidebarCollapsed(true)}\r\n        />\r\n      </Flex>\r\n\r\n      <Box variant=\"content\">\r\n        <Switch>\r\n          <Route path=\"/(route|)\">\r\n            <RouteStep />\r\n          </Route>\r\n\r\n          <Route path=\"/summary\">\r\n            <SummaryStep />\r\n          </Route>\r\n        </Switch>\r\n      </Box>\r\n\r\n      <Flex as=\"nav\" variant=\"nav\">\r\n        <Switch>\r\n          <Route path=\"/(route|)\">\r\n            <LinkButton to=\"/summary\" variant=\"primary\">\r\n              Podsumowanie\r\n            </LinkButton>\r\n          </Route>\r\n\r\n          <Route path=\"/summary\">\r\n            <LinkButton to=\"/route\" variant=\"secondaryOutline\">\r\n              Wróć\r\n            </LinkButton>\r\n\r\n            <Button\r\n              onClick={() => exportData(routes, layers, analysis)}\r\n              sx={{\r\n                marginLeft: space[\"8\"],\r\n              }}\r\n              variant=\"primaryOutline\"\r\n            >\r\n              Eksportuj dane\r\n            </Button>\r\n          </Route>\r\n        </Switch>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const CollapsedSidebarContent = ({\r\n  setSidebarCollapsed,\r\n}: {\r\n  setSidebarCollapsed: (collapsed: boolean) => void;\r\n}) => {\r\n  return (\r\n    <Flex variant=\"header\" sx={{ height: \"77px\", justifyContent: \"center\" }}>\r\n      <Button\r\n        variant=\"chevron\"\r\n        icon=\"fas fa-chevron-right\"\r\n        onClick={() => setSidebarCollapsed(false)}\r\n      />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport const Sidebar = ({ sidebarCollapsed, setSidebarCollapsed }: Props) => {\r\n  return (\r\n    <SidebarContainer sidebarCollapsed={sidebarCollapsed}>\r\n      {sidebarCollapsed && (\r\n        <CollapsedSidebarContent setSidebarCollapsed={setSidebarCollapsed} />\r\n      )}\r\n      {!sidebarCollapsed && (\r\n        <SidebarContent setSidebarCollapsed={setSidebarCollapsed} />\r\n      )}\r\n    </SidebarContainer>\r\n  );\r\n};\r\n","import React, { ReactNode } from \"react\";\r\nimport { Box, Flex } from \"rebass\";\r\n\r\nexport const Alert = ({\r\n  icon,\r\n  children,\r\n}: {\r\n  icon: string;\r\n  children: ReactNode;\r\n}) => {\r\n  return (\r\n    <Flex variant=\"alert\">\r\n      <Flex variant=\"alert.iconContainer\">\r\n        <Box variant=\"alert.icon\" as=\"i\" className={icon} />\r\n      </Flex>\r\n      <Flex sx={{ flex: 1 }}>\r\n        <Box as=\"span\">{children}</Box>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  getSelectedPolyline,\r\n  findSelectedPolyline,\r\n} from \"../../state/routes/routesReducer\";\r\nimport {\r\n  deselectPolyline,\r\n  overrideAnalysis,\r\n} from \"../../state/routes/routesActions\";\r\nimport { Box, Flex, Heading } from \"rebass\";\r\nimport { space } from \"../../styles/theme\";\r\nimport { Button } from \"../Button\";\r\nimport { Alert } from \"../Alert\";\r\nimport { RouteFragment } from \"../../types/routes\";\r\n\r\nexport const calculateOfftrackInterval = (fragment: RouteFragment) => {\r\n  return [fragment.latLngs[0], fragment.latLngs[fragment.latLngs.length - 1]];\r\n};\r\n\r\nexport const FragmentEditor = ({\r\n  sidebarCollapsed,\r\n}: {\r\n  sidebarCollapsed: boolean;\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const selectedPolyline = useSelector(getSelectedPolyline);\r\n  const selectedPolylineData = useSelector(findSelectedPolyline);\r\n\r\n  if (!selectedPolyline || !selectedPolylineData) {\r\n    return null;\r\n  }\r\n\r\n  const interval = calculateOfftrackInterval(selectedPolylineData);\r\n  const start = moment(interval[0].meta.time);\r\n  const end = moment(interval[1].meta.time);\r\n\r\n  const showOverrideOfftrackButton =\r\n    selectedPolylineData.type === \"ontrack\" ||\r\n    selectedPolylineData.type === \"unknown\";\r\n  const showOverrideOntrackButton =\r\n    selectedPolylineData.type === \"offtrack\" ||\r\n    selectedPolylineData.type === \"unknown\";\r\n  const showOverrideUnknownButton =\r\n    selectedPolylineData.type === \"offtrack\" ||\r\n    selectedPolylineData.type === \"ontrack\";\r\n\r\n  return (\r\n    <Box\r\n      variant=\"popup\"\r\n      className=\"fragmentEditor\"\r\n      sx={{\r\n        position: \"absolute\",\r\n        zIndex: 500,\r\n        width: \"100%\",\r\n        maxWidth: \"300px\",\r\n        left: sidebarCollapsed ? \"110px\" : \"500px\",\r\n        top: \"0\",\r\n        transition: \"left 100ms ease-in-out\",\r\n      }}\r\n    >\r\n      <Box variant=\"content\">\r\n        <Flex\r\n          sx={{\r\n            justifyContent: \"space-between\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <Flex\r\n            sx={{\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Heading variant=\"heading.h4\">Edycja fragmentu</Heading>\r\n            <Button\r\n              onClick={() => dispatch(deselectPolyline())}\r\n              variant=\"icon\"\r\n              icon=\"fa-fw fas fa-times\"\r\n              sx={{\r\n                marginBottom: space[\"12\"],\r\n              }}\r\n            />\r\n          </Flex>\r\n          <Box variant=\"container\">\r\n            {start.format(\"HH:mm:ss\")} - {end.format(\"HH:mm:ss\")}\r\n          </Box>\r\n          {selectedPolylineData.type === \"unknown\" && (\r\n            <Alert icon=\"fa-fw fas fa-exclamation\">\r\n              Gdy różnica pomiędzy kolejnymi odczytami pozycji wynosi więcej niż\r\n              10 sekund, fragment jest automatycznie zaliczany jako{\" \"}\r\n              <b>Brak GPS</b>.\r\n            </Alert>\r\n          )}\r\n          <Box variant=\"label\">Zalicz jako:</Box>\r\n          <Flex>\r\n            {showOverrideOntrackButton && (\r\n              <Button\r\n                variant=\"greenOutline\"\r\n                onClick={() =>\r\n                  dispatch(\r\n                    overrideAnalysis(\r\n                      selectedPolyline.id,\r\n                      selectedPolyline.analysis_id,\r\n                      \"ontrack\"\r\n                    )\r\n                  )\r\n                }\r\n                sx={{\r\n                  width: \"100%\",\r\n                  marginRight: space[\"4\"],\r\n                }}\r\n              >\r\n                W trasie\r\n              </Button>\r\n            )}\r\n            {showOverrideOfftrackButton && (\r\n              <Button\r\n                variant=\"destructiveOutline\"\r\n                onClick={() =>\r\n                  dispatch(\r\n                    overrideAnalysis(\r\n                      selectedPolyline.id,\r\n                      selectedPolyline.analysis_id,\r\n                      \"offtrack\"\r\n                    )\r\n                  )\r\n                }\r\n                sx={{\r\n                  width: \"100%\",\r\n                  marginRight: space[\"4\"],\r\n                }}\r\n              >\r\n                Poza trasą\r\n              </Button>\r\n            )}\r\n            {showOverrideUnknownButton && (\r\n              <Button\r\n                variant=\"grayOutline\"\r\n                onClick={() =>\r\n                  dispatch(\r\n                    overrideAnalysis(\r\n                      selectedPolyline.id,\r\n                      selectedPolyline.analysis_id,\r\n                      \"unknown\"\r\n                    )\r\n                  )\r\n                }\r\n                sx={{\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                Brak GPS\r\n              </Button>\r\n            )}\r\n          </Flex>\r\n        </Flex>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import React, { ReactNode, useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport L from \"leaflet\";\r\nimport { RouteLayers } from \"../types/routes\";\r\nimport { getRoutes } from \"../state/routes/routesReducer\";\r\nimport { RouteLayersContextType } from \"../types/context\";\r\nimport { RouteLayersContext } from \"../state/store\";\r\n\r\nconst createLayers = (): RouteLayers => {\r\n  const layers = new L.FeatureGroup();\r\n  const markers = new L.LayerGroup();\r\n  const offtrackFragmentsLayer = new L.LayerGroup();\r\n  const offtrackMarkersLayer = new L.FeatureGroup();\r\n  const ontrackFragmentsLayer = new L.LayerGroup();\r\n  const ontrackMarkersLayer = new L.FeatureGroup();\r\n\r\n  markers.addTo(layers);\r\n  offtrackFragmentsLayer.addTo(layers);\r\n  offtrackMarkersLayer.addTo(layers);\r\n  ontrackFragmentsLayer.addTo(layers);\r\n  ontrackMarkersLayer.addTo(layers);\r\n\r\n  return {\r\n    markers,\r\n    layers,\r\n    offtrackFragmentsLayer,\r\n    offtrackMarkersLayer,\r\n    ontrackFragmentsLayer,\r\n    ontrackMarkersLayer,\r\n    gpx: null,\r\n  };\r\n};\r\n\r\nconst emptyTrackLayer = new L.FeatureGroup();\r\n\r\nexport const RouteLayersContextProvider = ({\r\n  children,\r\n}: {\r\n  children: ReactNode;\r\n}) => {\r\n  const [{ layers, trackLayer }, setContext] = useState<RouteLayersContextType>(\r\n    {\r\n      layers: {},\r\n      trackLayer: emptyTrackLayer,\r\n      setGpx: () => {},\r\n    }\r\n  );\r\n\r\n  const setGpx = useCallback(\r\n    (id, gpx) => {\r\n      const newLayers = {\r\n        ...layers,\r\n      };\r\n\r\n      if (!layers[id]) {\r\n        return;\r\n      }\r\n\r\n      newLayers[id].gpx = gpx;\r\n\r\n      setContext({ layers: newLayers, trackLayer, setGpx });\r\n    },\r\n    [layers, trackLayer]\r\n  );\r\n\r\n  const routes = useSelector(getRoutes);\r\n\r\n  useEffect(() => {\r\n    let shouldUpdate = false;\r\n    const newLayers = {\r\n      ...layers,\r\n    };\r\n\r\n    Object.entries(routes).forEach(([_key, route]) => {\r\n      if (layers[route.id]) {\r\n        return;\r\n      }\r\n\r\n      shouldUpdate = true;\r\n      newLayers[route.id] = createLayers();\r\n    });\r\n\r\n    if (!shouldUpdate) {\r\n      return;\r\n    }\r\n\r\n    setContext({ layers: newLayers, trackLayer, setGpx });\r\n  }, [layers, routes, setGpx, trackLayer]);\r\n\r\n  return (\r\n    <RouteLayersContext.Provider value={{ layers, trackLayer, setGpx }}>\r\n      {children}\r\n    </RouteLayersContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport L from \"leaflet\";\r\n\r\n// For some reason, if any scss file is included before plain css files, the style tags rendered\r\n// by style loader are out of order, causing leaflet.css to be included after leaflet.draw.css.\r\n// I have no idea what's going on, will fix after ejecting, maybe.\r\n// TODO: try to import css from within scss to see if the order is preserved.\r\nimport \"leaflet/dist/leaflet.css\";\r\n// This should be part of the TrackDrawer component, but webpack/cra config is refusing to cooperate.\r\nimport \"leaflet-draw/dist/leaflet.draw.css\";\r\n\r\nimport { ThemeProvider } from \"emotion-theming\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport { LeafletMap } from \"./components/LeafletMap\";\r\nimport { Sidebar } from \"./components/Sidebar/Sidebar\";\r\nimport { FragmentEditor } from \"./components/FragmentEditor/FragmentEditor\";\r\nimport { RouteLayersContextProvider } from \"./components/RouteLayersContextProvider\";\r\n\r\n// stupid hack so that leaflet's images work after going through webpack\r\n// https://github.com/PaulLeCam/react-leaflet/issues/255#issuecomment-388492108\r\nimport marker from \"leaflet/dist/images/marker-icon.png\";\r\nimport marker2x from \"leaflet/dist/images/marker-icon-2x.png\";\r\nimport markerShadow from \"leaflet/dist/images/marker-shadow.png\";\r\n\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\nimport { theme } from \"./styles/theme\";\r\nimport { Box } from \"rebass\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"./state/store\";\r\n\r\n// @ts-ignore\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: marker2x,\r\n  iconUrl: marker,\r\n  shadowUrl: markerShadow,\r\n});\r\n\r\nconst store = configureStore();\r\n\r\nconst App: React.FC = () => {\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <Box\r\n          className=\"App\"\r\n          sx={{\r\n            fontFamily: \"body\",\r\n            fontSize: \"body\",\r\n            color: \"text\",\r\n          }}\r\n        >\r\n          {/* TODO: do it like this: https://turbo87.github.io/sidebar-v2/examples/ */}\r\n          <HashRouter>\r\n            <RouteLayersContextProvider>\r\n              <Sidebar\r\n                sidebarCollapsed={sidebarCollapsed}\r\n                setSidebarCollapsed={setSidebarCollapsed}\r\n              />\r\n              <FragmentEditor sidebarCollapsed={sidebarCollapsed} />\r\n              <LeafletMap />\r\n            </RouteLayersContextProvider>\r\n          </HashRouter>\r\n        </Box>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}