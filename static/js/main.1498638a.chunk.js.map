{"version":3,"sources":["test-data/9_maj_2020_19_06_55_1589052909021.gpx","test-data/doc.kml","components/TrackDrawer/TrackDrawer.tsx","components/leafletElementStyles.ts","state/routes/routesActions.ts","state/routes/routesReducer.ts","state/track/trackReducer.ts","state/store.ts","components/GpxLoader.tsx","utils/getPolylineLayer.ts","components/RouteAnalyser/RouteAnalyser.tsx","components/RouteAnalyser/AnalysisDrawer.tsx","components/KmlLoader.tsx","components/LeafletMap.tsx","components/RouteStep/RouteUploader.tsx","styles/theme.ts","components/Button.tsx","components/RouteStep/RouteRecord.tsx","components/RouteStep/RouteStep.tsx","components/WelcomeStep/WelcomeStep.tsx","components/TrackDrawer/TrackUploader.tsx","state/track/trackActions.ts","components/TrackStep/TrackStep.tsx","components/Table.tsx","utils/gatherAnalysisData.ts","components/SummaryStep/RouteSummary.tsx","components/SummaryStep/SummaryStep.tsx","utils/exportData.ts","components/Sidebar/Sidebar.tsx","components/FragmentEditor/FragmentEditor.tsx","components/RouteLayersContextProvider.tsx","App.tsx","index.tsx"],"names":["module","exports","drawControl","ROUTE_LINE_STYLE_BASE","weight","color","lineCap","ROUTE_LINE_STYLE_ONTRACK","ROUTE_LINE_STYLE_OFFTRACK","ROUTE_LINE_HOVER","overrideAnalysis","id","analysisId","type","payload","createRoute","name","content","uuidv4","initialState","entries","analysis","selected","getRoutes","state","routes","getRoutesAnalysis","getSelectedPolyline","findSelectedPolyline","createSelector","analyses","Object","values","selectedPolyline","find","polyline","getTrack","track","rootReducer","combineReducers","action","route","analysis_id","map","fragment","RouteLayersContext","React","createContext","layers","trackLayer","L","FeatureGroup","setGpx","options","require","gpx_options","joinTrackSegments","marker_options","startIconUrl","pinIconStart","endIconUrl","pinIconEnd","shadowUrl","pinShadow","polyline_options","GpxLoader","useLeaflet","useSelector","useContext","dispatch","useDispatch","useEffect","process","forEach","routeLayers","gpx","GPX","addTo","layer","remove","bounds","reduce","carry","extend","getBounds","composeBounds","fitBounds","TrackDrawer","drawingMode","position","draw","marker","circlemarker","edit","featureGroup","Control","Draw","addLayer","addControl","removeControl","on","Event","CREATED","e","getPolylineLayer","getLayers","Polyline","analysePoint","routePoint","polygon","i","length","inTrack","Path","pointFeature","point","lng","lat","geoJsonPolygon","Circle","circle","toGeoJSON","geometry","coordinates","getRadius","steps","units","Polygon","getLatLngs","booleanPointInPolygon","performRouteAnalysis","routePolyline","routeLatLngs","fragments","p","pointOnTrack","lastFragment","latLngs","push","filter","RouteAnalyser","runAnalysis","useCallback","console","log","polylineLayer","Error","routeAnalysis","analyseRoutes","routesAnalysed","callback","eventHandler","EDITED","DELETED","off","registerLeafletEventListeners","drawFragments","selectPolyline","offtrackMarkersLayer","clearLayers","offtrackFragmentsLayer","ontrackMarkersLayer","ontrackFragmentsLayer","style","setStyle","AnalysisDrawer","trackEmpty","keys","selectPolylineFn","selectPolylineAction","key","removeLayer","hasLayer","KmlLoader","kmlContent","DOMParser","parseFromString","KML","fireEvent","LeafletMap","useState","zoom","className","Map","center","zoomControl","preferCanvas","TileLayer","attribution","url","ZoomControl","ScaleControl","imperial","path","match","Boolean","uppy","Uppy","autoProceed","restrictions","allowedFileTypes","readFile","file","Promise","resolve","reject","fileReader","FileReader","onload","result","onerror","readAsText","RouteUploader","a","data","locale","strings","dropHereOr","browse","palette","fontSize","body","12","14","16","18","20","24","30","36","48","space","4","8","32","64","96","128","preset","colors","text","textLight","background","primary","secondary","muted","gray","highlight","header","fonts","heading","monospace","fontSizes","fontWeights","bold","lineHeights","radii","default","shadows","card","input","marginRight","padding","border","boxShadow","fontFamily","lineHeight","fontWeight","letterSpacing","h1","marginBottom","h2","h3","h4","display","caps","textTransform","iconButtonText","marginLeft","routeName","whiteSpace","overflow","textOverflow","editable","instruction","variants","backgroundColor","justifyContent","alignItems","sidebar","borderRadius","popup","variant","marginTop","px","py","overflowX","container","link","nav","routeSummary","pb","table","width","textAlign","borderSpacing","th","td","borderBottom","borderColor","buttons","cursor","bg","outline","primaryOutline","secondaryOutline","greenOutline","destructive","destructiveOutline","icon","github","theme","Button","children","restProps","LinkButton","props","as","Link","ExternalLinkButton","href","RebassLink","RouteNameInput","defaultValue","onAccept","ref","useRef","current","focus","onBlur","value","RouteName","onChange","isEditing","setIsEditing","sx","onClick","RouteRecord","mb","minHeight","changeRouteName","flexWrap","flexShrink","height","RouteStep","amountOfRoutes","WelcomeStep","TrackUploader","TrackStep","Table","forwardRef","TableHead","TableBody","TableRow","TableHeadCell","TableDataCell","getFormattedDurationLength","start","end","diff","moment","utc","format","gatherAnalysisData","distance","get_distance","get_start_time","toString","get_end_time","get_moving_speed","get_total_speed","get_elevation_min","get_elevation_max","routeLength","offtrackIntervals","calculateOfftrackIntervals","offtrackIntervalsSum","secondsSum","meta","time","sumOfftrackIntervals","startTime","endTime","toFixed","movingSpeed","totalSpeed","elevationMin","elevationMax","interval","index","duration","RouteSummary","RouteData","RouteAnalysisTable","colSpan","SummaryStep","exportData","info","workbook","ExcelJS","Workbook","sheet","addWorksheet","nameRow","getRow","firstColumn","getCell","intervalIndex","xlsx","writeBuffer","buffer","download","byte","blob","Blob","document","createElement","window","URL","createObjectURL","click","Sidebar","zIndex","flexDirection","to","FragmentEditor","selectedPolylineData","maxWidth","left","top","undefined","alignSelf","emptyTrackLayer","RouteLayersContextProvider","setContext","newLayers","shouldUpdate","markers","LayerGroup","createLayers","Provider","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","marker2x","iconUrl","markerShadow","store","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureStore","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1498638a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/9_maj_2020_19_06_55_1589052909021.c1ba7b7b.gpx\";","module.exports = __webpack_public_path__ + \"static/media/doc.d3194562.kml\";","import { useEffect, useContext } from \"react\";\nimport { useLeaflet } from \"react-leaflet\";\n\nimport L, { Control, DrawEvents } from \"leaflet\";\n\nimport \"leaflet-draw\";\nimport { RouteLayersContext } from \"../../state/store\";\n\n// const track = new L.FeatureGroup();\n//\n// const options: Control.DrawConstructorOptions = {\n//     position: 'topleft',\n//     draw: {\n//         polyline: false,\n//         marker: false,\n//         circlemarker: false,\n//     },\n//     edit: {\n//         featureGroup: track,\n//     }\n// };\n//\n// const drawControl = new L.Control.Draw(options);\n\nlet drawControl: L.Control.Draw | null;\n\ntype TrackDrawerProps = {\n  drawingMode?: boolean;\n};\n\nexport const TrackDrawer = ({ drawingMode = false }: TrackDrawerProps) => {\n  const { map } = useLeaflet();\n  const { trackLayer } = useContext(RouteLayersContext);\n\n  useEffect(() => {\n    const options: Control.DrawConstructorOptions = {\n      position: \"topleft\",\n      draw: {\n        polyline: false,\n        marker: false,\n        circlemarker: false,\n      },\n      edit: {\n        featureGroup: trackLayer,\n      },\n    };\n\n    drawControl = new L.Control.Draw(options);\n  }, [map, trackLayer]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    map.addLayer(trackLayer);\n  }, [map, trackLayer]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!drawControl) {\n      return;\n    }\n\n    if (drawingMode) {\n      map.addControl(drawControl);\n    } else {\n      map.removeControl(drawControl);\n    }\n  }, [map, drawingMode]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    map.on(L.Draw.Event.CREATED, (e: any) => {\n      // The event is actually DrawEvents.Created, but there is no matching definition for the `on` method,\n      // which makes typescript complain about no matching overload. TODO I guess?\n      const event: DrawEvents.Created = e;\n      const layer = event.layer;\n\n      trackLayer.addLayer(layer);\n    });\n  }, [map, trackLayer]);\n\n  return null;\n};\n","import { PathOptions } from \"leaflet\";\n\nexport const ROUTE_LINE_STYLE_BASE: PathOptions = {\n  weight: 3,\n  color: \"#2c83cb\",\n  lineCap: \"butt\",\n};\n\nexport const ROUTE_LINE_STYLE_ONTRACK: PathOptions = {\n  color: \"#06CB13\",\n};\n\nexport const ROUTE_LINE_STYLE_OFFTRACK: PathOptions = {\n  color: \"#cb123d\",\n};\n\nexport const ROUTE_LINE_HOVER: PathOptions = {\n  weight: 10,\n};\n\nexport const OFFTRACK_POINT_TOOLTIP_OPTIONS: L.TooltipOptions = {\n  permanent: true,\n  direction: \"auto\",\n};\n","import { RoutesAnalysis, RouteFragments } from \"../../types/routes\";\n\nexport interface AddRouteAction {\n  type: \"ADD_ROUTE\";\n  payload: {\n    name: string;\n    content: string;\n  };\n}\n\nexport interface RemoveRouteAction {\n  type: \"REMOVE_ROUTE\";\n  payload: { id: string };\n}\n\nexport interface RouteParsedAction {\n  type: \"ROUTE_PARSED\";\n  payload: {\n    id: string;\n  };\n}\n\nexport interface RouteAnalysedAction {\n  type: \"ROUTE_ANALYSED\";\n  payload: {\n    id: string;\n    analysis: RouteFragments;\n  };\n}\n\nexport interface RoutesAnalysedAction {\n  type: \"ROUTES_ANALYSED\";\n  payload: {\n    analyses: RoutesAnalysis;\n  };\n}\n\nexport interface ChangeRouteNameAction {\n  type: \"CHANGE_ROUTE_NAME\";\n  payload: {\n    id: string;\n    name: string;\n  };\n}\n\nexport interface SelectPolylineAction {\n  type: \"SELECT_POLYLINE\";\n  payload: {\n    id: string;\n    analysisId: string;\n  };\n}\n\nexport interface OverrideAnalysis {\n  type: \"OVERRIDE_ANALYSIS\";\n  payload: {\n    id: string;\n    analysisId: string;\n    type: \"ontrack\" | \"offtrack\";\n  };\n}\n\nexport const addRoute = (name: string, content: string): AddRouteAction => ({\n  type: \"ADD_ROUTE\",\n  payload: { name, content },\n});\n\nexport const removeRoute = (id: string): RemoveRouteAction => ({\n  type: \"REMOVE_ROUTE\",\n  payload: { id },\n});\n\nexport const routeParsed = (id: string): RouteParsedAction => ({\n  type: \"ROUTE_PARSED\",\n  payload: { id },\n});\n\nexport const routeAnalysed = (\n  id: string,\n  analysis: RouteFragments\n): RouteAnalysedAction => ({\n  type: \"ROUTE_ANALYSED\",\n  payload: { id, analysis },\n});\n\nexport const routesAnalysed = (\n  analyses: RoutesAnalysis\n): RoutesAnalysedAction => ({\n  type: \"ROUTES_ANALYSED\",\n  payload: { analyses },\n});\n\nexport const changeRouteName = (\n  id: string,\n  name: string\n): ChangeRouteNameAction => ({\n  type: \"CHANGE_ROUTE_NAME\",\n  payload: { id, name },\n});\n\nexport const selectPolyline = (\n  id: string,\n  analysisId: string\n): SelectPolylineAction => ({\n  type: \"SELECT_POLYLINE\",\n  payload: { id, analysisId },\n});\n\nexport const deselectPolyline = () => ({\n  type: \"SELECT_POLYLINE\",\n  payload: { id: undefined, ref: undefined },\n});\n\nexport const overrideAnalysis = (\n  id: string,\n  analysisId: string,\n  type: \"ontrack\" | \"offtrack\"\n) => ({\n  type: \"OVERRIDE_ANALYSIS\",\n  payload: { id, analysisId, type },\n});\n","import { v4 as uuidv4 } from \"uuid\";\nimport { createSelector } from \"reselect\";\n\nimport {\n  AddRouteAction,\n  ChangeRouteNameAction,\n  OverrideAnalysis,\n  RemoveRouteAction,\n  RouteAnalysedAction,\n  RouteParsedAction,\n  RoutesAnalysedAction,\n  SelectPolylineAction,\n} from \"./routesActions\";\nimport {\n  Route,\n  RouteFragments,\n  Routes,\n  RoutesAnalysis,\n  Selected,\n} from \"../../types/routes\";\nimport { ApplicationState } from \"../store\";\n\nconst createRoute = (name: string, content: string): Route => {\n  return {\n    id: uuidv4(),\n    name,\n    content,\n  };\n};\n\ntype RoutesReducerActions =\n  | AddRouteAction\n  | RemoveRouteAction\n  | RouteParsedAction\n  | RouteAnalysedAction\n  | RoutesAnalysedAction\n  | ChangeRouteNameAction\n  | SelectPolylineAction\n  | OverrideAnalysis;\n\nconst initialState: RoutesState = {\n  entries: {},\n  analysis: {},\n  selected: null,\n};\n\nexport interface RoutesState {\n  entries: Routes;\n  analysis: RoutesAnalysis;\n  selected: null | Selected;\n}\n\nexport const routesReducer = (\n  state = initialState,\n  action: RoutesReducerActions\n): RoutesState => {\n  switch (action.type) {\n    case \"ADD_ROUTE\":\n      // TODO: handle duplicates?\n      const route = createRoute(action.payload.name, action.payload.content);\n\n      return {\n        ...state,\n        entries: {\n          ...state.entries,\n          [route.id]: route,\n        },\n      };\n    case \"REMOVE_ROUTE\":\n      // Drop key from entries and analysis\n      const { [action.payload.id]: _drop1, ...entries } = state.entries;\n      const { [action.payload.id]: _drop2, ...analysis } = state.analysis;\n\n      return {\n        ...state,\n        entries,\n        analysis,\n      };\n    case \"ROUTE_PARSED\":\n      return {\n        ...state,\n        entries: {\n          ...state.entries,\n          [action.payload.id]: {\n            ...state.entries[action.payload.id],\n          },\n        },\n      };\n    // TODO: this is unused apparently\n    case \"ROUTE_ANALYSED\":\n      // @ts-ignore\n      // this is a workaround for redux-dev-tools crashing because of the size of this payload.\n      // TODO: figure out a better way or at least implement a debug flag\n      // action.payload.analysis.toJSON = () => ({ hidden: 'to help redux devtools :)' });\n\n      return {\n        ...state,\n        analysis: {\n          ...state.analysis,\n          [action.payload.id]: action.payload.analysis,\n        },\n      };\n    case \"ROUTES_ANALYSED\":\n      // this is a workaround for redux-dev-tools crashing because of the size of this payload.\n      // TODO: figure out a better way or at least implement a debug flag\n      // Object.entries(action.payload.analyses).forEach(([_, analysis]) => {\n      //     if (!analysis) {\n      //         return;\n      //     }\n\n      //     Object.entries(analysis).forEach(([_, fragment]) => {\n      //         // @ts-ignore\n      //         fragment.latLngs.toJSON = () => ({ hidden: 'to help redux devtools :)' });\n      //     });\n      // });\n\n      return {\n        ...state,\n        analysis: action.payload.analyses,\n        selected: null,\n      };\n    case \"CHANGE_ROUTE_NAME\":\n      return {\n        ...state,\n        entries: {\n          ...state.entries,\n          [action.payload.id]: {\n            ...state.entries[action.payload.id],\n            name: action.payload.name,\n          },\n        },\n      };\n    case \"SELECT_POLYLINE\":\n      if (!action.payload.id) {\n        return {\n          ...state,\n          selected: null,\n        };\n      }\n\n      return {\n        ...state,\n        selected: {\n          id: action.payload.id,\n          analysis_id: action.payload.analysisId,\n        },\n      };\n    case \"OVERRIDE_ANALYSIS\":\n      return {\n        ...state,\n        analysis: {\n          ...state.analysis,\n          [action.payload.analysisId]: state.analysis[\n            action.payload.analysisId\n          ]?.map((fragment) => {\n            if (fragment.id === action.payload.id) {\n              return {\n                ...fragment,\n                type: action.payload.type,\n              };\n            }\n\n            return fragment;\n          }) as RouteFragments,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getRoutes = (state: ApplicationState) => state.routes.entries;\nexport const getRoutesAnalysis = (state: ApplicationState) =>\n  state.routes.analysis;\nexport const getSelectedPolyline = (state: ApplicationState) =>\n  state.routes.selected;\nexport const findSelectedPolyline = createSelector(\n  getRoutesAnalysis,\n  (state) => state.routes.selected,\n  (analyses, selected) => {\n    if (!selected) {\n      return undefined;\n    }\n\n    const values = Object.values(analyses);\n\n    for (const analysis of values) {\n      if (!analysis) {\n        continue;\n      }\n\n      const selectedPolyline = analysis.find(\n        (polyline) => polyline.id === selected.id\n      );\n\n      if (selectedPolyline) {\n        return selectedPolyline;\n      }\n    }\n\n    return undefined;\n  }\n);\n","import { LoadTrackAction } from \"./trackActions\";\nimport { ApplicationState } from \"../store\";\n\nexport interface TrackState {\n  content: string;\n}\n\nconst initialState: TrackState = {\n  content: \"\",\n};\n\ntype TrackReducerActions = LoadTrackAction;\n\nexport const trackReducer = (\n  state = initialState,\n  action: TrackReducerActions\n): TrackState => {\n  switch (action.type) {\n    case \"LOAD_TRACK\":\n      return {\n        ...state,\n        content: action.payload.content,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getTrack = (state: ApplicationState) => state.track;\n","import React from \"react\";\nimport L from \"leaflet\";\nimport { applyMiddleware, createStore, combineReducers } from \"redux\";\nimport { routesReducer, RoutesState } from \"./routes/routesReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { trackReducer, TrackState } from \"./track/trackReducer\";\nimport { RouteLayersContextType } from \"../types/context\";\n\nexport interface ApplicationState {\n  routes: RoutesState;\n  track: TrackState;\n}\n\nconst rootReducer = combineReducers<ApplicationState>({\n  routes: routesReducer,\n  track: trackReducer,\n});\n\nexport const configureStore = () => {\n  const middlewares: never[] = [];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  return createStore(rootReducer, {}, composedEnhancers);\n};\n\nexport const RouteLayersContext = React.createContext<RouteLayersContextType>({\n  layers: {},\n  trackLayer: new L.FeatureGroup(),\n  setGpx: () => {},\n});\n","import React, { useContext, useEffect } from \"react\";\nimport { useLeaflet } from \"react-leaflet\";\n\nimport L, { GPXOptions } from \"leaflet\";\nimport \"leaflet-gpx\";\n\nimport pinIconStart from \"leaflet-gpx/pin-icon-start.png\";\nimport pinIconEnd from \"leaflet-gpx/pin-icon-end.png\";\nimport pinShadow from \"leaflet-gpx/pin-shadow.png\";\nimport { ROUTE_LINE_STYLE_BASE } from \"./leafletElementStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addRoute, routeParsed } from \"../state/routes/routesActions\";\nimport { Route, Routes, RoutesLayers } from \"../types/routes\";\nimport { getRoutes } from \"../state/routes/routesReducer\";\nimport { RouteLayersContext } from \"../state/store\";\n\nconst route1content = require(\"../test-data/9_maj_2020_19_06_55_1589052909021.gpx\");\n\n/**\n * ts-ignore's because the modules released on npm are outdated\n */\nconst options: GPXOptions = {\n  gpx_options: {\n    // @ts-ignore\n    joinTrackSegments: true,\n  },\n  marker_options: {\n    // @ts-ignore\n    startIconUrl: pinIconStart,\n    endIconUrl: pinIconEnd,\n    shadowUrl: pinShadow,\n  },\n  polyline_options: ROUTE_LINE_STYLE_BASE,\n};\n\n// TODO: consider moving to utils if needed elsewhere\nconst composeBounds = (routes: Routes, layers: RoutesLayers) => {\n  const routesArray = Object.values(routes);\n\n  return routesArray.reduce((carry: L.LatLngBounds | null, route: Route) => {\n    const routeLayers = layers[route.id];\n\n    if (!routeLayers || !routeLayers.gpx) {\n      return carry;\n    }\n\n    if (carry) {\n      return carry.extend(routeLayers.gpx.getBounds());\n    }\n\n    return routeLayers.gpx.getBounds();\n  }, null);\n};\n\nexport const GpxLoader: React.FC = () => {\n  const { map } = useLeaflet();\n\n  const routes = useSelector(getRoutes);\n  const { layers, setGpx } = useContext(RouteLayersContext);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      dispatch(\n        addRoute(\"9_maj_2020_19_06_55_1589052909021.gpx\", route1content)\n      );\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!routes) {\n      return;\n    }\n\n    Object.entries(routes).forEach(([_key, route]) => {\n      const routeLayers = layers[route.id];\n\n      if (!routeLayers || routeLayers.gpx) {\n        return;\n      }\n\n      const gpx = new L.GPX(route.content, options);\n      setGpx(route.id, gpx);\n      dispatch(routeParsed(route.id));\n\n      // TODO: only temporarily, move this out of here\n      // const polylineLayer = getPolylineLayer(gpx);\n\n      // if (polylineLayer) {\n      //     polylineLayer.getLatLngs().forEach((latLng: LatLng | LatLng[] | LatLng[][]) => {\n      //         // @ts-ignore\n      //         L.circleMarker(latLng, { weight: 1, renderer: markerCanvasRenderer }).addTo(map);\n      //     });\n      // }\n\n      gpx.addTo(routeLayers.layers);\n      routeLayers.layers.addTo(map);\n    });\n\n    Object.entries(layers).forEach(([id, layer]) => {\n      if (routes[id]) {\n        return;\n      }\n\n      // Remove routes no longer present in state from the map\n      layer.layers.remove();\n    });\n  }, [map, routes, layers, setGpx, dispatch]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    // This is probably only temporary so I don't have to pan the map on each refresh\n    const bounds = composeBounds(routes, layers);\n\n    if (bounds) {\n      map.fitBounds(bounds);\n    }\n  }, [layers, map, routes]);\n\n  return null;\n};\n","import L, { GPX } from \"leaflet\";\n\nexport const getPolylineLayer = (route: GPX): L.Polyline | null => {\n  // Types seem to be incorrect, route.getLayers()[0] is instanceof L.FeatureGroup\n  const layers = (route.getLayers()[0] as L.FeatureGroup).getLayers();\n\n  for (let layer of layers) {\n    if (!(layer instanceof L.Polyline)) {\n      continue;\n    }\n\n    return layer;\n  }\n\n  return null;\n};\n","import React, { useCallback, useContext, useEffect } from \"react\";\nimport { useLeaflet } from \"react-leaflet\";\nimport L, { LayerEvent } from \"leaflet\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport circle from \"@turf/circle\";\nimport { point } from \"@turf/helpers\";\nimport { getPolylineLayer } from \"../../utils/getPolylineLayer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { routesAnalysed } from \"../../state/routes/routesActions\";\nimport {\n  RoutesAnalysis,\n  RoutesLayers,\n  GPXLatLng,\n  RouteFragments,\n  Routes,\n} from \"../../types/routes\";\nimport { getRoutes } from \"../../state/routes/routesReducer\";\nimport { RouteLayersContext } from \"../../state/store\";\n\nconst polygonToGeoJSON = (polygon: L.Layer) => {\n  if (polygon instanceof L.Circle) {\n    return circle(\n      polygon.toGeoJSON().geometry.coordinates,\n      polygon.getRadius(),\n      { steps: 10, units: \"meters\" }\n    );\n  } else if (polygon instanceof L.Polygon) {\n    return polygon.toGeoJSON();\n  } else if (polygon instanceof L.Polyline) {\n    const convertedPolygon = new L.Polygon(polygon.getLatLngs());\n    return convertedPolygon.toGeoJSON();\n  }\n\n  return null;\n};\n\nconst analysePoint = (\n  routePoint: GPXLatLng,\n  track: L.FeatureGroup\n): boolean => {\n  const layers = track.getLayers();\n\n  for (let i = 0; i < layers.length; i++) {\n    const layer = layers[i];\n\n    let inTrack = false;\n\n    if (layer instanceof L.FeatureGroup) {\n      // recurse for FeatureGroups\n      inTrack = analysePoint(routePoint, layer);\n    }\n\n    if (layer instanceof L.Path) {\n      const pointFeature = point([routePoint.lng, routePoint.lat]);\n      const geoJsonPolygon = polygonToGeoJSON(layer);\n\n      if (geoJsonPolygon === null) {\n        continue;\n      }\n\n      inTrack = booleanPointInPolygon(pointFeature, geoJsonPolygon as any);\n    }\n\n    if (!inTrack) {\n      continue;\n    }\n\n    return inTrack;\n  }\n\n  return false;\n};\n\nconst performRouteAnalysis = (\n  routePolyline: L.Polyline,\n  track: L.FeatureGroup\n): RouteFragments => {\n  const routeLatLngs = routePolyline.getLatLngs();\n  const fragments: RouteFragments = [];\n\n  for (let i = 0; i < routeLatLngs.length; i++) {\n    const p = routeLatLngs[i] as GPXLatLng;\n\n    const pointOnTrack = analysePoint(p, track);\n\n    let lastFragment = fragments[fragments.length - 1];\n\n    if (!lastFragment) {\n      lastFragment = {\n        id: uuidv4(),\n        type: pointOnTrack ? \"ontrack\" : \"offtrack\",\n        latLngs: [],\n      };\n\n      fragments.push(lastFragment);\n    }\n\n    if (pointOnTrack) {\n      let fragment = lastFragment;\n\n      if (lastFragment.type === \"offtrack\") {\n        lastFragment.latLngs.push(p);\n        fragment = {\n          id: uuidv4(),\n          type: \"ontrack\",\n          latLngs: [],\n        };\n        fragments.push(fragment);\n      }\n\n      fragment.latLngs.push(p);\n    } else {\n      let fragment = lastFragment;\n\n      if (lastFragment.type === \"ontrack\") {\n        lastFragment.latLngs.push(p);\n        fragment = {\n          id: uuidv4(),\n          type: \"offtrack\",\n          latLngs: [],\n        };\n        fragments.push(fragment);\n      }\n\n      fragment.latLngs.push(p);\n    }\n  }\n\n  return fragments.filter((e) => e.latLngs.length > 0);\n};\n\nconst analyseRoutes = (\n  entries: Routes,\n  layers: RoutesLayers,\n  track: L.FeatureGroup\n): RoutesAnalysis => {\n  console.log(\"Running analysis...\");\n\n  const trackEmpty = track.getLayers().length === 0;\n  let analyses = {};\n\n  if (trackEmpty) {\n    return analyses;\n  }\n\n  // TODO: switch to entries and drop layers argument\n  for (let [, route] of Object.entries(entries)) {\n    const routeLayers = layers[route.id];\n\n    if (!routeLayers?.gpx) {\n      continue;\n    }\n\n    const polylineLayer = getPolylineLayer(routeLayers.gpx);\n\n    if (!polylineLayer) {\n      throw new Error(\"Polyline layer not found in route.\");\n    }\n\n    const routeAnalysis = performRouteAnalysis(polylineLayer, track);\n\n    analyses = {\n      ...analyses,\n      [route.id]: routeAnalysis,\n    };\n  }\n\n  return analyses;\n};\n\nconst registerLeafletEventListeners = (\n  map: L.Map | undefined,\n  callback: () => void\n) => {\n  if (!map) {\n    return;\n  }\n\n  console.log(\"Registering leaflet event listeners...\");\n\n  const eventHandler = (e: LayerEvent) => callback();\n\n  // track.on('layeradd layerremove', (e: LayerEvent) => callback());\n  map.on(L.Draw.Event.CREATED, eventHandler);\n  map.on(L.Draw.Event.EDITED, eventHandler);\n  map.on(L.Draw.Event.DELETED, eventHandler);\n  map.on(\"TRACK_LOADED\", eventHandler);\n\n  return () => {\n    // track.off('layeradd layerremove', eventHandler);\n    map.off(L.Draw.Event.CREATED, eventHandler);\n    map.off(L.Draw.Event.EDITED, eventHandler);\n    map.off(L.Draw.Event.DELETED, eventHandler);\n    map.off(\"TRACK_LOADED\", eventHandler);\n  };\n};\n\n// TODO: would it make sense if this worked on a single route passed via a prop?\n// Upsides: nicer code, probably easier to manage\n// Downsides: more event listeners\nexport const RouteAnalyser: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const { map } = useLeaflet();\n  const { layers, trackLayer } = useContext(RouteLayersContext);\n  const routes = useSelector(getRoutes);\n\n  // TODO: analysis is running multiple times for no reason. Fix this.\n  const runAnalysis = useCallback(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!trackLayer) {\n      return;\n    }\n\n    const analyses = analyseRoutes(routes, layers, trackLayer);\n\n    dispatch(routesAnalysed(analyses));\n  }, [layers]);\n\n  useEffect(\n    () => registerLeafletEventListeners(map, runAnalysis),\n    [runAnalysis]\n  );\n\n  useEffect(() => runAnalysis(), [runAnalysis]);\n\n  return null;\n};\n","import { useCallback, useContext, useEffect } from \"react\";\nimport L from \"leaflet\";\n\nimport { useLeaflet } from \"react-leaflet\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getRoutes,\n  getRoutesAnalysis,\n  getSelectedPolyline,\n} from \"../../state/routes/routesReducer\";\nimport { RouteLayers, RouteFragments, Selected } from \"../../types/routes\";\nimport { getPolylineLayer } from \"../../utils/getPolylineLayer\";\nimport {\n  ROUTE_LINE_HOVER,\n  ROUTE_LINE_STYLE_BASE,\n  ROUTE_LINE_STYLE_OFFTRACK,\n  ROUTE_LINE_STYLE_ONTRACK,\n} from \"../leafletElementStyles\";\nimport { selectPolyline as selectPolylineAction } from \"../../state/routes/routesActions\";\nimport { RouteLayersContext } from \"../../state/store\";\n\nconst drawFragments = (\n  analysisId: string,\n  routeLayers: RouteLayers,\n  fragments: RouteFragments,\n  selectedPolyline: Selected | null,\n  selectPolyline: (id: string, analysisId: string) => void\n) => {\n  routeLayers.offtrackMarkersLayer.clearLayers();\n  routeLayers.offtrackFragmentsLayer.clearLayers();\n  routeLayers.ontrackMarkersLayer.clearLayers();\n  routeLayers.ontrackFragmentsLayer.clearLayers();\n\n  fragments.forEach((fragment) => {\n    const style = {\n      ...ROUTE_LINE_STYLE_BASE,\n      ...(fragment.type === \"ontrack\"\n        ? ROUTE_LINE_STYLE_ONTRACK\n        : ROUTE_LINE_STYLE_OFFTRACK),\n      ...(selectedPolyline?.id === fragment.id ? ROUTE_LINE_HOVER : {}),\n    };\n\n    const polyline = L.polyline(fragment.latLngs, style);\n\n    polyline\n      .on(\"click\", function (e) {\n        selectPolyline(fragment.id, analysisId);\n\n        // const exitPoint = fragment[0];\n        // const entryPoint = fragment[fragment.length - 1];\n\n        // L.marker([exitPoint.lat, exitPoint.lng])\n        //     .addTo(routeLayers.offtrackMarkersLayer)\n        //     .bindTooltip(exitPoint.meta.time.toString(), OFFTRACK_POINT_TOOLTIP_OPTIONS);\n\n        // L.marker([entryPoint.lat, entryPoint.lng])\n        //     .addTo(routeLayers.offtrackMarkersLayer)\n        //     .bindTooltip(entryPoint.meta.time.toString(), OFFTRACK_POINT_TOOLTIP_OPTIONS);\n      })\n      .on(\"mouseover\", function (e) {\n        polyline.setStyle({ ...style, ...ROUTE_LINE_HOVER });\n      })\n      .on(\"mouseout\", function (e) {\n        polyline.setStyle(style);\n      })\n      .addTo(routeLayers.offtrackFragmentsLayer);\n  });\n};\n\nexport const AnalysisDrawer = () => {\n  const { map } = useLeaflet();\n  const analyses = useSelector(getRoutesAnalysis);\n  const { layers } = useContext(RouteLayersContext);\n  const routes = useSelector(getRoutes);\n  const trackEmpty = !Object.keys(analyses).length;\n\n  const dispatch = useDispatch();\n  const selectPolylineFn = useCallback(\n    (id, analysisId) => dispatch(selectPolylineAction(id, analysisId)),\n    [dispatch]\n  );\n  const selectedPolyline = useSelector(getSelectedPolyline);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    for (let [key, route] of Object.entries(routes)) {\n      const routeLayers = layers[route.id];\n\n      if (!routeLayers?.gpx) {\n        continue;\n      }\n\n      const polylineLayer = getPolylineLayer(routeLayers.gpx);\n\n      if (!polylineLayer) {\n        throw new Error(\"Polyline layer not found in route.\");\n      }\n\n      if (!trackEmpty) {\n        // Tracks replace the original polyline\n        map.removeLayer(polylineLayer);\n      }\n\n      if (trackEmpty && !map.hasLayer(polylineLayer)) {\n        map.addLayer(polylineLayer);\n      }\n\n      const analysis = analyses[key] || [];\n\n      // Do not draw offtrack fragments if the track is empty, this is purely visual\n      drawFragments(\n        key,\n        routeLayers,\n        analysis,\n        selectedPolyline,\n        selectPolylineFn\n      );\n    }\n  }, [\n    map,\n    analyses,\n    selectedPolyline,\n    routes,\n    layers,\n    trackEmpty,\n    selectPolylineFn,\n  ]);\n\n  return null;\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { useLeaflet } from \"react-leaflet\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTrack } from \"../state/track/trackReducer\";\n\nimport L from \"leaflet\";\nimport \"leaflet-kml\";\nimport { loadTrack } from \"../state/track/trackActions\";\nimport { RouteLayersContext } from \"../state/store\";\n\nconst kmlFile = require(\"../test-data/doc.kml\");\n\nconst loadKmlFile = (url: string, cb: Function) => {\n  var req = new window.XMLHttpRequest();\n  req.open(\"GET\", url);\n  try {\n    req.overrideMimeType(\"text/xml\");\n  } catch (e) {}\n  req.onreadystatechange = function () {\n    if (req.readyState !== 4) return;\n    if (req.status === 200) cb(req.responseText);\n  };\n  req.send(null);\n};\n\nexport const KmlLoader: React.FC = () => {\n  const { map } = useLeaflet();\n  const dispatch = useDispatch();\n  const { trackLayer } = useContext(RouteLayersContext);\n\n  const track = useSelector(getTrack);\n\n  useEffect(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      loadKmlFile(kmlFile, (content: string) => dispatch(loadTrack(content)));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!track?.content) {\n      return;\n    }\n\n    const parser = new DOMParser();\n    const kmlContent = parser.parseFromString(track.content, \"text/xml\");\n\n    // @ts-ignore\n    const kml = new L.KML(kmlContent);\n    kml\n      .getLayers()[0]\n      .getLayers()\n      .forEach((layer: any) => trackLayer.addLayer(layer));\n\n    map.fireEvent(\"TRACK_LOADED\");\n  }, [map, track, trackLayer]);\n\n  return null;\n};\n","import React, { useState } from \"react\";\nimport { Map, TileLayer, ZoomControl, ScaleControl } from \"react-leaflet\";\nimport { LatLngExpression } from \"leaflet\";\nimport { Route } from \"react-router\";\n\nimport \"./LeafletMap.scss\";\nimport { GpxLoader } from \"./GpxLoader\";\nimport { TrackDrawer } from \"./TrackDrawer/TrackDrawer\";\nimport { RouteAnalyser } from \"./RouteAnalyser/RouteAnalyser\";\nimport { AnalysisDrawer } from \"./RouteAnalyser/AnalysisDrawer\";\nimport { KmlLoader } from \"./KmlLoader\";\n\nconst PREFER_CANVAS = false;\n\nexport const LeafletMap: React.FC = () => {\n  const [position] = useState<LatLngExpression>({\n    lat: 51.505,\n    lng: -0.09,\n  });\n\n  const [zoom] = useState<number>(13);\n\n  // const context = useLeaflet();\n\n  // // Make leaflet acknowledge the container size, otherwise it wont render all tiles\n  // useLayoutEffect(() => {\n  //     if (!context.map) {\n  //         return;\n  //     }\n\n  //     context.map.invalidateSize();\n  // }, [context.map]);\n\n  return (\n    <div className=\"map-container\">\n      <Map\n        center={position}\n        zoom={zoom}\n        zoomControl={false}\n        preferCanvas={PREFER_CANVAS}\n      >\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <ZoomControl position=\"topleft\" />\n        <ScaleControl position=\"bottomleft\" imperial={false} />\n        <RouteAnalyser />\n\n        <GpxLoader />\n        <KmlLoader />\n        <Route path=\"/track\">\n          {({ match }) => <TrackDrawer drawingMode={Boolean(match)} />}\n        </Route>\n        <AnalysisDrawer />\n      </Map>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Uppy from \"@uppy/core\";\nimport { DragDrop } from \"@uppy/react\";\n\nimport \"@uppy/core/dist/style.css\";\nimport \"@uppy/drag-drop/dist/style.css\";\nimport { useDispatch } from \"react-redux\";\nimport { addRoute } from \"../../state/routes/routesActions\";\n\nconst uppy = Uppy({\n  autoProceed: true,\n  restrictions: {\n    allowedFileTypes: [\".gpx\"],\n  },\n});\n\nconst readFile = (file: File): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => resolve(fileReader.result as string);\n    fileReader.onerror = reject;\n\n    fileReader.readAsText(file);\n  });\n};\n\nexport const RouteUploader = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    uppy.on(\"file-added\", async (file) => {\n      // TODO: handle error state\n      const route = await readFile(file.data);\n      dispatch(addRoute(file.name, route));\n    });\n  }, [dispatch]);\n\n  return (\n    <DragDrop\n      uppy={uppy}\n      locale={{\n        strings: {\n          dropHereOr: \"Przeciągnij i upuść plik w formacie .gpx lub %{browse}\",\n          browse: \"przeglądaj\",\n        },\n      }}\n    />\n  );\n};\n","// import { DefaultTheme } from 'styled-components';\n\n// Palette 20\nconst palette = {\n  // Primary\n  \"light-blue-050\": \"#EBF8FF\",\n  \"light-blue-100\": \"#D1EEFC\",\n  \"light-blue-200\": \"#A7D8F0\",\n  \"light-blue-300\": \"#7CC1E4\",\n  \"light-blue-400\": \"#55AAD4\",\n  \"light-blue-500\": \"#3994C1\",\n  \"light-blue-600\": \"#2D83AE\",\n  \"light-blue-700\": \"#1D6F98\",\n  \"light-blue-800\": \"#166086\",\n  \"light-blue-900\": \"#0B4F71\",\n\n  \"green-050\": \"#E3F9E5\",\n  \"green-100\": \"#C1EAC5\",\n  \"green-200\": \"#A3D9A5\",\n  \"green-300\": \"#7BC47F\",\n  \"green-400\": \"#57AE5B\",\n  \"green-500\": \"#3F9142\",\n  \"green-600\": \"#2F8132\",\n  \"green-700\": \"#207227\",\n  \"green-800\": \"#0E5814\",\n  \"green-900\": \"#05400A\",\n\n  // Neutrals\n  \"cool-grey-050\": \"#F5F7FA\",\n  \"cool-grey-100\": \"#E4E7EB\",\n  \"cool-grey-200\": \"#CBD2D9\",\n  \"cool-grey-300\": \"#9AA5B1\",\n  \"cool-grey-400\": \"#7B8794\",\n  \"cool-grey-500\": \"#616E7C\",\n  \"cool-grey-600\": \"#52606D\",\n  \"cool-grey-700\": \"#3E4C59\",\n  \"cool-grey-800\": \"#323F4B\",\n  \"cool-grey-900\": \"#1F2933\",\n\n  // Supporting\n  \"purple-050\": \"#EAE2F8\",\n  \"purple-100\": \"#CFBCF2\",\n  \"purple-200\": \"#A081D9\",\n  \"purple-300\": \"#8662C7\",\n  \"purple-400\": \"#724BB7\",\n  \"purple-500\": \"#653CAD\",\n  \"purple-600\": \"#51279B\",\n  \"purple-700\": \"#421987\",\n  \"purple-800\": \"#34126F\",\n  \"purple-900\": \"#240754\",\n\n  \"red-050\": \"#FFEEEE\",\n  \"red-100\": \"#FACDCD\",\n  \"red-200\": \"#F29B9B\",\n  \"red-300\": \"#E66A6A\",\n  \"red-400\": \"#D64545\",\n  \"red-500\": \"#BA2525\",\n  \"red-600\": \"#A61B1B\",\n  \"red-700\": \"#911111\",\n  \"red-800\": \"#780A0A\",\n  \"red-900\": \"#610404\",\n\n  \"yellow-050\": \"#FFFAEB\",\n  \"yellow-100\": \"#FCEFC7\",\n  \"yellow-200\": \"#F8E3A3\",\n  \"yellow-300\": \"#F9DA8B\",\n  \"yellow-400\": \"#F7D070\",\n  \"yellow-500\": \"#E9B949\",\n  \"yellow-600\": \"#C99A2E\",\n  \"yellow-700\": \"#A27C1A\",\n  \"yellow-800\": \"#7C5E10\",\n  \"yellow-900\": \"#513C06\",\n};\n\n// Spacing and sizing system\n// Defined as constants to allow explicit references, instead of the ridiculous ambiguous default way\nexport const fontSize = {\n  body: \"14px\",\n  12: `${12 / 16}rem`,\n  14: `${14 / 16}rem`,\n  16: `${16 / 16}rem`,\n  18: `${18 / 16}rem`,\n  20: `${20 / 16}rem`,\n  24: `${24 / 16}rem`,\n  30: `${30 / 16}rem`,\n  36: `${36 / 16}rem`,\n  48: `${48 / 16}rem`,\n};\n\nexport const space = {\n  4: `${4 / 16}rem`,\n  8: `${8 / 16}rem`,\n  12: `${12 / 16}rem`,\n  16: `${16 / 16}rem`,\n  24: `${24 / 16}rem`,\n  32: `${32 / 16}rem`,\n  48: `${48 / 16}rem`,\n  64: `${64 / 16}rem`,\n  96: `${96 / 16}rem`,\n  128: `${128 / 16}rem`,\n};\n\nconst preset = {\n  colors: {\n    text: palette[\"cool-grey-800\"],\n    textLight: palette[\"cool-grey-050\"],\n    background: \"#fff\",\n    primary: palette[\"purple-500\"],\n    secondary: palette[\"cool-grey-400\"],\n    muted: palette[\"cool-grey-500\"],\n    gray: palette[\"cool-grey-300\"],\n    highlight: \"hsla(205, 100%, 40%, 0.125)\",\n\n    header: palette[\"cool-grey-200\"],\n  },\n  fonts: {\n    body: \"Lato, system-ui, sans-serif\",\n    heading: \"inherit\",\n    monospace: \"Menlo, monospace\",\n  },\n  fontSizes: fontSize,\n  fontWeights: {\n    body: 400,\n    heading: 700,\n    bold: 700,\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.25,\n  },\n  space,\n  radii: {\n    default: \".375rem\",\n  },\n  shadows: {\n    card: \"0 0 4px rgba(0, 0, 0, .125)\",\n  },\n  input: {\n    marginRight: space[\"8\"],\n    padding: space[\"8\"],\n    border: \"0\",\n    boxShadow: \"inset 0 0 2px\",\n  },\n  // rebass variants\n  text: {\n    heading: {\n      fontFamily: \"heading\",\n      lineHeight: \"heading\",\n      fontWeight: \"heading\",\n      letterSpacing: \"-1px\",\n      fontSize: fontSize[\"48\"],\n\n      h1: {\n        letterSpacing: \"-1px\", // nesting doesn't seem to inherit values... this is kinda dumb\n        marginBottom: space[\"12\"],\n        fontSize: fontSize[\"48\"],\n      },\n      h2: {\n        letterSpacing: \"-1px\",\n        marginBottom: space[\"12\"],\n        fontSize: fontSize[\"30\"],\n      },\n      h3: {\n        letterSpacing: \"-1px\",\n        marginBottom: space[\"12\"],\n        fontSize: fontSize[\"24\"],\n      },\n      h4: {\n        letterSpacing: \"-1px\",\n        marginBottom: space[\"12\"],\n        fontSize: fontSize[\"20\"],\n      },\n    },\n    display: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      fontSize: [fontSize[\"24\"], fontSize[\"30\"], fontSize[\"36\"]],\n    },\n    caps: {\n      textTransform: \"uppercase\",\n      letterSpacing: \"0.1em\",\n    },\n    iconButtonText: {\n      marginLeft: space[\"8\"],\n    },\n    routeName: {\n      marginRight: space[\"8\"],\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginBottom: 0,\n      fontSize: fontSize[\"20\"],\n\n      editable: {\n        marginRight: space[\"8\"],\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        marginBottom: 0,\n        fontSize: fontSize[\"16\"],\n      },\n    },\n    instruction: {\n      fontSize: fontSize[\"12\"],\n      color: \"muted\",\n    },\n  },\n  variants: {\n    header: {\n      backgroundColor: \"header\",\n      letterSpacing: \"-2px\",\n      padding: space[\"16\"],\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    sidebar: {\n      // This is stolen from leaflet control css, but I don't like it, so TODO\n      boxShadow: \"0 1px 5px rgba(0,0,0,0.65)\",\n      borderRadius: \"default\",\n      overflow: \"hidden\",\n    },\n    popup: {\n      variant: \"variants.sidebar\",\n      marginTop: space[\"12\"],\n      backgroundColor: \"rgb(255 255 255 / 90%)\",\n    },\n    content: {\n      px: space[\"24\"],\n      py: space[\"16\"],\n      overflow: \"auto\",\n      overflowX: \"hidden\",\n    },\n    container: {\n      marginBottom: space[\"24\"],\n    },\n    link: {\n      color: \"primary\",\n    },\n    nav: {\n      px: space[\"24\"],\n      py: space[\"16\"],\n      justifyContent: \"center\",\n      marginTop: \"auto\",\n\n      \"*:not(:only-child):not(:first-of-type)\": {\n        marginLeft: space[\"8\"],\n      },\n    },\n    routeSummary: {\n      pb: space[\"16\"],\n    },\n\n    table: {\n      width: \"100%\",\n      textAlign: \"center\",\n      borderSpacing: 0,\n    },\n    th: {\n      px: space[\"4\"],\n      py: space[\"8\"],\n    },\n    td: {\n      px: space[\"4\"],\n      py: space[\"8\"],\n      borderBottom: \"solid 1px\",\n      borderColor: palette[\"cool-grey-100\"],\n    },\n  },\n  buttons: {\n    primary: {\n      cursor: \"pointer\",\n      fontSize: fontSize[\"16\"],\n      color: \"background\",\n      bg: \"primary\",\n      borderRadius: \"default\",\n      px: space[\"16\"],\n      py: space[\"8\"],\n    },\n    outline: {\n      variant: \"buttons.primary\",\n      color: \"primary\",\n      bg: \"transparent\",\n      boxShadow: \"inset 0 0 2px\",\n    },\n    primaryOutline: {\n      variant: \"buttons.outline\",\n    },\n    secondary: {\n      variant: \"buttons.primary\",\n      color: \"background\",\n      bg: \"secondary\",\n    },\n    secondaryOutline: {\n      variant: \"buttons.outline\",\n      color: \"secondary\",\n    },\n    greenOutline: {\n      variant: \"buttons.outline\",\n      color: palette[\"green-600\"],\n      \":hover:not(.active), :focus:not(.active)\": {\n        color: \"background\",\n        bg: palette[\"green-600\"],\n      },\n    },\n    destructive: {\n      variant: \"buttons.primary\",\n      bg: palette[\"red-600\"],\n      color: \"background\",\n    },\n    destructiveOutline: {\n      variant: \"buttons.outline\",\n      color: palette[\"red-500\"],\n      \":hover:not(.active), :focus:not(.active)\": {\n        color: \"background\",\n        bg: palette[\"red-600\"],\n      },\n    },\n    icon: {\n      variant: \"buttons.outline\",\n      color: \"muted\",\n      boxShadow: 0,\n      padding: 0,\n    },\n\n    github: {\n      variant: \"buttons.outline\",\n      boxShadow: 0,\n      fontSize: fontSize[\"24\"],\n      color: \"muted\",\n      \":hover:not(.active), :focus:not(.active)\": {\n        color: \"primary\",\n      },\n    },\n  },\n};\n\nexport const theme: any = {\n  ...preset,\n  palette,\n};\n","import React, { ReactNode } from \"react\";\nimport {\n  Button as RebassButton,\n  Link as RebassLink,\n  ButtonProps,\n  LinkProps as RebassLinkProps,\n} from \"rebass\";\nimport { space } from \"../styles/theme\";\nimport { Link, LinkProps } from \"react-router-dom\";\n\ninterface CustomButtonProps extends ButtonProps {\n  icon?: string;\n  children?: ReactNode;\n}\n\nexport const Button = ({ children, icon, ...restProps }: CustomButtonProps) => (\n  <RebassButton {...restProps}>\n    {icon && (\n      <i\n        className={`${icon}`}\n        style={{ marginRight: children ? space[\"4\"] : 0 }}\n      />\n    )}\n    {children}\n  </RebassButton>\n);\n\nexport const LinkButton = (props: CustomButtonProps & LinkProps) => (\n  <Button as={Link} {...props} />\n);\n\nexport const ExternalLinkButton = ({\n  href,\n  ...props\n}: CustomButtonProps & RebassLinkProps) => (\n  <Button as={RebassLink} href={href} {...props} />\n);\n","import { Box, Flex, Heading, Text } from \"rebass\";\nimport { space } from \"../../styles/theme\";\nimport { Button } from \"../Button\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Input } from \"@rebass/forms\";\nimport { useDispatch } from \"react-redux\";\nimport { changeRouteName, removeRoute } from \"../../state/routes/routesActions\";\nimport { Route } from \"../../types/routes\";\n\ntype RouteNameInputProps = {\n  defaultValue: string;\n  onAccept: (name: string | null) => void;\n};\n\nconst RouteNameInput = ({ defaultValue, onAccept }: RouteNameInputProps) => {\n  const ref = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    const input = ref.current;\n\n    if (input) {\n      input.focus();\n    }\n  }, []);\n\n  return (\n    <Input\n      ref={ref}\n      id=\"name\"\n      name=\"name\"\n      type=\"text\"\n      defaultValue={defaultValue}\n      onBlur={() => onAccept(ref.current && ref.current.value)}\n    />\n  );\n};\n\nconst RouteName = ({\n  name,\n  onChange,\n}: {\n  name: string;\n  onChange: (name: string) => void;\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  if (isEditing) {\n    return (\n      <RouteNameInput\n        defaultValue={name}\n        onAccept={(name) => {\n          setIsEditing(false);\n          name && onChange(name);\n        }}\n      />\n    );\n  }\n\n  return (\n    <Box sx={{ cursor: \"pointer\" }} onClick={() => setIsEditing(true)}>\n      <Heading variant=\"routeName.editable\">{name}</Heading>\n      <Text variant=\"instruction\">Kliknij, aby zmienić nazwę...</Text>\n    </Box>\n  );\n};\n\nexport const RouteRecord = ({ route }: { route: Route }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Box variant=\"container\">\n      <Flex\n        mb={space[\"12\"]}\n        sx={{\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          // Setting min-height prevents the following rows from jumping 1 pixel up when the input is rendered\n          minHeight: space[\"48\"],\n        }}\n      >\n        <RouteName\n          name={route.name}\n          onChange={(name: string) => dispatch(changeRouteName(route.id, name))}\n        />\n\n        <Flex sx={{ flexWrap: \"nowrap\", flexShrink: 0 }}>\n          {/* <Button\n            variant=\"secondaryOutline\"\n            mr=\"4\"\n            icon=\"fa-fw fas fa-eye\"\n            sx={{ height: \"100%\" }}\n          /> */}\n          <Button\n            variant=\"destructiveOutline\"\n            icon=\"fa-fw fas fa-times\"\n            sx={{ height: \"100%\" }}\n            onClick={() => dispatch(removeRoute(route.id))}\n          />\n        </Flex>\n      </Flex>\n\n      {/*{route.gpx && (*/}\n      {/*    <RouteData route={route.gpx} />*/}\n      {/*)}*/}\n    </Box>\n  );\n};\n\n// type RouteDataProps = {\n//     route: GPX,\n// };\n//\n// const RouteData: React.FC<RouteDataProps> = ({ route }) => {\n//     const get_name = route.get_name();\n//     const get_distance = route.get_distance();\n//     const get_start_time = route.get_start_time().toString();\n//     const get_end_time = route.get_end_time().toString();\n//     const get_moving_time = route.get_moving_time();\n//     const get_total_time = route.get_total_time();\n//     const get_moving_pace = route.get_moving_pace();\n//     const get_moving_speed = route.get_moving_speed();\n//     const get_total_speed = route.get_total_speed();\n//     const get_elevation_min = route.get_elevation_min();\n//     const get_elevation_max = route.get_elevation_max();\n//     const get_elevation_gain = route.get_elevation_gain();\n//     const get_elevation_loss = route.get_elevation_loss();\n//     const get_average_hr = route.get_average_hr();\n//     const get_average_cadence = route.get_average_cadence();\n//     const get_average_temp = route.get_average_temp();\n//\n//     return (\n//         <>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_name: <span className=\"font-bold\">{ get_name }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the name of the GPX track</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_distance: <span className=\"font-bold\">{ get_distance }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the total track distance, in meters</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_start_time: <span className=\"font-bold\">{ get_start_time }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns a Javascript Date object representing the starting time</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_end_time: <span className=\"font-bold\">{ get_end_time }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns a Javascript Date object representing when the last point was recorded</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_moving_time: <span className=\"font-bold\">{ get_moving_time }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the moving time, in milliseconds</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_total_time: <span className=\"font-bold\">{ get_total_time }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the total track time, in milliseconds</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_moving_pace: <span className=\"font-bold\">{ get_moving_pace }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the average moving pace in milliseconds per km</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_moving_speed: <span className=\"font-bold\">{ get_moving_speed }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the average moving speed in km per hour</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_total_speed: <span className=\"font-bold\">{ get_total_speed }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the average total speed in km per hour</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_elevation_min: <span className=\"font-bold\">{ get_elevation_min }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the lowest elevation, in meters</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_elevation_max: <span className=\"font-bold\">{ get_elevation_max }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the highest elevation, in meters</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_elevation_gain: <span className=\"font-bold\">{ get_elevation_gain }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the cumulative elevation gain, in meters</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_elevation_loss: <span className=\"font-bold\">{ get_elevation_loss }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the cumulative elevation loss, in meters</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_average_hr: <span className=\"font-bold\">{ get_average_hr }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the average heart rate (if available)</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_average_cadence: <span className=\"font-bold\">{ get_average_cadence }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the average cadence (if available)</div>\n//             </div>\n//             <div className=\"mb-2 text-sm text-gray-800\">\n//                 <span>get_average_temp: <span className=\"font-bold\">{ get_average_temp }</span></span>\n//                 <div className=\"text-gray-700 text-xs\">returns the average of the temperature (if available)</div>\n//             </div>\n//         </>\n//     );\n// };\n","import React from \"react\";\nimport { Box, Heading, Text } from \"rebass\";\n\nimport { RouteUploader } from \"./RouteUploader\";\nimport { RouteRecord } from \"./RouteRecord\";\nimport { useSelector } from \"react-redux\";\nimport { getRoutes } from \"../../state/routes/routesReducer\";\n\nexport const RouteStep: React.FC = () => {\n  const routes = useSelector(getRoutes);\n  const amountOfRoutes = Object.keys(routes).length;\n\n  return (\n    <>\n      <Box variant=\"container\">\n        <RouteUploader />\n      </Box>\n\n      {amountOfRoutes > 0 && (\n        <Box variant=\"container\">\n          <Heading variant=\"heading.h3\">Załadowane przebiegi</Heading>\n        </Box>\n      )}\n\n      {amountOfRoutes === 0 && (\n        <Text>\n          Nie załadowano żadnych tras, przeciągnij pliki <code>.gpx</code> do\n          okna powyżej, lub użyj przeglądarki plików.\n        </Text>\n      )}\n\n      {Object.entries(routes).map(([_key, route]) => (\n        <RouteRecord key={`route-${route.id}`} route={route} />\n      ))}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Text } from \"rebass\";\nimport { fontSize } from \"../../styles/theme\";\n\nexport const WelcomeStep: React.FC = () => (\n  <>\n    <Text\n      fontSize={fontSize[\"18\"]}\n      // fontWeight='bold'\n      color=\"text\"\n      sx={{\n        textAlign: \"justify\",\n        whiteSpace: \"pre-line\",\n      }}\n    >\n      <p>\n        Witaj w aplikacji przeznaczonej do analizy tras <code>.gpx</code>.\n        Dzięki interaktywnej mapie, porównasz załadowane trasy z wyznaczonym\n        torem, otrzymując szczegółowe informacje, podsumowanie i punktacje dla\n        każdej z nich.\n      </p>\n\n      <p>\n        Projekt powstał na potrzeby organizacji amatorskich zawodów lotniczych\n        przez członków Aeroklubu Szczecińskiego.\n      </p>\n    </Text>\n  </>\n);\n","import React, { useEffect } from \"react\";\nimport Uppy from \"@uppy/core\";\nimport { DragDrop } from \"@uppy/react\";\n\nimport \"@uppy/core/dist/style.css\";\nimport \"@uppy/drag-drop/dist/style.css\";\nimport { useDispatch } from \"react-redux\";\nimport { loadTrack } from \"../../state/track/trackActions\";\n\nconst uppy = Uppy({\n  autoProceed: true,\n  restrictions: {\n    allowedFileTypes: [\".kml\"],\n  },\n});\n\nconst readFile = (file: File): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => resolve(fileReader.result as string);\n    fileReader.onerror = reject;\n\n    fileReader.readAsText(file);\n  });\n};\n\nexport const TrackUploader = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    uppy.on(\"file-added\", async (file) => {\n      // TODO: handle error state\n      const track = await readFile(file.data);\n      dispatch(loadTrack(track));\n    });\n  }, [dispatch]);\n\n  return (\n    <DragDrop\n      uppy={uppy}\n      locale={{\n        strings: {\n          dropHereOr: \"Przeciągnij i upuść plik w formacie .kml lub %{browse}\",\n          browse: \"przeglądaj\",\n        },\n      }}\n    />\n  );\n};\n","export interface LoadTrackAction {\n  type: \"LOAD_TRACK\";\n  payload: {\n    content: string;\n  };\n}\n\nexport const loadTrack = (content: string): LoadTrackAction => ({\n  type: \"LOAD_TRACK\",\n  payload: { content },\n});\n","import React from \"react\";\nimport { TrackUploader } from \"../TrackDrawer/TrackUploader\";\nimport { Box, Text } from \"rebass\";\n\nexport const TrackStep: React.FC = () => {\n  return (\n    <>\n      <Box variant=\"container\">\n        <TrackUploader />\n      </Box>\n\n      <Box variant=\"container\">\n        <Text>\n          Załaduj plik w formacie <code>.kml</code> powyżej, lub użyj przycisków\n          po prawej, by wyrysować trasę.\n        </Text>\n      </Box>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Box, BoxProps } from \"rebass\";\n\n/*\n  Rebass doesn't support table elements yet.\n  It comes with some default styling, that can be overridden in the usual ways (variant, sx, ...)\n  source: https://github.com/rebassjs/rebass/issues/569#issuecomment-580388815\n*/\n\nexport interface TableProps\n  extends BoxProps,\n    Omit<React.TableHTMLAttributes<HTMLTableElement>, keyof BoxProps> {}\n\nexport const Table: React.ComponentType<TableProps> = React.forwardRef(\n  (props, ref) => <Box ref={ref} as=\"table\" variant=\"table\" {...props} />\n);\n\nexport interface TableHeadProps\n  extends BoxProps,\n    Omit<React.HTMLAttributes<HTMLTableSectionElement>, keyof BoxProps> {}\n\nexport const TableHead: React.ComponentType<TableHeadProps> = React.forwardRef(\n  (props, ref) => <Box ref={ref} as=\"thead\" variant=\"thead\" {...props} />\n);\n\nexport interface TableBodyProps\n  extends BoxProps,\n    Omit<React.HTMLAttributes<HTMLTableSectionElement>, keyof BoxProps> {}\n\nexport const TableBody: React.ComponentType<TableBodyProps> = React.forwardRef(\n  (props, ref) => <Box ref={ref} as=\"tbody\" variant=\"tbody\" {...props} />\n);\n\nexport interface TableRowProps\n  extends BoxProps,\n    Omit<React.HTMLAttributes<HTMLTableRowElement>, keyof BoxProps> {}\n\nexport const TableRow: React.ComponentType<TableRowProps> = React.forwardRef(\n  (props, ref) => <Box ref={ref} as=\"tr\" variant=\"tr\" {...props} />\n);\n\nexport interface TableHeadCellProps\n  extends BoxProps,\n    Omit<React.TdHTMLAttributes<HTMLTableDataCellElement>, keyof BoxProps> {}\n\nexport const TableHeadCell: React.ComponentType<TableHeadCellProps> =\n  React.forwardRef((props, ref) => (\n    <Box ref={ref} as=\"th\" variant=\"th\" {...props} />\n  ));\n\nexport interface TableDataCellProps\n  extends BoxProps,\n    Omit<React.TdHTMLAttributes<HTMLTableDataCellElement>, keyof BoxProps> {}\n\nexport const TableDataCell: React.ComponentType<TableDataCellProps> =\n  React.forwardRef((props, ref) => (\n    <Box ref={ref} as=\"td\" variant=\"td\" {...props} />\n  ));\n","import { GPX } from \"leaflet\";\nimport moment from \"moment\";\nimport { GPXLatLng, RouteFragments } from \"../types/routes\";\n\nexport type AnalysisDataOfftrackIntervals = {\n  index: number;\n  start: string;\n  end: string;\n  duration: string;\n};\n\nexport type AnalysisData = {\n  startTime: string;\n  endTime: string;\n  routeLength: string;\n  distance: string;\n  movingSpeed: string;\n  totalSpeed: string;\n  elevationMin: string;\n  elevationMax: string;\n  offtrackIntervals: AnalysisDataOfftrackIntervals[];\n  offtrackIntervalsSum: string;\n};\n\n// TODO: milliseconds should probably be rounded off, to avoid issues with comparison (30.000 - 20.999 = 21)\n// maybe not necessarily here though, maybe somewhere closer to route analysis?\n// TODO: does not handle diffs larger than 24 hours, figure out a better solution\nconst getFormattedDurationLength = (\n  start: moment.Moment,\n  end: moment.Moment\n) => {\n  const diff = end.diff(start);\n  return moment.utc(diff).format(\"HH:mm:ss\");\n};\n\nconst calculateOfftrackIntervals = (analysis: RouteFragments) => {\n  return analysis\n    .map((value) => {\n      if (value.type === \"ontrack\") {\n        return [];\n      }\n\n      return [value.latLngs[0], value.latLngs[value.latLngs.length - 1]];\n    })\n    .filter((e) => e.length);\n};\n\nconst sumOfftrackIntervals = (offtrackIntervals: GPXLatLng[][]) => {\n  const secondsSum = offtrackIntervals.reduce(\n    (carry: number, value: GPXLatLng[]) => {\n      const start = moment(value[0].meta.time);\n      const end = moment(value[1].meta.time);\n      const diff = end.diff(start);\n\n      carry += diff;\n      return carry;\n    },\n    0\n  );\n\n  return moment.utc(secondsSum).format(\"HH:mm:ss\");\n};\n\nexport const gatherAnalysisData = (\n  gpx: GPX,\n  analysis: RouteFragments | null\n): AnalysisData => {\n  // const get_name = gpx.get_name();\n  const distance = gpx.get_distance();\n  const get_start_time = gpx.get_start_time().toString();\n  const get_end_time = gpx.get_end_time().toString();\n  // const get_moving_time = gpx.get_moving_time();\n  // const get_total_time = gpx.get_total_time();\n  // const get_moving_pace = gpx.get_moving_pace();\n  const get_moving_speed = gpx.get_moving_speed();\n  const get_total_speed = gpx.get_total_speed();\n  const get_elevation_min = gpx.get_elevation_min();\n  const get_elevation_max = gpx.get_elevation_max();\n  // const get_elevation_gain = gpx.get_elevation_gain();\n  // const get_elevation_loss = gpx.get_elevation_loss();\n  // const get_average_hr = gpx.get_average_hr();\n  // const get_average_cadence = gpx.get_average_cadence();\n  // const get_average_temp = gpx.get_average_temp();\n\n  const routeLength = getFormattedDurationLength(\n    moment(get_start_time),\n    moment(get_end_time)\n  );\n\n  const offtrackIntervals = calculateOfftrackIntervals(analysis || []);\n  const offtrackIntervalsSum = sumOfftrackIntervals(offtrackIntervals);\n\n  return {\n    startTime: moment(get_start_time).format(),\n    endTime: moment(get_end_time).format(),\n    routeLength,\n    distance: `${distance.toFixed(2)} m`,\n    movingSpeed: `${get_moving_speed.toFixed(2)} km/h`,\n    totalSpeed: `${get_total_speed.toFixed(2)} km/h`,\n    elevationMin: `${get_elevation_min} m`,\n    elevationMax: `${get_elevation_max} m`,\n    offtrackIntervals: offtrackIntervals.map((interval, index) => {\n      const start = moment(interval[0].meta.time);\n      const end = moment(interval[1].meta.time);\n\n      return {\n        index: index + 1,\n        start: start.format(\"HH:mm:ss\"),\n        end: end.format(\"HH:mm:ss\"),\n        duration: getFormattedDurationLength(start, end),\n      };\n    }),\n    offtrackIntervalsSum,\n  };\n};\n","import React from \"react\";\n\nimport { GPX } from \"leaflet\";\nimport { Box, Flex, Heading, Text } from \"rebass\";\nimport { space } from \"../../styles/theme\";\nimport { Route, RouteFragments } from \"../../types/routes\";\nimport {\n  Table,\n  TableBody,\n  TableDataCell,\n  TableHead,\n  TableHeadCell,\n  TableRow,\n} from \"../Table\";\nimport {\n  AnalysisData,\n  gatherAnalysisData,\n} from \"../../utils/gatherAnalysisData\";\n\nconst RouteName = ({ name }: { name: string }) => {\n  return (\n    <Box>\n      <Heading variant=\"routeName\">{name}</Heading>\n    </Box>\n  );\n};\n\nexport const RouteSummary = ({\n  route,\n  analysis,\n  gpx,\n}: {\n  route: Route;\n  analysis: RouteFragments | null;\n  gpx: GPX;\n}) => {\n  if (!analysis) {\n    return null;\n  }\n\n  const data = gatherAnalysisData(gpx, analysis);\n\n  return (\n    <Box variant=\"container\">\n      <Flex\n        mb={space[\"12\"]}\n        sx={{\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <RouteName name={route.name} />\n\n        {/* <Box sx={{ whiteSpace: \"nowrap\", flexShrink: 0 }}>\n          <Button\n            variant=\"secondaryOutline\"\n            mr=\"4\"\n            icon=\"fa-fw fas fa-eye\"\n            sx={{ height: \"100%\" }}\n          />\n        </Box> */}\n      </Flex>\n\n      {gpx && <RouteData data={data} />}\n\n      {analysis && (\n        <>\n          <Heading variant=\"heading.h4\">Precyzja lotu</Heading>\n          <RouteAnalysisTable data={data} />\n        </>\n      )}\n    </Box>\n  );\n};\n\nconst RouteData = ({ data }: { data: AnalysisData }) => {\n  return (\n    <>\n      {/*<div className=\"mb-2 text-sm text-gray-800\">*/}\n      {/*    <span>get_name: <span className=\"font-bold\">{ get_name }</span></span>*/}\n      {/*    <div className=\"text-gray-700 text-xs\">returns the name of the GPX track</div>*/}\n      {/*</div>*/}\n      <Box variant=\"routeSummary\">\n        <span>Początek</span>\n        <Text fontWeight=\"bold\">{data.startTime}</Text>\n      </Box>\n      <Box variant=\"routeSummary\">\n        <span>Koniec</span>\n        <Text fontWeight=\"bold\">{data.endTime}</Text>\n      </Box>\n      {/*<Box variant=\"routeSummary\">*/}\n      {/*    <span>Czas trasy w minutach</span>*/}\n      {/*    <Text fontWeight=\"bold\">{ get_moving_time / 1000 / 60 }</Text>*/}\n      {/*    <div className=\"text-gray-700 text-xs\">returns the moving time, in milliseconds</div>*/}\n      {/*</Box>*/}\n      <Box variant=\"routeSummary\">\n        <span>Długość</span>\n        <Text fontWeight=\"bold\">{data.routeLength}</Text>\n      </Box>\n      <Box variant=\"routeSummary\">\n        <span>Pokonany dystans</span>\n        <Text fontWeight=\"bold\">{data.distance}</Text>\n      </Box>\n      {/*<Box variant=\"routeSummary\">*/}\n      {/*    <span>get_moving_pace </span>*/}\n      {/*    <Text fontWeight=\"bold\">{ get_moving_pace }</Text>*/}\n      {/*    <div className=\"text-gray-700 text-xs\">returns the average moving pace in milliseconds per km</div>*/}\n      {/*</Box>*/}\n      <Box variant=\"routeSummary\">\n        <span>Średnia prędkość w ruchu</span>\n        <Text fontWeight=\"bold\">{data.movingSpeed}</Text>\n      </Box>\n      <Box variant=\"routeSummary\">\n        <span>Średnia prędkość dla całego przebiegu</span>\n        <Text fontWeight=\"bold\">{data.totalSpeed}</Text>\n      </Box>\n      <Box variant=\"routeSummary\">\n        <span>Minimalna wysokość nad poziomem morza</span>\n        <Text fontWeight=\"bold\">{data.elevationMin}</Text>\n      </Box>\n      <Box variant=\"routeSummary\">\n        <span>Maksymalna wysokość nad poziomem morza</span>\n        <Text fontWeight=\"bold\">{data.elevationMax}</Text>\n      </Box>\n      {/*<Box variant=\"routeSummary\">*/}\n      {/*    <span>get_elevation_gain: </span>*/}\n      {/*    <Text fontWeight=\"bold\">{ get_elevation_gain }</Text>*/}\n      {/*    <div className=\"text-gray-700 text-xs\">returns the cumulative elevation gain, in meters</div>*/}\n      {/*</Box>*/}\n      {/*<Box variant=\"routeSummary\">*/}\n      {/*    <span>get_elevation_loss: </span>*/}\n      {/*    <Text fontWeight=\"bold\">{ get_elevation_loss }</Text>*/}\n      {/*    <div className=\"text-gray-700 text-xs\">returns the cumulative elevation loss, in meters</div>*/}\n      {/*</Box>*/}\n      {/*<div className=\"mb-2 text-sm text-gray-800\">*/}\n      {/*    <span>get_average_hr: <span className=\"font-bold\">{ get_average_hr }</span></span>*/}\n      {/*    <div className=\"text-gray-700 text-xs\">returns the average heart rate (if available)</div>*/}\n      {/*</div>*/}\n      {/*<div className=\"mb-2 text-sm text-gray-800\">*/}\n      {/*    <span>get_average_cadence: <span className=\"font-bold\">{ get_average_cadence }</span></span>*/}\n      {/*    <div className=\"text-gray-700 text-xs\">returns the average cadence (if available)</div>*/}\n      {/*</div>*/}\n      {/*<div className=\"mb-2 text-sm text-gray-800\">*/}\n      {/*    <span>get_average_temp: <span className=\"font-bold\">{ get_average_temp }</span></span>*/}\n      {/*    <div className=\"text-gray-700 text-xs\">returns the average of the temperature (if available)</div>*/}\n      {/*</div>*/}\n    </>\n  );\n};\n\nconst RouteAnalysisTable = ({ data }: { data: AnalysisData }) => {\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableHeadCell>LP.</TableHeadCell>\n          <TableHeadCell>Opuszczenie trasy</TableHeadCell>\n          <TableHeadCell>Powrót na trasę</TableHeadCell>\n          <TableHeadCell>Czas poza trasą</TableHeadCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {data.offtrackIntervals.map((interval) => {\n          return (\n            <TableRow key={interval.index}>\n              <TableDataCell>{interval.index}</TableDataCell>\n              <TableDataCell>{interval.start}</TableDataCell>\n              <TableDataCell>{interval.end}</TableDataCell>\n              <TableDataCell>{interval.duration}</TableDataCell>\n            </TableRow>\n          );\n        })}\n\n        {!data.offtrackIntervals.length && (\n          <TableRow>\n            <TableDataCell>-</TableDataCell>\n            <TableDataCell>-</TableDataCell>\n            <TableDataCell>-</TableDataCell>\n            <TableDataCell>-</TableDataCell>\n          </TableRow>\n        )}\n\n        <TableRow sx={{ fontWeight: \"bold\" }}>\n          <TableDataCell colSpan={3} sx={{ textAlign: \"left\" }}>\n            Łącznie\n          </TableDataCell>\n          <TableDataCell>{data.offtrackIntervalsSum}</TableDataCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getRoutesAnalysis, getRoutes } from \"../../state/routes/routesReducer\";\nimport { Text } from \"rebass\";\nimport { RouteSummary } from \"./RouteSummary\";\nimport { RouteLayersContext } from \"../../state/store\";\n\nexport const SummaryStep: React.FC = () => {\n  const routes = useSelector(getRoutes);\n  const analysis = useSelector(getRoutesAnalysis);\n  const { layers } = useContext(RouteLayersContext);\n  const amountOfRoutes = Object.keys(routes).length;\n\n  return (\n    <>\n      {amountOfRoutes === 0 && <Text>Nie załadowano żadnych tras.</Text>}\n\n      {Object.entries(routes).map(([_key, route]) => (\n        <RouteSummary\n          key={`route-${route.id}`}\n          route={route}\n          analysis={analysis[route.id]}\n          gpx={layers[route.id]?.gpx}\n        />\n      ))}\n    </>\n  );\n};\n","import ExcelJS from \"exceljs\";\nimport { Routes, RoutesAnalysis, RoutesLayers } from \"../types/routes\";\nimport { gatherAnalysisData } from \"./gatherAnalysisData\";\n\nexport const exportData = async (\n  routes: Routes,\n  layers: RoutesLayers,\n  analyses: RoutesAnalysis\n) => {\n  console.info(analyses);\n\n  if (!routes || !analyses) {\n    return;\n  }\n\n  const workbook = new ExcelJS.Workbook();\n  const sheet = workbook.addWorksheet(\"My Sheet\");\n\n  const nameRow = sheet.getRow(1);\n\n  Object.values(routes).forEach((route, index) => {\n    const analysis = analyses[route.id];\n    const gpx = layers[route.id].gpx;\n\n    const data = gatherAnalysisData(gpx, analysis);\n    const firstColumn = 5 * index + 1;\n\n    nameRow.getCell(firstColumn).value = route.name;\n\n    sheet.getRow(2).getCell(firstColumn).value = \"Początek\";\n    sheet.getRow(3).getCell(firstColumn).value = data.startTime;\n    sheet.getRow(4).getCell(firstColumn).value = \"Koniec\";\n    sheet.getRow(5).getCell(firstColumn).value = data.endTime;\n    sheet.getRow(6).getCell(firstColumn).value = \"Długość\";\n    sheet.getRow(7).getCell(firstColumn).value = data.routeLength;\n    sheet.getRow(8).getCell(firstColumn).value = \"Pokonany dystans\";\n    sheet.getRow(9).getCell(firstColumn).value = data.distance;\n    sheet.getRow(10).getCell(firstColumn).value = \"Średnia prędkość w ruchu\";\n    sheet.getRow(11).getCell(firstColumn).value = data.movingSpeed;\n    sheet.getRow(12).getCell(firstColumn).value =\n      \"Średnia prędkość dla całego przebiegu\";\n    sheet.getRow(13).getCell(firstColumn).value = data.totalSpeed;\n    sheet.getRow(14).getCell(firstColumn).value =\n      \"Minimalna wysokość nad poziomem morza\";\n    sheet.getRow(15).getCell(firstColumn).value = data.elevationMin;\n    sheet.getRow(16).getCell(firstColumn).value =\n      \"Maksymalna wysokość nad poziomem morza\";\n    sheet.getRow(17).getCell(firstColumn).value = data.elevationMax;\n\n    sheet.getRow(19).getCell(firstColumn).value = \"Precyzja lotu\";\n    sheet.getRow(20).getCell(firstColumn).value = \"LP.\";\n    sheet.getRow(20).getCell(firstColumn + 1).value = \"Opuszczenie trasy\";\n    sheet.getRow(20).getCell(firstColumn + 2).value = \"Powrót na trasę\";\n    sheet.getRow(20).getCell(firstColumn + 3).value = \"Czas poza trasą\";\n\n    if (data.offtrackIntervals.length) {\n      data.offtrackIntervals.forEach((interval, intervalIndex) => {\n        sheet.getRow(21 + intervalIndex).getCell(firstColumn).value =\n          interval.index;\n        sheet.getRow(21 + intervalIndex).getCell(firstColumn + 1).value =\n          interval.start;\n        sheet.getRow(21 + intervalIndex).getCell(firstColumn + 2).value =\n          interval.end;\n        sheet.getRow(21 + intervalIndex).getCell(firstColumn + 3).value =\n          interval.duration;\n      });\n\n      sheet\n        .getRow(21 + data.offtrackIntervals.length)\n        .getCell(firstColumn).value = \"Łącznie\";\n      sheet\n        .getRow(21 + data.offtrackIntervals.length)\n        .getCell(firstColumn + 3).value = data.offtrackIntervalsSum;\n    }\n  });\n\n  const buffer = await workbook.xlsx.writeBuffer();\n  download(buffer);\n};\n\nconst download = (byte: ExcelJS.Buffer) => {\n  var blob = new Blob([byte], { type: \"application/xlsx\" });\n  var link = document.createElement(\"a\");\n  link.href = window.URL.createObjectURL(blob);\n  var fileName = \"results.xlsx\";\n  link.download = fileName;\n  link.click();\n};\n","import React, { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { RouteStep } from \"../RouteStep/RouteStep\";\n\nimport \"./sidebar.css\";\nimport { Box, Flex, Heading, Text } from \"rebass\";\nimport { WelcomeStep } from \"../WelcomeStep/WelcomeStep\";\nimport { Button, ExternalLinkButton, LinkButton } from \"../Button\";\nimport { TrackStep } from \"../TrackStep/TrackStep\";\nimport { SummaryStep } from \"../SummaryStep/SummaryStep\";\n\nimport { getRoutes, getRoutesAnalysis } from \"../../state/routes/routesReducer\";\nimport { exportData } from \"../../utils/exportData\";\nimport { space } from \"../../styles/theme\";\nimport { RouteLayersContext } from \"../../state/store\";\n\nexport const Sidebar: React.FC = () => {\n  const analysis = useSelector(getRoutesAnalysis);\n  const routes = useSelector(getRoutes);\n  const { layers } = useContext(RouteLayersContext);\n\n  return (\n    <Box\n      sx={{\n        position: \"absolute\",\n        zIndex: 500,\n        height: \"100%\",\n      }}\n      className=\"sidebar\"\n    >\n      <Flex\n        variant=\"sidebar\"\n        flexDirection=\"column\"\n        bg=\"background\"\n        sx={{\n          height: \"100%\",\n        }}\n      >\n        <Flex variant=\"header\">\n          <Heading variant=\"heading.h2\" mb=\"0\">\n            <Text as=\"span\" color=\"primary\">\n              AERO\n            </Text>\n            <Text as=\"span\" color=\"muted\" fontWeight=\"normal\">\n              CONTEST\n            </Text>\n          </Heading>\n\n          <ExternalLinkButton\n            href=\"https://github.com/zefj/aerocontest\"\n            variant=\"github\"\n            icon=\"fab fa-github\"\n          />\n        </Flex>\n\n        <Box variant=\"content\">\n          <Switch>\n            <Route path=\"/(welcome|)\">\n              <WelcomeStep />\n            </Route>\n\n            <Route path=\"/route\">\n              <RouteStep />\n            </Route>\n\n            <Route path=\"/track\">\n              <TrackStep />\n            </Route>\n\n            <Route path=\"/summary\">\n              <SummaryStep />\n            </Route>\n          </Switch>\n        </Box>\n\n        <Flex as=\"nav\" variant=\"nav\">\n          <Switch>\n            <Route path=\"/(welcome|)\">\n              <LinkButton to=\"/route\" variant=\"primary\">\n                Zaczynamy\n              </LinkButton>\n            </Route>\n\n            <Route path=\"/(route|)\">\n              <LinkButton to=\"/welcome\" variant=\"secondaryOutline\">\n                Wróć\n              </LinkButton>\n\n              <LinkButton to=\"/track\" variant=\"primary\">\n                Wyznacz trasę\n              </LinkButton>\n            </Route>\n\n            <Route path=\"/track\">\n              <LinkButton to=\"/route\" variant=\"secondaryOutline\">\n                Wróć\n              </LinkButton>\n\n              <LinkButton to=\"/summary\" variant=\"primary\">\n                Podsumowanie\n              </LinkButton>\n            </Route>\n\n            <Route path=\"/summary\">\n              <LinkButton to=\"/track\" variant=\"secondaryOutline\">\n                Wróć\n              </LinkButton>\n\n              <Button\n                onClick={() => exportData(routes, layers, analysis)}\n                sx={{\n                  marginLeft: space[\"8\"],\n                }}\n                variant=\"primaryOutline\"\n              >\n                Eksportuj dane\n              </Button>\n            </Route>\n          </Switch>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\n\nimport {\n  getSelectedPolyline,\n  findSelectedPolyline,\n} from \"../../state/routes/routesReducer\";\nimport {\n  deselectPolyline,\n  overrideAnalysis,\n} from \"../../state/routes/routesActions\";\nimport { Box, Flex, Heading } from \"rebass\";\nimport { space } from \"../../styles/theme\";\nimport { Button } from \"../Button\";\nimport { RouteFragment } from \"../../types/routes\";\n\nexport const calculateOfftrackInterval = (fragment: RouteFragment) => {\n  return [fragment.latLngs[0], fragment.latLngs[fragment.latLngs.length - 1]];\n};\n\nexport const FragmentEditor = () => {\n  const dispatch = useDispatch();\n  const selectedPolyline = useSelector(getSelectedPolyline);\n  const selectedPolylineData = useSelector(findSelectedPolyline);\n\n  if (!selectedPolyline || !selectedPolylineData) {\n    return null;\n  }\n\n  const interval = calculateOfftrackInterval(selectedPolylineData);\n  const start = moment(interval[0].meta.time);\n  const end = moment(interval[1].meta.time);\n\n  return (\n    <Box\n      variant=\"popup\"\n      sx={{\n        position: \"absolute\",\n        zIndex: 500,\n        width: \"100%\",\n        maxWidth: \"300px\",\n        left: \"500px\",\n        top: \"0\",\n      }}\n    >\n      <Box variant=\"content\">\n        <Flex\n          sx={{\n            justifyContent: \"space-between\",\n            flexDirection: \"column\",\n          }}\n        >\n          <Flex\n            sx={{\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <Heading variant=\"heading.h4\">Edycja fragmentu</Heading>\n            <Button\n              onClick={() => dispatch(deselectPolyline())}\n              variant=\"icon\"\n              icon=\"fa-fw fas fa-times\"\n              sx={{\n                marginBottom: space[\"12\"],\n              }}\n            />\n          </Flex>\n\n          <Box variant=\"container\">\n            {start.format(\"HH:mm:ss\")} - {end.format(\"HH:mm:ss\")}\n          </Box>\n\n          <Box sx={{ alignSelf: \"flex-end\" }}>\n            {selectedPolylineData.type === \"offtrack\" && (\n              <Button\n                variant=\"greenOutline\"\n                onClick={() =>\n                  dispatch(\n                    overrideAnalysis(\n                      selectedPolyline.id,\n                      selectedPolyline.analysis_id,\n                      \"ontrack\"\n                    )\n                  )\n                }\n              >\n                Zalicz jako w trasie\n              </Button>\n            )}\n            {selectedPolylineData.type === \"ontrack\" && (\n              <Button\n                variant=\"destructiveOutline\"\n                onClick={() =>\n                  dispatch(\n                    overrideAnalysis(\n                      selectedPolyline.id,\n                      selectedPolyline.analysis_id,\n                      \"offtrack\"\n                    )\n                  )\n                }\n              >\n                Zalicz jako poza trasą\n              </Button>\n            )}\n          </Box>\n        </Flex>\n      </Box>\n    </Box>\n  );\n};\n","import React, { ReactNode, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport L from \"leaflet\";\nimport { RouteLayers } from \"../types/routes\";\nimport { getRoutes } from \"../state/routes/routesReducer\";\nimport { RouteLayersContextType } from \"../types/context\";\nimport { RouteLayersContext } from \"../state/store\";\n\nconst createLayers = (): RouteLayers => {\n  const layers = new L.FeatureGroup();\n  const markers = new L.LayerGroup();\n  const offtrackFragmentsLayer = new L.LayerGroup();\n  const offtrackMarkersLayer = new L.FeatureGroup();\n  const ontrackFragmentsLayer = new L.LayerGroup();\n  const ontrackMarkersLayer = new L.FeatureGroup();\n\n  markers.addTo(layers);\n  offtrackFragmentsLayer.addTo(layers);\n  offtrackMarkersLayer.addTo(layers);\n  ontrackFragmentsLayer.addTo(layers);\n  ontrackMarkersLayer.addTo(layers);\n\n  return {\n    markers,\n    layers,\n    offtrackFragmentsLayer,\n    offtrackMarkersLayer,\n    ontrackFragmentsLayer,\n    ontrackMarkersLayer,\n    gpx: null,\n  };\n};\n\nconst emptyTrackLayer = new L.FeatureGroup();\n\nexport const RouteLayersContextProvider = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  const [{ layers, trackLayer }, setContext] = useState<RouteLayersContextType>(\n    {\n      layers: {},\n      trackLayer: emptyTrackLayer,\n      setGpx: () => {},\n    }\n  );\n\n  const setGpx = useCallback(\n    (id, gpx) => {\n      const newLayers = {\n        ...layers,\n      };\n\n      if (!layers[id]) {\n        return;\n      }\n\n      newLayers[id].gpx = gpx;\n\n      setContext({ layers: newLayers, trackLayer, setGpx });\n    },\n    [layers, trackLayer]\n  );\n\n  const routes = useSelector(getRoutes);\n\n  useEffect(() => {\n    let shouldUpdate = false;\n    const newLayers = {\n      ...layers,\n    };\n\n    Object.entries(routes).forEach(([_key, route]) => {\n      if (layers[route.id]) {\n        return;\n      }\n\n      shouldUpdate = true;\n      newLayers[route.id] = createLayers();\n    });\n\n    if (!shouldUpdate) {\n      return;\n    }\n\n    setContext({ layers: newLayers, trackLayer, setGpx });\n  }, [layers, routes, setGpx, trackLayer]);\n\n  return (\n    <RouteLayersContext.Provider value={{ layers, trackLayer, setGpx }}>\n      {children}\n    </RouteLayersContext.Provider>\n  );\n};\n","import React from \"react\";\nimport L from \"leaflet\";\n\n// For some reason, if any scss file is included before plain css files, the style tags rendered\n// by style loader are out of order, causing leaflet.css to be included after leaflet.draw.css.\n// I have no idea what's going on, will fix after ejecting, maybe.\n// TODO: try to import css from within scss to see if the order is preserved.\nimport \"leaflet/dist/leaflet.css\";\n// This should be part of the TrackDrawer component, but webpack/cra config is refusing to cooperate.\nimport \"leaflet-draw/dist/leaflet.draw.css\";\n\nimport { ThemeProvider } from \"emotion-theming\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport { LeafletMap } from \"./components/LeafletMap\";\nimport { Sidebar } from \"./components/Sidebar/Sidebar\";\nimport { FragmentEditor } from \"./components/FragmentEditor/FragmentEditor\";\nimport { RouteLayersContextProvider } from \"./components/RouteLayersContextProvider\";\n\n// stupid hack so that leaflet's images work after going through webpack\n// https://github.com/PaulLeCam/react-leaflet/issues/255#issuecomment-388492108\nimport marker from \"leaflet/dist/images/marker-icon.png\";\nimport marker2x from \"leaflet/dist/images/marker-icon-2x.png\";\nimport markerShadow from \"leaflet/dist/images/marker-shadow.png\";\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport { theme } from \"./styles/theme\";\nimport { Box } from \"rebass\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./state/store\";\n\n// @ts-ignore\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: marker2x,\n  iconUrl: marker,\n  shadowUrl: markerShadow,\n});\n\nconst store = configureStore();\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Box\n          className=\"App\"\n          sx={{\n            fontFamily: \"body\",\n            fontSize: \"body\",\n            color: \"text\",\n          }}\n        >\n          {/* TODO: do it like this: https://turbo87.github.io/sidebar-v2/examples/ */}\n          <HashRouter>\n            <RouteLayersContextProvider>\n              <Sidebar />\n              <FragmentEditor />\n              <LeafletMap />\n            </RouteLayersContextProvider>\n          </HashRouter>\n        </Box>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}